
Soft_Calibrator_A168.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000140  00800100  00002776  0000282a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002776  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000136  00800240  00800240  0000296a  2**0
                  ALLOC
  3 .eeprom       0000000d  00810000  00810000  0000296a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00002977  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000029d4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000170  00000000  00000000  00002a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000012d3  00000000  00000000  00002b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005f9  00000000  00000000  00003e53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000e33  00000000  00000000  0000444c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003f4  00000000  00000000  00005280  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000057c  00000000  00000000  00005674  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000065a  00000000  00000000  00005bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000160  00000000  00000000  0000624a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 6f 01 	jmp	0x2de	; 0x2de <__vector_1>
       8:	0c 94 79 01 	jmp	0x2f2	; 0x2f2 <__vector_2>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_9>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__vector_11>
      30:	0c 94 38 03 	jmp	0x670	; 0x670 <__vector_12>
      34:	0c 94 a5 01 	jmp	0x34a	; 0x34a <__vector_13>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 83 01 	jmp	0x306	; 0x306 <__vector_16>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 42 03 	jmp	0x684	; 0x684 <__vector_18>
      4c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__vector_19>
      50:	0c 94 04 04 	jmp	0x808	; 0x808 <__vector_20>
      54:	0c 94 10 04 	jmp	0x820	; 0x820 <__vector_21>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 1a 04 	jmp	0x834	; 0x834 <__vector_23>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2240>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2382>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d4 e0       	ldi	r29, 0x04	; 4
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	12 e0       	ldi	r17, 0x02	; 2
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e6 e7       	ldi	r30, 0x76	; 118
     18a:	f7 e2       	ldi	r31, 0x27	; 39
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	a0 34       	cpi	r26, 0x40	; 64
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	23 e0       	ldi	r18, 0x03	; 3
     19a:	a0 e4       	ldi	r26, 0x40	; 64
     19c:	b2 e0       	ldi	r27, 0x02	; 2
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a6 37       	cpi	r26, 0x76	; 118
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 2f 04 	call	0x85e	; 0x85e <main>
     1ac:	0c 94 b9 13 	jmp	0x2772	; 0x2772 <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <port_init>:
{
 ClrBit(ADCSRB,ACME);
}
//*****************************************************************
void handle_xram(void)
{
     1b4:	8f ee       	ldi	r24, 0xEF	; 239
     1b6:	84 b9       	out	0x04, r24	; 4
     1b8:	8f e3       	ldi	r24, 0x3F	; 63
     1ba:	85 b9       	out	0x05, r24	; 5
     1bc:	17 b8       	out	0x07, r1	; 7
     1be:	8f ef       	ldi	r24, 0xFF	; 255
     1c0:	88 b9       	out	0x08, r24	; 8
     1c2:	96 ee       	ldi	r25, 0xE6	; 230
     1c4:	9a b9       	out	0x0a, r25	; 10
     1c6:	8b b9       	out	0x0b, r24	; 11
     1c8:	08 95       	ret

000001ca <WDT_init>:
     1ca:	e0 e6       	ldi	r30, 0x60	; 96
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	88 e1       	ldi	r24, 0x18	; 24
     1d0:	80 83       	st	Z, r24
     1d2:	87 e0       	ldi	r24, 0x07	; 7
     1d4:	80 83       	st	Z, r24
     1d6:	08 95       	ret

000001d8 <timer0_init>:
     1d8:	14 bc       	out	0x24, r1	; 36
     1da:	80 ee       	ldi	r24, 0xE0	; 224
     1dc:	86 bd       	out	0x26, r24	; 38
     1de:	14 bc       	out	0x24, r1	; 36
     1e0:	08 95       	ret

000001e2 <delay>:
     1e2:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <Timer+0x1>
     1e6:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <Timer>
     1ea:	80 ee       	ldi	r24, 0xE0	; 224
     1ec:	86 bd       	out	0x26, r24	; 38
     1ee:	84 e0       	ldi	r24, 0x04	; 4
     1f0:	85 bd       	out	0x25, r24	; 37
     1f2:	ee e6       	ldi	r30, 0x6E	; 110
     1f4:	f0 e0       	ldi	r31, 0x00	; 0
     1f6:	80 81       	ld	r24, Z
     1f8:	81 60       	ori	r24, 0x01	; 1
     1fa:	80 83       	st	Z, r24
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <Flag_time>
     202:	80 91 46 03 	lds	r24, 0x0346	; 0x800346 <Flag_time>
     206:	81 30       	cpi	r24, 0x01	; 1
     208:	e1 f3       	breq	.-8      	; 0x202 <delay+0x20>
     20a:	ee e6       	ldi	r30, 0x6E	; 110
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	8e 7f       	andi	r24, 0xFE	; 254
     212:	80 83       	st	Z, r24
     214:	15 bc       	out	0x25, r1	; 37
     216:	08 95       	ret

00000218 <timer1_init>:
     218:	e1 e8       	ldi	r30, 0x81	; 129
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	10 82       	st	Z, r1
     21e:	8c e0       	ldi	r24, 0x0C	; 12
     220:	9f e7       	ldi	r25, 0x7F	; 127
     222:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     226:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     22a:	8c ec       	ldi	r24, 0xCC	; 204
     22c:	9f ef       	ldi	r25, 0xFF	; 255
     22e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     232:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     236:	8c ec       	ldi	r24, 0xCC	; 204
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     23e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     242:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     246:	10 82       	st	Z, r1
     248:	08 95       	ret

0000024a <timer2_init>:
     24a:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     254:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     258:	08 95       	ret

0000025a <uart0_init>:
     25a:	e1 ec       	ldi	r30, 0xC1	; 193
     25c:	f0 e0       	ldi	r31, 0x00	; 0
     25e:	10 82       	st	Z, r1
     260:	82 e0       	ldi	r24, 0x02	; 2
     262:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     266:	86 e0       	ldi	r24, 0x06	; 6
     268:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     26c:	87 e6       	ldi	r24, 0x67	; 103
     26e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     272:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     276:	88 ed       	ldi	r24, 0xD8	; 216
     278:	80 83       	st	Z, r24
     27a:	08 95       	ret

0000027c <adc_init>:
     27c:	8e ec       	ldi	r24, 0xCE	; 206
     27e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     282:	87 ef       	ldi	r24, 0xF7	; 247
     284:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     288:	eb e7       	ldi	r30, 0x7B	; 123
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	80 81       	ld	r24, Z
     28e:	80 74       	andi	r24, 0x40	; 64
     290:	80 83       	st	Z, r24
     292:	08 95       	ret

00000294 <comparator_init>:
     294:	eb e7       	ldi	r30, 0x7B	; 123
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	8f 7b       	andi	r24, 0xBF	; 191
     29c:	80 83       	st	Z, r24
     29e:	08 95       	ret

000002a0 <init_devices>:
}
//*********************************************************
//call this routine to initialise all peripherals
void init_devices(void)
{
	MCUCR = 0x00; //C0
     2a0:	15 be       	out	0x35, r1	; 53
	// XMEM  = 0x00;
//	XMCRA = 0x00;//02
//	XMCRB = 0x07;
	//stop errant interrupts until set up
	cli(); //disable all interrupts
     2a2:	f8 94       	cli
//	XDIV  = 0x00; //xtal divider
	handle_xram();
	port_init();
     2a4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <port_init>
	uart0_init();
     2a8:	0e 94 2d 01 	call	0x25a	; 0x25a <uart0_init>
	timer0_init();
     2ac:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <timer0_init>
	timer1_init();
     2b0:	0e 94 0c 01 	call	0x218	; 0x218 <timer1_init>
	timer2_init();
     2b4:	0e 94 25 01 	call	0x24a	; 0x24a <timer2_init>
	adc_init();
     2b8:	0e 94 3e 01 	call	0x27c	; 0x27c <adc_init>
	WDT_init();
     2bc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <WDT_init>
	comparator_init();
     2c0:	0e 94 4a 01 	call	0x294	; 0x294 <comparator_init>
	sei();
     2c4:	78 94       	sei

// **********memory init**********************************
//SPMCSR = 0x00;
	OSCCAL = 0xC0;
     2c6:	80 ec       	ldi	r24, 0xC0	; 192
     2c8:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__TEXT_REGION_LENGTH__+0x7e0066>
	EICRA = 0x02; //external interrupts control register A   B
     2cc:	82 e0       	ldi	r24, 0x02	; 2
     2ce:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	TIMSK1 = 0x00; //timer 3 interrupt sources
     2d2:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2 = 0x00; //timer 3 interrupt sources
     2d6:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	sei(); //re-enable interrupts
     2da:	78 94       	sei
     2dc:	08 95       	ret

000002de <__vector_1>:
#include "Step_motor.h"
#include <avr/io.h>
#include "Init.h"
//*********************************************************
ISR (INT0_vect)//external interrupt on INT0
{
     2de:	1f 92       	push	r1
     2e0:	0f 92       	push	r0
     2e2:	0f b6       	in	r0, 0x3f	; 63
     2e4:	0f 92       	push	r0
     2e6:	11 24       	eor	r1, r1
}
     2e8:	0f 90       	pop	r0
     2ea:	0f be       	out	0x3f, r0	; 63
     2ec:	0f 90       	pop	r0
     2ee:	1f 90       	pop	r1
     2f0:	18 95       	reti

000002f2 <__vector_2>:
//*********************************************************
ISR (INT1_vect)//external interrupt on INT1
{
     2f2:	1f 92       	push	r1
     2f4:	0f 92       	push	r0
     2f6:	0f b6       	in	r0, 0x3f	; 63
     2f8:	0f 92       	push	r0
     2fa:	11 24       	eor	r1, r1
}
     2fc:	0f 90       	pop	r0
     2fe:	0f be       	out	0x3f, r0	; 63
     300:	0f 90       	pop	r0
     302:	1f 90       	pop	r1
     304:	18 95       	reti

00000306 <__vector_16>:
//***********************************************************************************
ISR (TIMER0_OVF_vect)
{
     306:	1f 92       	push	r1
     308:	0f 92       	push	r0
     30a:	0f b6       	in	r0, 0x3f	; 63
     30c:	0f 92       	push	r0
     30e:	11 24       	eor	r1, r1
     310:	8f 93       	push	r24
     312:	9f 93       	push	r25
	--Timer;
     314:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <Timer>
     318:	90 91 c1 02 	lds	r25, 0x02C1	; 0x8002c1 <Timer+0x1>
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <Timer+0x1>
     322:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <Timer>
	if(Timer==0){Flag_time=0;TCCR0B = 0x00;}//
     326:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <Timer>
     32a:	90 91 c1 02 	lds	r25, 0x02C1	; 0x8002c1 <Timer+0x1>
     32e:	89 2b       	or	r24, r25
     330:	19 f4       	brne	.+6      	; 0x338 <__vector_16+0x32>
     332:	10 92 46 03 	sts	0x0346, r1	; 0x800346 <Flag_time>
     336:	15 bc       	out	0x25, r1	; 37
	TCNT0 = 0xE0;
     338:	80 ee       	ldi	r24, 0xE0	; 224
     33a:	86 bd       	out	0x26, r24	; 38
	return;
}
     33c:	9f 91       	pop	r25
     33e:	8f 91       	pop	r24
     340:	0f 90       	pop	r0
     342:	0f be       	out	0x3f, r0	; 63
     344:	0f 90       	pop	r0
     346:	1f 90       	pop	r1
     348:	18 95       	reti

0000034a <__vector_13>:
//***********************************************************************************
ISR (TIMER1_OVF_vect)
{
     34a:	1f 92       	push	r1
     34c:	0f 92       	push	r0
     34e:	0f b6       	in	r0, 0x3f	; 63
     350:	0f 92       	push	r0
     352:	11 24       	eor	r1, r1
     354:	8f 93       	push	r24
     356:	9f 93       	push	r25
     358:	af 93       	push	r26
     35a:	bf 93       	push	r27
//	SetBit(PORTB,STEP);
	TCNT1 =T_Speed;
     35c:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <T_Speed>
     360:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <T_Speed+0x1>
     364:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     368:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	if(((PIND&0x08)==0x00) && Direction==0){Status='L';Scanning='S';TCCR1B=0x0000;TCCR2B = 0x00;SetBit(PORTB,ENABLE);return;}
     36c:	4b 99       	sbic	0x09, 3	; 9
     36e:	10 c0       	rjmp	.+32     	; 0x390 <__vector_13+0x46>
     370:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <Direction>
     374:	81 11       	cpse	r24, r1
     376:	0c c0       	rjmp	.+24     	; 0x390 <__vector_13+0x46>
     378:	8c e4       	ldi	r24, 0x4C	; 76
     37a:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
     37e:	83 e5       	ldi	r24, 0x53	; 83
     380:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <Scanning>
     384:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     388:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     38c:	28 9a       	sbi	0x05, 0	; 5
     38e:	7b c0       	rjmp	.+246    	; 0x486 <__FUSE_REGION_LENGTH__+0x86>
	if(((PIND&0x10)==0x00) && Direction==1){Status='R';Scanning='S';TCCR1B=0x0000;TCCR2B = 0x00;SetBit(PORTB,ENABLE);return;}
     390:	4c 99       	sbic	0x09, 4	; 9
     392:	10 c0       	rjmp	.+32     	; 0x3b4 <__vector_13+0x6a>
     394:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <Direction>
     398:	81 30       	cpi	r24, 0x01	; 1
     39a:	61 f4       	brne	.+24     	; 0x3b4 <__vector_13+0x6a>
     39c:	82 e5       	ldi	r24, 0x52	; 82
     39e:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
     3a2:	83 e5       	ldi	r24, 0x53	; 83
     3a4:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <Scanning>
     3a8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     3ac:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     3b0:	28 9a       	sbi	0x05, 0	; 5
     3b2:	69 c0       	rjmp	.+210    	; 0x486 <__FUSE_REGION_LENGTH__+0x86>
	
	if(Work_counter==0){Status='Y';TCCR1B=0x00;TCCR2B = 0x00;SetBit(PORTB,ENABLE);return;}//
     3b4:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <Work_counter>
     3b8:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <Work_counter+0x1>
     3bc:	a0 91 6e 03 	lds	r26, 0x036E	; 0x80036e <Work_counter+0x2>
     3c0:	b0 91 6f 03 	lds	r27, 0x036F	; 0x80036f <Work_counter+0x3>
     3c4:	89 2b       	or	r24, r25
     3c6:	8a 2b       	or	r24, r26
     3c8:	8b 2b       	or	r24, r27
     3ca:	49 f4       	brne	.+18     	; 0x3de <__vector_13+0x94>
     3cc:	89 e5       	ldi	r24, 0x59	; 89
     3ce:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
     3d2:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     3d6:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     3da:	28 9a       	sbi	0x05, 0	; 5
     3dc:	54 c0       	rjmp	.+168    	; 0x486 <__FUSE_REGION_LENGTH__+0x86>
	if(Direction==0)Coordinate--;
     3de:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <Direction>
     3e2:	81 11       	cpse	r24, r1
     3e4:	14 c0       	rjmp	.+40     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
     3e6:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <Coordinate>
     3ea:	90 91 63 03 	lds	r25, 0x0363	; 0x800363 <Coordinate+0x1>
     3ee:	a0 91 64 03 	lds	r26, 0x0364	; 0x800364 <Coordinate+0x2>
     3f2:	b0 91 65 03 	lds	r27, 0x0365	; 0x800365 <Coordinate+0x3>
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	a1 09       	sbc	r26, r1
     3fa:	b1 09       	sbc	r27, r1
     3fc:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <Coordinate>
     400:	90 93 63 03 	sts	0x0363, r25	; 0x800363 <Coordinate+0x1>
     404:	a0 93 64 03 	sts	0x0364, r26	; 0x800364 <Coordinate+0x2>
     408:	b0 93 65 03 	sts	0x0365, r27	; 0x800365 <Coordinate+0x3>
     40c:	13 c0       	rjmp	.+38     	; 0x434 <__FUSE_REGION_LENGTH__+0x34>
	else Coordinate++;
     40e:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <Coordinate>
     412:	90 91 63 03 	lds	r25, 0x0363	; 0x800363 <Coordinate+0x1>
     416:	a0 91 64 03 	lds	r26, 0x0364	; 0x800364 <Coordinate+0x2>
     41a:	b0 91 65 03 	lds	r27, 0x0365	; 0x800365 <Coordinate+0x3>
     41e:	01 96       	adiw	r24, 0x01	; 1
     420:	a1 1d       	adc	r26, r1
     422:	b1 1d       	adc	r27, r1
     424:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <Coordinate>
     428:	90 93 63 03 	sts	0x0363, r25	; 0x800363 <Coordinate+0x1>
     42c:	a0 93 64 03 	sts	0x0364, r26	; 0x800364 <Coordinate+0x2>
     430:	b0 93 65 03 	sts	0x0365, r27	; 0x800365 <Coordinate+0x3>
	Work_counter--;
     434:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <Work_counter>
     438:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <Work_counter+0x1>
     43c:	a0 91 6e 03 	lds	r26, 0x036E	; 0x80036e <Work_counter+0x2>
     440:	b0 91 6f 03 	lds	r27, 0x036F	; 0x80036f <Work_counter+0x3>
     444:	01 97       	sbiw	r24, 0x01	; 1
     446:	a1 09       	sbc	r26, r1
     448:	b1 09       	sbc	r27, r1
     44a:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <Work_counter>
     44e:	90 93 6d 03 	sts	0x036D, r25	; 0x80036d <Work_counter+0x1>
     452:	a0 93 6e 03 	sts	0x036E, r26	; 0x80036e <Work_counter+0x2>
     456:	b0 93 6f 03 	sts	0x036F, r27	; 0x80036f <Work_counter+0x3>
	Up_down_speed--;
     45a:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Up_down_speed>
     45e:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Up_down_speed+0x1>
     462:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <Up_down_speed+0x2>
     466:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <Up_down_speed+0x3>
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	a1 09       	sbc	r26, r1
     46e:	b1 09       	sbc	r27, r1
     470:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <Up_down_speed>
     474:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <Up_down_speed+0x1>
     478:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <Up_down_speed+0x2>
     47c:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <Up_down_speed+0x3>

//	ClrBit(PORTB,STEP);
//	SetBit(PORTB,STEP);
	FlipBit(PORTB,STEP);
     480:	85 b1       	in	r24, 0x05	; 5
     482:	80 58       	subi	r24, 0x80	; 128
     484:	85 b9       	out	0x05, r24	; 5
	
	return;
}
     486:	bf 91       	pop	r27
     488:	af 91       	pop	r26
     48a:	9f 91       	pop	r25
     48c:	8f 91       	pop	r24
     48e:	0f 90       	pop	r0
     490:	0f be       	out	0x3f, r0	; 63
     492:	0f 90       	pop	r0
     494:	1f 90       	pop	r1
     496:	18 95       	reti

00000498 <__vector_9>:
//***********************************************************************************
ISR (TIMER2_OVF_vect)
{
     498:	1f 92       	push	r1
     49a:	0f 92       	push	r0
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	0f 92       	push	r0
     4a0:	11 24       	eor	r1, r1
     4a2:	cf 92       	push	r12
     4a4:	df 92       	push	r13
     4a6:	ef 92       	push	r14
     4a8:	ff 92       	push	r15
     4aa:	2f 93       	push	r18
     4ac:	3f 93       	push	r19
     4ae:	4f 93       	push	r20
     4b0:	5f 93       	push	r21
     4b2:	6f 93       	push	r22
     4b4:	7f 93       	push	r23
     4b6:	8f 93       	push	r24
     4b8:	9f 93       	push	r25
     4ba:	af 93       	push	r26
     4bc:	bf 93       	push	r27
     4be:	ef 93       	push	r30
     4c0:	ff 93       	push	r31

	TCNT2 = T_acselerate; //0xc8 Reload timer
     4c2:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <T_acselerate>
     4c6:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
//	FlipBit(PORTB,STEP);
	if (Up_down_speed>0)Speed++;
     4ca:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Up_down_speed>
     4ce:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Up_down_speed+0x1>
     4d2:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <Up_down_speed+0x2>
     4d6:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <Up_down_speed+0x3>
     4da:	18 16       	cp	r1, r24
     4dc:	19 06       	cpc	r1, r25
     4de:	1a 06       	cpc	r1, r26
     4e0:	1b 06       	cpc	r1, r27
     4e2:	a4 f4       	brge	.+40     	; 0x50c <__stack+0xd>
     4e4:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     4e8:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     4ec:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     4f0:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
     4f4:	01 96       	adiw	r24, 0x01	; 1
     4f6:	a1 1d       	adc	r26, r1
     4f8:	b1 1d       	adc	r27, r1
     4fa:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <Speed>
     4fe:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <Speed+0x1>
     502:	a0 93 57 03 	sts	0x0357, r26	; 0x800357 <Speed+0x2>
     506:	b0 93 58 03 	sts	0x0358, r27	; 0x800358 <Speed+0x3>
     50a:	20 c0       	rjmp	.+64     	; 0x54c <__stack+0x4d>
	else if (Up_down_speed<=0)Speed--;
     50c:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Up_down_speed>
     510:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Up_down_speed+0x1>
     514:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <Up_down_speed+0x2>
     518:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <Up_down_speed+0x3>
     51c:	18 16       	cp	r1, r24
     51e:	19 06       	cpc	r1, r25
     520:	1a 06       	cpc	r1, r26
     522:	1b 06       	cpc	r1, r27
     524:	9c f0       	brlt	.+38     	; 0x54c <__stack+0x4d>
     526:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     52a:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     52e:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     532:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	a1 09       	sbc	r26, r1
     53a:	b1 09       	sbc	r27, r1
     53c:	80 93 55 03 	sts	0x0355, r24	; 0x800355 <Speed>
     540:	90 93 56 03 	sts	0x0356, r25	; 0x800356 <Speed+0x1>
     544:	a0 93 57 03 	sts	0x0357, r26	; 0x800357 <Speed+0x2>
     548:	b0 93 58 03 	sts	0x0358, r27	; 0x800358 <Speed+0x3>

	if(Speed<Work_Parameters.Speed_min);//{ T_Speed=T_Speed_min;}//Speed=X.Speed_min;
     54c:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     550:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     554:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     558:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
	if(Speed>=Work_Parameters.Speed_max) {T_Speed=T_Speed_max;}//Speed=X.Speed_max;
     55c:	c0 90 50 03 	lds	r12, 0x0350	; 0x800350 <Work_Parameters+0x4>
     560:	d0 90 51 03 	lds	r13, 0x0351	; 0x800351 <Work_Parameters+0x5>
     564:	e1 2c       	mov	r14, r1
     566:	f1 2c       	mov	r15, r1
     568:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     56c:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     570:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     574:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
     578:	8c 15       	cp	r24, r12
     57a:	9d 05       	cpc	r25, r13
     57c:	ae 05       	cpc	r26, r14
     57e:	bf 05       	cpc	r27, r15
     580:	4c f0       	brlt	.+18     	; 0x594 <__stack+0x95>
     582:	80 91 60 03 	lds	r24, 0x0360	; 0x800360 <T_Speed_max>
     586:	90 91 61 03 	lds	r25, 0x0361	; 0x800361 <T_Speed_max+0x1>
     58a:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <T_Speed+0x1>
     58e:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <T_Speed>
     592:	14 c0       	rjmp	.+40     	; 0x5bc <__stack+0xbd>
	else T_Speed=(0xffff-TIMERCLK_3/Speed);
     594:	20 91 55 03 	lds	r18, 0x0355	; 0x800355 <Speed>
     598:	30 91 56 03 	lds	r19, 0x0356	; 0x800356 <Speed+0x1>
     59c:	40 91 57 03 	lds	r20, 0x0357	; 0x800357 <Speed+0x2>
     5a0:	50 91 58 03 	lds	r21, 0x0358	; 0x800358 <Speed+0x3>
     5a4:	62 e1       	ldi	r22, 0x12	; 18
     5a6:	7a e7       	ldi	r23, 0x7A	; 122
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__divmodsi4>
     5b0:	20 95       	com	r18
     5b2:	30 95       	com	r19
     5b4:	30 93 67 03 	sts	0x0367, r19	; 0x800367 <T_Speed+0x1>
     5b8:	20 93 66 03 	sts	0x0366, r18	; 0x800366 <T_Speed>
//	FlipBit(PORTE,SLEEP);
	if((Scanning=='A')||(Scanning=='B'))
     5bc:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <Scanning>
     5c0:	81 34       	cpi	r24, 0x41	; 65
     5c2:	21 f0       	breq	.+8      	; 0x5cc <__stack+0xcd>
     5c4:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <Scanning>
     5c8:	82 34       	cpi	r24, 0x42	; 66
     5ca:	99 f5       	brne	.+102    	; 0x632 <__stack+0x133>
	{
		Work_counter=Work_Parameters.Speed_max;
     5cc:	c0 92 6c 03 	sts	0x036C, r12	; 0x80036c <Work_counter>
     5d0:	d0 92 6d 03 	sts	0x036D, r13	; 0x80036d <Work_counter+0x1>
     5d4:	e0 92 6e 03 	sts	0x036E, r14	; 0x80036e <Work_counter+0x2>
     5d8:	f0 92 6f 03 	sts	0x036F, r15	; 0x80036f <Work_counter+0x3>
		Up_down_speed=0;
     5dc:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <Up_down_speed>
     5e0:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <Up_down_speed+0x1>
     5e4:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <Up_down_speed+0x2>
     5e8:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <Up_down_speed+0x3>
		if(Speed>=Work_Parameters.Speed_max)Speed=Work_Parameters.Speed_max;
     5ec:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     5f0:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     5f4:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     5f8:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
     5fc:	8c 15       	cp	r24, r12
     5fe:	9d 05       	cpc	r25, r13
     600:	ae 05       	cpc	r26, r14
     602:	bf 05       	cpc	r27, r15
     604:	44 f0       	brlt	.+16     	; 0x616 <__stack+0x117>
     606:	c0 92 55 03 	sts	0x0355, r12	; 0x800355 <Speed>
     60a:	d0 92 56 03 	sts	0x0356, r13	; 0x800356 <Speed+0x1>
     60e:	e0 92 57 03 	sts	0x0357, r14	; 0x800357 <Speed+0x2>
     612:	f0 92 58 03 	sts	0x0358, r15	; 0x800358 <Speed+0x3>
		if(Scanning=='A')Scanning='S';
     616:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <Scanning>
     61a:	81 34       	cpi	r24, 0x41	; 65
     61c:	19 f4       	brne	.+6      	; 0x624 <__stack+0x125>
     61e:	83 e5       	ldi	r24, 0x53	; 83
     620:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <Scanning>
		if(Scanning=='B')Scanning='P';
     624:	80 91 4a 03 	lds	r24, 0x034A	; 0x80034a <Scanning>
     628:	82 34       	cpi	r24, 0x42	; 66
     62a:	19 f4       	brne	.+6      	; 0x632 <__stack+0x133>
     62c:	80 e5       	ldi	r24, 0x50	; 80
     62e:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <Scanning>
	}
	return;//else 
}
     632:	ff 91       	pop	r31
     634:	ef 91       	pop	r30
     636:	bf 91       	pop	r27
     638:	af 91       	pop	r26
     63a:	9f 91       	pop	r25
     63c:	8f 91       	pop	r24
     63e:	7f 91       	pop	r23
     640:	6f 91       	pop	r22
     642:	5f 91       	pop	r21
     644:	4f 91       	pop	r20
     646:	3f 91       	pop	r19
     648:	2f 91       	pop	r18
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	0f 90       	pop	r0
     658:	1f 90       	pop	r1
     65a:	18 95       	reti

0000065c <__vector_11>:


ISR (TIMER1_COMPA_vect)// Frequency control
{
     65c:	1f 92       	push	r1
     65e:	0f 92       	push	r0
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	0f 92       	push	r0
     664:	11 24       	eor	r1, r1
	return;
}
     666:	0f 90       	pop	r0
     668:	0f be       	out	0x3f, r0	; 63
     66a:	0f 90       	pop	r0
     66c:	1f 90       	pop	r1
     66e:	18 95       	reti

00000670 <__vector_12>:
ISR (TIMER1_COMPB_vect)//Arc control
{	
     670:	1f 92       	push	r1
     672:	0f 92       	push	r0
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	0f 92       	push	r0
     678:	11 24       	eor	r1, r1
	return;
}
     67a:	0f 90       	pop	r0
     67c:	0f be       	out	0x3f, r0	; 63
     67e:	0f 90       	pop	r0
     680:	1f 90       	pop	r1
     682:	18 95       	reti

00000684 <__vector_18>:



//*****************************************************************
ISR (USART_RX_vect)
{
     684:	1f 92       	push	r1
     686:	0f 92       	push	r0
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	0f 92       	push	r0
     68c:	11 24       	eor	r1, r1
     68e:	2f 93       	push	r18
     690:	3f 93       	push	r19
     692:	4f 93       	push	r20
     694:	5f 93       	push	r21
     696:	6f 93       	push	r22
     698:	7f 93       	push	r23
     69a:	8f 93       	push	r24
     69c:	9f 93       	push	r25
     69e:	af 93       	push	r26
     6a0:	bf 93       	push	r27
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	ef 93       	push	r30
     6a8:	ff 93       	push	r31
unsigned  char rs_in ;
		 rs_in = UDR0;Rx_ready='1';
     6aa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     6ae:	91 e3       	ldi	r25, 0x31	; 49
     6b0:	90 93 c3 02 	sts	0x02C3, r25	; 0x8002c3 <Rx_ready>
		 rs_in =toupper(rs_in);
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <toupper>
     6ba:	ec 01       	movw	r28, r24
     6bc:	98 2f       	mov	r25, r24

		if (rs_in==0x1B) {WDTCSR|=0x18;}//ESC
     6be:	8b 31       	cpi	r24, 0x1B	; 27
     6c0:	31 f4       	brne	.+12     	; 0x6ce <__vector_18+0x4a>
     6c2:	e0 e6       	ldi	r30, 0x60	; 96
     6c4:	f0 e0       	ldi	r31, 0x00	; 0
     6c6:	80 81       	ld	r24, Z
     6c8:	88 61       	ori	r24, 0x18	; 24
     6ca:	80 83       	st	Z, r24
     6cc:	10 c0       	rjmp	.+32     	; 0x6ee <__vector_18+0x6a>
		if (rs_in==0x0d) eol|=0x01;
     6ce:	8d 30       	cpi	r24, 0x0D	; 13
     6d0:	31 f4       	brne	.+12     	; 0x6de <__vector_18+0x5a>
     6d2:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <eol>
     6d6:	81 60       	ori	r24, 0x01	; 1
     6d8:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <eol>
     6dc:	0f c0       	rjmp	.+30     	; 0x6fc <__vector_18+0x78>
		if (rs_in==0x0a) eol|=0x02;
     6de:	8a 30       	cpi	r24, 0x0A	; 10
     6e0:	31 f4       	brne	.+12     	; 0x6ee <__vector_18+0x6a>
     6e2:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <eol>
     6e6:	82 60       	ori	r24, 0x02	; 2
     6e8:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <eol>
     6ec:	07 c0       	rjmp	.+14     	; 0x6fc <__vector_18+0x78>
		if (rs_in==0x08) buff_byte--;
     6ee:	98 30       	cpi	r25, 0x08	; 8
     6f0:	29 f4       	brne	.+10     	; 0x6fc <__vector_18+0x78>
     6f2:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <buff_byte>
     6f6:	81 50       	subi	r24, 0x01	; 1
     6f8:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <buff_byte>

		if (eol==0x03)
     6fc:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <eol>
     700:	83 30       	cpi	r24, 0x03	; 3
     702:	09 f0       	breq	.+2      	; 0x706 <__vector_18+0x82>
     704:	4b c0       	rjmp	.+150    	; 0x79c <__vector_18+0x118>
		{
			
			if (buff_byte>0)
     706:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <buff_byte>
     70a:	88 23       	and	r24, r24
     70c:	09 f4       	brne	.+2      	; 0x710 <__vector_18+0x8c>
     70e:	43 c0       	rjmp	.+134    	; 0x796 <__vector_18+0x112>
		   {
			if (Data_buff_RS[0]=='S'&& Data_buff_RS[1]=='T'&& Data_buff_RS[2]=='O'&& Data_buff_RS[3]=='P')
     710:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <Data_buff_RS>
     714:	83 35       	cpi	r24, 0x53	; 83
     716:	81 f4       	brne	.+32     	; 0x738 <__vector_18+0xb4>
     718:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <Data_buff_RS+0x1>
     71c:	84 35       	cpi	r24, 0x54	; 84
     71e:	e9 f4       	brne	.+58     	; 0x75a <__vector_18+0xd6>
     720:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <Data_buff_RS+0x2>
     724:	8f 34       	cpi	r24, 0x4F	; 79
     726:	c9 f4       	brne	.+50     	; 0x75a <__vector_18+0xd6>
     728:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <Data_buff_RS+0x3>
     72c:	80 35       	cpi	r24, 0x50	; 80
     72e:	a9 f4       	brne	.+42     	; 0x75a <__vector_18+0xd6>
				{Running='A';}
     730:	81 e4       	ldi	r24, 0x41	; 65
     732:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Running>
     736:	11 c0       	rjmp	.+34     	; 0x75a <__vector_18+0xd6>
			if (Data_buff_RS[0]=='P'&& Data_buff_RS[1]=='A'&& Data_buff_RS[2]=='U'&& Data_buff_RS[3]=='S')
     738:	80 35       	cpi	r24, 0x50	; 80
     73a:	79 f4       	brne	.+30     	; 0x75a <__vector_18+0xd6>
     73c:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <Data_buff_RS+0x1>
     740:	81 34       	cpi	r24, 0x41	; 65
     742:	59 f4       	brne	.+22     	; 0x75a <__vector_18+0xd6>
     744:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <Data_buff_RS+0x2>
     748:	85 35       	cpi	r24, 0x55	; 85
     74a:	39 f4       	brne	.+14     	; 0x75a <__vector_18+0xd6>
     74c:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <Data_buff_RS+0x3>
     750:	83 35       	cpi	r24, 0x53	; 83
     752:	19 f4       	brne	.+6      	; 0x75a <__vector_18+0xd6>
			    {Running='A';}
     754:	81 e4       	ldi	r24, 0x41	; 65
     756:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Running>
			memset(Command_buff,0,sizeof(Command_buff));
     75a:	c0 e8       	ldi	r28, 0x80	; 128
     75c:	e0 e4       	ldi	r30, 0x40	; 64
     75e:	f2 e0       	ldi	r31, 0x02	; 2
     760:	df 01       	movw	r26, r30
     762:	8c 2f       	mov	r24, r28
     764:	1d 92       	st	X+, r1
     766:	8a 95       	dec	r24
     768:	e9 f7       	brne	.-6      	; 0x764 <__vector_18+0xe0>
			memcpy(Command_buff,Data_buff_RS,buff_byte);
     76a:	40 91 c5 02 	lds	r20, 0x02C5	; 0x8002c5 <buff_byte>
     76e:	50 e0       	ldi	r21, 0x00	; 0
     770:	66 ec       	ldi	r22, 0xC6	; 198
     772:	72 e0       	ldi	r23, 0x02	; 2
     774:	cf 01       	movw	r24, r30
     776:	0e 94 4b 0f 	call	0x1e96	; 0x1e96 <memcpy>
			memset(Data_buff_RS,0,sizeof(Data_buff_RS));
     77a:	e6 ec       	ldi	r30, 0xC6	; 198
     77c:	f2 e0       	ldi	r31, 0x02	; 2
     77e:	df 01       	movw	r26, r30
     780:	1d 92       	st	X+, r1
     782:	ca 95       	dec	r28
     784:	e9 f7       	brne	.-6      	; 0x780 <__vector_18+0xfc>
			Rx_ready='0';
     786:	80 e3       	ldi	r24, 0x30	; 48
     788:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <Rx_ready>
			buff_byte=0;
     78c:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <buff_byte>
			eol=0x00;
     790:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <eol>
     794:	1a c0       	rjmp	.+52     	; 0x7ca <__vector_18+0x146>
			
			}
			else {eol=0x00;return;}
     796:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <eol>
     79a:	17 c0       	rjmp	.+46     	; 0x7ca <__vector_18+0x146>
		}
		else if(isgraph(rs_in))
     79c:	ce 01       	movw	r24, r28
     79e:	99 27       	eor	r25, r25
     7a0:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <isgraph>
     7a4:	89 2b       	or	r24, r25
     7a6:	89 f0       	breq	.+34     	; 0x7ca <__vector_18+0x146>
		{
		  	if (buff_byte < sizeof (Data_buff_RS))
     7a8:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <buff_byte>
     7ac:	88 23       	and	r24, r24
     7ae:	5c f0       	brlt	.+22     	; 0x7c6 <__vector_18+0x142>
				{
	 			   Data_buff_RS[buff_byte++]= rs_in;
     7b0:	e0 91 c5 02 	lds	r30, 0x02C5	; 0x8002c5 <buff_byte>
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	8e 0f       	add	r24, r30
     7b8:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <buff_byte>
     7bc:	f0 e0       	ldi	r31, 0x00	; 0
     7be:	ea 53       	subi	r30, 0x3A	; 58
     7c0:	fd 4f       	sbci	r31, 0xFD	; 253
     7c2:	c0 83       	st	Z, r28
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <__vector_18+0x146>
				}
		  	else	buff_byte = 0;
     7c6:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <buff_byte>
//		else;
		

		
		return;
}
     7ca:	ff 91       	pop	r31
     7cc:	ef 91       	pop	r30
     7ce:	df 91       	pop	r29
     7d0:	cf 91       	pop	r28
     7d2:	bf 91       	pop	r27
     7d4:	af 91       	pop	r26
     7d6:	9f 91       	pop	r25
     7d8:	8f 91       	pop	r24
     7da:	7f 91       	pop	r23
     7dc:	6f 91       	pop	r22
     7de:	5f 91       	pop	r21
     7e0:	4f 91       	pop	r20
     7e2:	3f 91       	pop	r19
     7e4:	2f 91       	pop	r18
     7e6:	0f 90       	pop	r0
     7e8:	0f be       	out	0x3f, r0	; 63
     7ea:	0f 90       	pop	r0
     7ec:	1f 90       	pop	r1
     7ee:	18 95       	reti

000007f0 <__vector_19>:
//*****************************************************************
ISR (USART_UDRE_vect,)
{
     7f0:	1f 92       	push	r1
     7f2:	0f 92       	push	r0
     7f4:	0f b6       	in	r0, 0x3f	; 63
     7f6:	0f 92       	push	r0
     7f8:	11 24       	eor	r1, r1
 Tx_ready=0;
     7fa:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <Tx_ready>
//  FlipBit(PORTD,LED1);
}
     7fe:	0f 90       	pop	r0
     800:	0f be       	out	0x3f, r0	; 63
     802:	0f 90       	pop	r0
     804:	1f 90       	pop	r1
     806:	18 95       	reti

00000808 <__vector_20>:
//*****************************************************************
ISR (USART_TX_vect,)
{
     808:	1f 92       	push	r1
     80a:	0f 92       	push	r0
     80c:	0f b6       	in	r0, 0x3f	; 63
     80e:	0f 92       	push	r0
     810:	11 24       	eor	r1, r1
 	 Tx_ready=0;
     812:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <Tx_ready>
//	 FlipBit(PORTD,LED4);
}
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <__vector_21>:
//*********************************************************
ISR (ADC_vect,)
{
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
//	printf ("ADC=%d\r\n",ADC);
//	SetBit(ACSR,ACIE);
}
     82a:	0f 90       	pop	r0
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	0f 90       	pop	r0
     830:	1f 90       	pop	r1
     832:	18 95       	reti

00000834 <__vector_23>:
//*********************************************************
ISR (ANALOG_COMP_vect,)
{
     834:	1f 92       	push	r1
     836:	0f 92       	push	r0
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	0f 92       	push	r0
     83c:	11 24       	eor	r1, r1
//		SetBit(ADCSRA,ADSC);

//	printf ("Comparator work\r\n");
//	ClrBit(PORTD,Buzzer);
//	SetBit(ACSR,ACIE);//Interrupt enable
}
     83e:	0f 90       	pop	r0
     840:	0f be       	out	0x3f, r0	; 63
     842:	0f 90       	pop	r0
     844:	1f 90       	pop	r1
     846:	18 95       	reti

00000848 <uart_putchar>:
	MCUSR=0x00;
}
//*********************************************************
void External_control(char SET_EX)
{
	EICRA=0x00;
     848:	e0 ec       	ldi	r30, 0xC0	; 192
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	90 81       	ld	r25, Z
     84e:	95 ff       	sbrs	r25, 5
     850:	fd cf       	rjmp	.-6      	; 0x84c <uart_putchar+0x4>
     852:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     856:	29 98       	cbi	0x05, 1	; 5
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	08 95       	ret

0000085e <main>:

}
*/
//******************************************************************************
int main(void)//int
{
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	cd b7       	in	r28, 0x3d	; 61
     864:	de b7       	in	r29, 0x3e	; 62
     866:	28 97       	sbiw	r28, 0x08	; 8
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	de bf       	out	0x3e, r29	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	cd bf       	out	0x3d, r28	; 61
	init_devices();
     872:	0e 94 50 01 	call	0x2a0	; 0x2a0 <init_devices>

	
		
	stdout = &mystdout;
     876:	e0 e7       	ldi	r30, 0x70	; 112
     878:	f3 e0       	ldi	r31, 0x03	; 3
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	91 e0       	ldi	r25, 0x01	; 1
     87e:	93 83       	std	Z+3, r25	; 0x03
     880:	82 83       	std	Z+2, r24	; 0x02
	stdin  = NULL;
     882:	11 82       	std	Z+1, r1	; 0x01
     884:	10 82       	st	Z, r1
	stderr = NULL;
     886:	15 82       	std	Z+5, r1	; 0x05
     888:	14 82       	std	Z+4, r1	; 0x04

	memset(Command_buff,0,sizeof(Command_buff));
     88a:	80 e8       	ldi	r24, 0x80	; 128
     88c:	e0 e4       	ldi	r30, 0x40	; 64
     88e:	f2 e0       	ldi	r31, 0x02	; 2
     890:	df 01       	movw	r26, r30
     892:	1d 92       	st	X+, r1
     894:	8a 95       	dec	r24
     896:	e9 f7       	brne	.-6      	; 0x892 <main+0x34>
	buff_byte=0;
     898:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <buff_byte>
	eol=0x00;
     89c:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <eol>
	Running='I';
     8a0:	89 e4       	ldi	r24, 0x49	; 73
     8a2:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Running>
	Rx_ready='1';
     8a6:	81 e3       	ldi	r24, 0x31	; 49
     8a8:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <Rx_ready>
	Status='Y';
     8ac:	89 e5       	ldi	r24, 0x59	; 89
     8ae:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
	ComNumber='0';	
     8b2:	80 e3       	ldi	r24, 0x30	; 48
     8b4:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <ComNumber>
	eeprom_read_block ((void*)&Work_Parameters,(void*)&Store_Parameters,sizeof(Space));
     8b8:	49 e0       	ldi	r20, 0x09	; 9
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	64 e0       	ldi	r22, 0x04	; 4
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	8c e4       	ldi	r24, 0x4C	; 76
     8c2:	93 e0       	ldi	r25, 0x03	; 3
     8c4:	0e 94 7e 13 	call	0x26fc	; 0x26fc <eeprom_read_block>
	Motor_set(Work_Parameters.Microstep);
     8c8:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <Work_Parameters+0x8>
     8cc:	0e 94 a7 08 	call	0x114e	; 0x114e <Motor_set>
	Coordinate=Read_coordinate();
     8d0:	0e 94 bb 08 	call	0x1176	; 0x1176 <Read_coordinate>
     8d4:	60 93 62 03 	sts	0x0362, r22	; 0x800362 <Coordinate>
     8d8:	70 93 63 03 	sts	0x0363, r23	; 0x800363 <Coordinate+0x1>
     8dc:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <Coordinate+0x2>
     8e0:	90 93 65 03 	sts	0x0365, r25	; 0x800365 <Coordinate+0x3>
	printf ("RUAM %c\r\n",Status);
	continue;
}

if (!strncmp(Command_buff,"AMSC",4))
{	float F_DX=1;
     8e4:	0f 2e       	mov	r0, r31
     8e6:	41 2c       	mov	r4, r1
     8e8:	51 2c       	mov	r5, r1
     8ea:	f0 e8       	ldi	r31, 0x80	; 128
     8ec:	6f 2e       	mov	r6, r31
     8ee:	ff e3       	ldi	r31, 0x3F	; 63
     8f0:	7f 2e       	mov	r7, r31
     8f2:	f0 2d       	mov	r31, r0
	sscanf (Command_buff+4,"%f",&F_DX);
     8f4:	fe 01       	movw	r30, r28
     8f6:	31 96       	adiw	r30, 0x01	; 1
     8f8:	4f 01       	movw	r8, r30
     8fa:	0f 2e       	mov	r0, r31
     8fc:	f5 eb       	ldi	r31, 0xB5	; 181
     8fe:	2f 2e       	mov	r2, r31
     900:	f1 e0       	ldi	r31, 0x01	; 1
     902:	3f 2e       	mov	r3, r31
     904:	f0 2d       	mov	r31, r0
     906:	0f 2e       	mov	r0, r31
     908:	f4 e4       	ldi	r31, 0x44	; 68
     90a:	af 2e       	mov	r10, r31
     90c:	f2 e0       	ldi	r31, 0x02	; 2
     90e:	bf 2e       	mov	r11, r31
     910:	f0 2d       	mov	r31, r0
	Next_coordinate=(long)Work_Parameters.Unit*F_DX;
     912:	0f 2e       	mov	r0, r31
     914:	fc e4       	ldi	r31, 0x4C	; 76
     916:	cf 2e       	mov	r12, r31
     918:	f3 e0       	ldi	r31, 0x03	; 3
     91a:	df 2e       	mov	r13, r31
     91c:	f0 2d       	mov	r31, r0
		sscanf (Command_buff+4,"%u",&TD_timer);
		while(Running=='I')
			{
//			U_termo=COE_ADC*ADC;
//			printf ("RDTD %1.2f\r\n",U_termo);//ADC
			printf ("RDTD %u\r\n",ADC);//ADC
     91e:	0f 2e       	mov	r0, r31
     920:	f8 e7       	ldi	r31, 0x78	; 120
     922:	ef 2e       	mov	r14, r31
     924:	f1 2c       	mov	r15, r1
     926:	f0 2d       	mov	r31, r0
     928:	0d e6       	ldi	r16, 0x6D	; 109
     92a:	11 e0       	ldi	r17, 0x01	; 1
*/
	
 for (;;)
 {
//*********************WAIT COMMAND**************************************
	while(Rx_ready=='1');
     92c:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <Rx_ready>
     930:	81 33       	cpi	r24, 0x31	; 49
     932:	e1 f3       	breq	.-8      	; 0x92c <main+0xce>
	
	Rx_ready='1';
     934:	81 e3       	ldi	r24, 0x31	; 49
     936:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <Rx_ready>
	
//**************************************************************************************************
   	if (!strncmp(Command_buff,"IIRD",4))
     93a:	44 e0       	ldi	r20, 0x04	; 4
     93c:	50 e0       	ldi	r21, 0x00	; 0
     93e:	6a e3       	ldi	r22, 0x3A	; 58
     940:	71 e0       	ldi	r23, 0x01	; 1
     942:	80 e4       	ldi	r24, 0x40	; 64
     944:	92 e0       	ldi	r25, 0x02	; 2
     946:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     94a:	89 2b       	or	r24, r25
     94c:	61 f4       	brne	.+24     	; 0x966 <main+0x108>
	{	memset(Command_buff,0,sizeof(Command_buff));
     94e:	80 e8       	ldi	r24, 0x80	; 128
     950:	e0 e4       	ldi	r30, 0x40	; 64
     952:	f2 e0       	ldi	r31, 0x02	; 2
     954:	df 01       	movw	r26, r30
     956:	1d 92       	st	X+, r1
     958:	8a 95       	dec	r24
     95a:	e9 f7       	brne	.-6      	; 0x956 <main+0xf8>
		printf("RDII Calibrator V1.0,9600\r\n");//BODE rate,monochromators,COUNT,ADC,SD,thermometer
     95c:	8f e3       	ldi	r24, 0x3F	; 63
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <puts>
		continue;
     964:	e3 cf       	rjmp	.-58     	; 0x92c <main+0xce>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"STOP",4))
     966:	44 e0       	ldi	r20, 0x04	; 4
     968:	50 e0       	ldi	r21, 0x00	; 0
     96a:	6a e5       	ldi	r22, 0x5A	; 90
     96c:	71 e0       	ldi	r23, 0x01	; 1
     96e:	80 e4       	ldi	r24, 0x40	; 64
     970:	92 e0       	ldi	r25, 0x02	; 2
     972:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     976:	89 2b       	or	r24, r25
     978:	91 f4       	brne	.+36     	; 0x99e <main+0x140>
	{
		Rx_ready='1';memset(Command_buff,0,sizeof(Command_buff));
     97a:	81 e3       	ldi	r24, 0x31	; 49
     97c:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <Rx_ready>
     980:	80 e8       	ldi	r24, 0x80	; 128
     982:	e0 e4       	ldi	r30, 0x40	; 64
     984:	f2 e0       	ldi	r31, 0x02	; 2
     986:	df 01       	movw	r26, r30
     988:	1d 92       	st	X+, r1
     98a:	8a 95       	dec	r24
     98c:	e9 f7       	brne	.-6      	; 0x988 <main+0x12a>
		Running='I';
     98e:	89 e4       	ldi	r24, 0x49	; 73
     990:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Running>
		printf ("STOP\r\n");
     994:	8f e5       	ldi	r24, 0x5F	; 95
     996:	91 e0       	ldi	r25, 0x01	; 1
     998:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <puts>
		continue;
     99c:	c7 cf       	rjmp	.-114    	; 0x92c <main+0xce>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"TDRD",4))
     99e:	44 e0       	ldi	r20, 0x04	; 4
     9a0:	50 e0       	ldi	r21, 0x00	; 0
     9a2:	65 e6       	ldi	r22, 0x65	; 101
     9a4:	71 e0       	ldi	r23, 0x01	; 1
     9a6:	80 e4       	ldi	r24, 0x40	; 64
     9a8:	92 e0       	ldi	r25, 0x02	; 2
     9aa:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     9ae:	89 2b       	or	r24, r25
     9b0:	69 f5       	brne	.+90     	; 0xa0c <main+0x1ae>
	{	unsigned int TD_timer;// float U_termo;
		sscanf (Command_buff+4,"%u",&TD_timer);
     9b2:	9f 92       	push	r9
     9b4:	8f 92       	push	r8
     9b6:	8a e6       	ldi	r24, 0x6A	; 106
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	9f 93       	push	r25
     9bc:	8f 93       	push	r24
     9be:	bf 92       	push	r11
     9c0:	af 92       	push	r10
     9c2:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
		while(Running=='I')
     9c6:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     9ca:	0f 90       	pop	r0
     9cc:	0f 90       	pop	r0
     9ce:	0f 90       	pop	r0
     9d0:	0f 90       	pop	r0
     9d2:	0f 90       	pop	r0
     9d4:	0f 90       	pop	r0
     9d6:	89 34       	cpi	r24, 0x49	; 73
     9d8:	a9 f4       	brne	.+42     	; 0xa04 <main+0x1a6>
			{
//			U_termo=COE_ADC*ADC;
//			printf ("RDTD %1.2f\r\n",U_termo);//ADC
			printf ("RDTD %u\r\n",ADC);//ADC
     9da:	f7 01       	movw	r30, r14
     9dc:	80 81       	ld	r24, Z
     9de:	91 81       	ldd	r25, Z+1	; 0x01
     9e0:	9f 93       	push	r25
     9e2:	8f 93       	push	r24
     9e4:	1f 93       	push	r17
     9e6:	0f 93       	push	r16
     9e8:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
			delay(TD_timer);
     9ec:	89 81       	ldd	r24, Y+1	; 0x01
     9ee:	9a 81       	ldd	r25, Y+2	; 0x02
     9f0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <delay>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"TDRD",4))
	{	unsigned int TD_timer;// float U_termo;
		sscanf (Command_buff+4,"%u",&TD_timer);
		while(Running=='I')
     9f4:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     9f8:	0f 90       	pop	r0
     9fa:	0f 90       	pop	r0
     9fc:	0f 90       	pop	r0
     9fe:	0f 90       	pop	r0
     a00:	89 34       	cpi	r24, 0x49	; 73
     a02:	59 f3       	breq	.-42     	; 0x9da <main+0x17c>
//			U_termo=COE_ADC*ADC;
//			printf ("RDTD %1.2f\r\n",U_termo);//ADC
			printf ("RDTD %u\r\n",ADC);//ADC
			delay(TD_timer);
			}
		Running='I';
     a04:	89 e4       	ldi	r24, 0x49	; 73
     a06:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Running>
     a0a:	90 cf       	rjmp	.-224    	; 0x92c <main+0xce>
		continue;
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"AMCF",4))
     a0c:	44 e0       	ldi	r20, 0x04	; 4
     a0e:	50 e0       	ldi	r21, 0x00	; 0
     a10:	67 e7       	ldi	r22, 0x77	; 119
     a12:	71 e0       	ldi	r23, 0x01	; 1
     a14:	80 e4       	ldi	r24, 0x40	; 64
     a16:	92 e0       	ldi	r25, 0x02	; 2
     a18:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     a1c:	89 2b       	or	r24, r25
     a1e:	09 f0       	breq	.+2      	; 0xa22 <main+0x1c4>
     a20:	47 c0       	rjmp	.+142    	; 0xab0 <main+0x252>
	{	sscanf (Command_buff+4,"%u,%u,%u,%u,%c",&Work_Parameters.Unit,&Work_Parameters.Speed_min,&Work_Parameters.Speed_max,&Work_Parameters.Acselerate,&Work_Parameters.Microstep);
     a22:	84 e5       	ldi	r24, 0x54	; 84
     a24:	93 e0       	ldi	r25, 0x03	; 3
     a26:	9f 93       	push	r25
     a28:	8f 93       	push	r24
     a2a:	82 e5       	ldi	r24, 0x52	; 82
     a2c:	93 e0       	ldi	r25, 0x03	; 3
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	80 e5       	ldi	r24, 0x50	; 80
     a34:	93 e0       	ldi	r25, 0x03	; 3
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	8e e4       	ldi	r24, 0x4E	; 78
     a3c:	93 e0       	ldi	r25, 0x03	; 3
     a3e:	9f 93       	push	r25
     a40:	8f 93       	push	r24
     a42:	df 92       	push	r13
     a44:	cf 92       	push	r12
     a46:	8c e7       	ldi	r24, 0x7C	; 124
     a48:	91 e0       	ldi	r25, 0x01	; 1
     a4a:	9f 93       	push	r25
     a4c:	8f 93       	push	r24
     a4e:	bf 92       	push	r11
     a50:	af 92       	push	r10
     a52:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
		Motor_set(Work_Parameters.Microstep);
     a56:	d6 01       	movw	r26, r12
     a58:	18 96       	adiw	r26, 0x08	; 8
     a5a:	8c 91       	ld	r24, X
     a5c:	0e 94 a7 08 	call	0x114e	; 0x114e <Motor_set>
		if(Work_Parameters.Acselerate<31)Work_Parameters.Acselerate=31;
     a60:	0f b6       	in	r0, 0x3f	; 63
     a62:	f8 94       	cli
     a64:	de bf       	out	0x3e, r29	; 62
     a66:	0f be       	out	0x3f, r0	; 63
     a68:	cd bf       	out	0x3d, r28	; 61
     a6a:	d6 01       	movw	r26, r12
     a6c:	16 96       	adiw	r26, 0x06	; 6
     a6e:	8d 91       	ld	r24, X+
     a70:	9c 91       	ld	r25, X
     a72:	17 97       	sbiw	r26, 0x07	; 7
     a74:	4f 97       	sbiw	r24, 0x1f	; 31
     a76:	30 f4       	brcc	.+12     	; 0xa84 <main+0x226>
     a78:	8f e1       	ldi	r24, 0x1F	; 31
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	17 96       	adiw	r26, 0x07	; 7
     a7e:	9c 93       	st	X, r25
     a80:	8e 93       	st	-X, r24
     a82:	16 97       	sbiw	r26, 0x06	; 6
		eeprom_write_block ((void*)&Work_Parameters,(void*)&Store_Parameters,sizeof(Space));//
     a84:	49 e0       	ldi	r20, 0x09	; 9
     a86:	50 e0       	ldi	r21, 0x00	; 0
     a88:	64 e0       	ldi	r22, 0x04	; 4
     a8a:	70 e0       	ldi	r23, 0x00	; 0
     a8c:	c6 01       	movw	r24, r12
     a8e:	0e 94 94 13 	call	0x2728	; 0x2728 <eeprom_write_block>
		printf ("CFAM %c\r\n",Status);
     a92:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     a96:	1f 92       	push	r1
     a98:	8f 93       	push	r24
     a9a:	8b e8       	ldi	r24, 0x8B	; 139
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	9f 93       	push	r25
     aa0:	8f 93       	push	r24
     aa2:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
		continue;
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	3e cf       	rjmp	.-388    	; 0x92c <main+0xce>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"AMST",4))
     ab0:	44 e0       	ldi	r20, 0x04	; 4
     ab2:	50 e0       	ldi	r21, 0x00	; 0
     ab4:	65 e9       	ldi	r22, 0x95	; 149
     ab6:	71 e0       	ldi	r23, 0x01	; 1
     ab8:	80 e4       	ldi	r24, 0x40	; 64
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     ac0:	89 2b       	or	r24, r25
     ac2:	01 f5       	brne	.+64     	; 0xb04 <main+0x2a6>
	{  	printf ("STAM %u,%u,%u,%u,%c\r\n",Work_Parameters.Unit,Work_Parameters.Speed_min,Work_Parameters.Speed_max,Work_Parameters.Acselerate,Work_Parameters.Microstep);
     ac4:	f6 01       	movw	r30, r12
     ac6:	80 85       	ldd	r24, Z+8	; 0x08
     ac8:	1f 92       	push	r1
     aca:	8f 93       	push	r24
     acc:	87 81       	ldd	r24, Z+7	; 0x07
     ace:	8f 93       	push	r24
     ad0:	86 81       	ldd	r24, Z+6	; 0x06
     ad2:	8f 93       	push	r24
     ad4:	85 81       	ldd	r24, Z+5	; 0x05
     ad6:	8f 93       	push	r24
     ad8:	84 81       	ldd	r24, Z+4	; 0x04
     ada:	8f 93       	push	r24
     adc:	83 81       	ldd	r24, Z+3	; 0x03
     ade:	8f 93       	push	r24
     ae0:	82 81       	ldd	r24, Z+2	; 0x02
     ae2:	8f 93       	push	r24
     ae4:	81 81       	ldd	r24, Z+1	; 0x01
     ae6:	8f 93       	push	r24
     ae8:	80 81       	ld	r24, Z
     aea:	8f 93       	push	r24
     aec:	8a e9       	ldi	r24, 0x9A	; 154
     aee:	91 e0       	ldi	r25, 0x01	; 1
     af0:	9f 93       	push	r25
     af2:	8f 93       	push	r24
     af4:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
		continue;
     af8:	0f b6       	in	r0, 0x3f	; 63
     afa:	f8 94       	cli
     afc:	de bf       	out	0x3e, r29	; 62
     afe:	0f be       	out	0x3f, r0	; 63
     b00:	cd bf       	out	0x3d, r28	; 61
     b02:	14 cf       	rjmp	.-472    	; 0x92c <main+0xce>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"AMWR",4))
     b04:	44 e0       	ldi	r20, 0x04	; 4
     b06:	50 e0       	ldi	r21, 0x00	; 0
     b08:	60 eb       	ldi	r22, 0xB0	; 176
     b0a:	71 e0       	ldi	r23, 0x01	; 1
     b0c:	80 e4       	ldi	r24, 0x40	; 64
     b0e:	92 e0       	ldi	r25, 0x02	; 2
     b10:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     b14:	89 2b       	or	r24, r25
     b16:	09 f0       	breq	.+2      	; 0xb1a <main+0x2bc>
     b18:	41 c0       	rjmp	.+130    	; 0xb9c <main+0x33e>
	{	float F_DX;
		sscanf (Command_buff+4,"%f",&F_DX);//&F_DZ,&F_A,&F_B
     b1a:	9f 92       	push	r9
     b1c:	8f 92       	push	r8
     b1e:	3f 92       	push	r3
     b20:	2f 92       	push	r2
     b22:	bf 92       	push	r11
     b24:	af 92       	push	r10
     b26:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
		Coordinate=(long)(F_DX*Work_Parameters.Unit);
     b2a:	d6 01       	movw	r26, r12
     b2c:	6d 91       	ld	r22, X+
     b2e:	7c 91       	ld	r23, X
     b30:	80 e0       	ldi	r24, 0x00	; 0
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	0e 94 68 09 	call	0x12d0	; 0x12d0 <__floatunsisf>
     b38:	29 81       	ldd	r18, Y+1	; 0x01
     b3a:	3a 81       	ldd	r19, Y+2	; 0x02
     b3c:	4b 81       	ldd	r20, Y+3	; 0x03
     b3e:	5c 81       	ldd	r21, Y+4	; 0x04
     b40:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__mulsf3>
     b44:	0e 94 32 09 	call	0x1264	; 0x1264 <__fixsfsi>
     b48:	60 93 62 03 	sts	0x0362, r22	; 0x800362 <Coordinate>
     b4c:	70 93 63 03 	sts	0x0363, r23	; 0x800363 <Coordinate+0x1>
     b50:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <Coordinate+0x2>
     b54:	90 93 65 03 	sts	0x0365, r25	; 0x800365 <Coordinate+0x3>
		Write_coordinate((void*)&Coordinate);
     b58:	82 e6       	ldi	r24, 0x62	; 98
     b5a:	93 e0       	ldi	r25, 0x03	; 3
     b5c:	0e 94 b1 08 	call	0x1162	; 0x1162 <Write_coordinate>
		printf ("RDAM %6.2f\r\n",1234.7);//(float)Coordinate/Work_Parameters.Unit
     b60:	84 e4       	ldi	r24, 0x44	; 68
     b62:	8f 93       	push	r24
     b64:	8a e9       	ldi	r24, 0x9A	; 154
     b66:	8f 93       	push	r24
     b68:	86 e5       	ldi	r24, 0x56	; 86
     b6a:	8f 93       	push	r24
     b6c:	86 e6       	ldi	r24, 0x66	; 102
     b6e:	8f 93       	push	r24
     b70:	88 eb       	ldi	r24, 0xB8	; 184
     b72:	91 e0       	ldi	r25, 0x01	; 1
     b74:	9f 93       	push	r25
     b76:	8f 93       	push	r24
     b78:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
		printf ("WRAM %c\r\n",Status);
     b7c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     b80:	1f 92       	push	r1
     b82:	8f 93       	push	r24
     b84:	85 ec       	ldi	r24, 0xC5	; 197
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	9f 93       	push	r25
     b8a:	8f 93       	push	r24
     b8c:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	f8 94       	cli
     b94:	de bf       	out	0x3e, r29	; 62
     b96:	0f be       	out	0x3f, r0	; 63
     b98:	cd bf       	out	0x3d, r28	; 61
     b9a:	c8 ce       	rjmp	.-624    	; 0x92c <main+0xce>
		continue;
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"AMRD",4))
     b9c:	44 e0       	ldi	r20, 0x04	; 4
     b9e:	50 e0       	ldi	r21, 0x00	; 0
     ba0:	6f ec       	ldi	r22, 0xCF	; 207
     ba2:	71 e0       	ldi	r23, 0x01	; 1
     ba4:	80 e4       	ldi	r24, 0x40	; 64
     ba6:	92 e0       	ldi	r25, 0x02	; 2
     ba8:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     bac:	89 2b       	or	r24, r25
     bae:	71 f5       	brne	.+92     	; 0xc0c <main+0x3ae>
	{	printf ("RDAM %6.2f\r\n",(float)Coordinate/Work_Parameters.Unit);
     bb0:	60 91 62 03 	lds	r22, 0x0362	; 0x800362 <Coordinate>
     bb4:	70 91 63 03 	lds	r23, 0x0363	; 0x800363 <Coordinate+0x1>
     bb8:	80 91 64 03 	lds	r24, 0x0364	; 0x800364 <Coordinate+0x2>
     bbc:	90 91 65 03 	lds	r25, 0x0365	; 0x800365 <Coordinate+0x3>
     bc0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__floatsisf>
     bc4:	6d 83       	std	Y+5, r22	; 0x05
     bc6:	7e 83       	std	Y+6, r23	; 0x06
     bc8:	8f 83       	std	Y+7, r24	; 0x07
     bca:	98 87       	std	Y+8, r25	; 0x08
     bcc:	d6 01       	movw	r26, r12
     bce:	6d 91       	ld	r22, X+
     bd0:	7c 91       	ld	r23, X
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 68 09 	call	0x12d0	; 0x12d0 <__floatunsisf>
     bda:	9b 01       	movw	r18, r22
     bdc:	ac 01       	movw	r20, r24
     bde:	6d 81       	ldd	r22, Y+5	; 0x05
     be0:	7e 81       	ldd	r23, Y+6	; 0x06
     be2:	8f 81       	ldd	r24, Y+7	; 0x07
     be4:	98 85       	ldd	r25, Y+8	; 0x08
     be6:	0e 94 c0 08 	call	0x1180	; 0x1180 <__divsf3>
     bea:	9f 93       	push	r25
     bec:	8f 93       	push	r24
     bee:	7f 93       	push	r23
     bf0:	6f 93       	push	r22
     bf2:	88 eb       	ldi	r24, 0xB8	; 184
     bf4:	91 e0       	ldi	r25, 0x01	; 1
     bf6:	9f 93       	push	r25
     bf8:	8f 93       	push	r24
     bfa:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
		continue;
     bfe:	0f 90       	pop	r0
     c00:	0f 90       	pop	r0
     c02:	0f 90       	pop	r0
     c04:	0f 90       	pop	r0
     c06:	0f 90       	pop	r0
     c08:	0f 90       	pop	r0
     c0a:	90 ce       	rjmp	.-736    	; 0x92c <main+0xce>
	}
//**************************************************************************************************
	if (!strncmp(Command_buff,"AMTS",4))
     c0c:	44 e0       	ldi	r20, 0x04	; 4
     c0e:	50 e0       	ldi	r21, 0x00	; 0
     c10:	64 ed       	ldi	r22, 0xD4	; 212
     c12:	71 e0       	ldi	r23, 0x01	; 1
     c14:	80 e4       	ldi	r24, 0x40	; 64
     c16:	92 e0       	ldi	r25, 0x02	; 2
     c18:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     c1c:	89 2b       	or	r24, r25
     c1e:	09 f5       	brne	.+66     	; 0xc62 <main+0x404>
	{	
		long abc=1;
     c20:	21 e0       	ldi	r18, 0x01	; 1
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	40 e0       	ldi	r20, 0x00	; 0
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	29 83       	std	Y+1, r18	; 0x01
     c2a:	3a 83       	std	Y+2, r19	; 0x02
     c2c:	4b 83       	std	Y+3, r20	; 0x03
     c2e:	5c 83       	std	Y+4, r21	; 0x04
		sscanf (Command_buff+4,"%ld",&abc);
     c30:	9f 92       	push	r9
     c32:	8f 92       	push	r8
     c34:	89 ed       	ldi	r24, 0xD9	; 217
     c36:	91 e0       	ldi	r25, 0x01	; 1
     c38:	9f 93       	push	r25
     c3a:	8f 93       	push	r24
     c3c:	bf 92       	push	r11
     c3e:	af 92       	push	r10
     c40:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
		Status=Motor_scan (abc);
     c44:	69 81       	ldd	r22, Y+1	; 0x01
     c46:	7a 81       	ldd	r23, Y+2	; 0x02
     c48:	8b 81       	ldd	r24, Y+3	; 0x03
     c4a:	9c 81       	ldd	r25, Y+4	; 0x04
     c4c:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <Motor_scan>
     c50:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
     c54:	0f 90       	pop	r0
     c56:	0f 90       	pop	r0
     c58:	0f 90       	pop	r0
     c5a:	0f 90       	pop	r0
     c5c:	0f 90       	pop	r0
     c5e:	0f 90       	pop	r0
     c60:	65 ce       	rjmp	.-822    	; 0x92c <main+0xce>
		continue;
	}

if (!strncmp(Command_buff,"AMGO",4))
     c62:	44 e0       	ldi	r20, 0x04	; 4
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	6d ed       	ldi	r22, 0xDD	; 221
     c68:	71 e0       	ldi	r23, 0x01	; 1
     c6a:	80 e4       	ldi	r24, 0x40	; 64
     c6c:	92 e0       	ldi	r25, 0x02	; 2
     c6e:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     c72:	89 2b       	or	r24, r25
     c74:	09 f0       	breq	.+2      	; 0xc78 <main+0x41a>
     c76:	71 c0       	rjmp	.+226    	; 0xd5a <main+0x4fc>
{	float F_DX=1;
     c78:	49 82       	std	Y+1, r4	; 0x01
     c7a:	5a 82       	std	Y+2, r5	; 0x02
     c7c:	6b 82       	std	Y+3, r6	; 0x03
     c7e:	7c 82       	std	Y+4, r7	; 0x04
	sscanf (Command_buff+4,"%f",&F_DX);
     c80:	9f 92       	push	r9
     c82:	8f 92       	push	r8
     c84:	3f 92       	push	r3
     c86:	2f 92       	push	r2
     c88:	bf 92       	push	r11
     c8a:	af 92       	push	r10
     c8c:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
	Next_coordinate=(long)Work_Parameters.Unit*F_DX;
     c90:	d6 01       	movw	r26, r12
     c92:	6d 91       	ld	r22, X+
     c94:	7c 91       	ld	r23, X
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__floatsisf>
     c9e:	29 81       	ldd	r18, Y+1	; 0x01
     ca0:	3a 81       	ldd	r19, Y+2	; 0x02
     ca2:	4b 81       	ldd	r20, Y+3	; 0x03
     ca4:	5c 81       	ldd	r21, Y+4	; 0x04
     ca6:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__mulsf3>
     caa:	0e 94 32 09 	call	0x1264	; 0x1264 <__fixsfsi>
     cae:	60 93 5c 03 	sts	0x035C, r22	; 0x80035c <Next_coordinate>
     cb2:	70 93 5d 03 	sts	0x035D, r23	; 0x80035d <Next_coordinate+0x1>
     cb6:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <Next_coordinate+0x2>
     cba:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <Next_coordinate+0x3>
	if(Status=='W' || Status=='N'){printf ("ABGO %c\r\n",Status);continue;}
     cbe:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     cc2:	0f 90       	pop	r0
     cc4:	0f 90       	pop	r0
     cc6:	0f 90       	pop	r0
     cc8:	0f 90       	pop	r0
     cca:	0f 90       	pop	r0
     ccc:	0f 90       	pop	r0
     cce:	87 35       	cpi	r24, 0x57	; 87
     cd0:	21 f0       	breq	.+8      	; 0xcda <main+0x47c>
     cd2:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     cd6:	8e 34       	cpi	r24, 0x4E	; 78
     cd8:	79 f4       	brne	.+30     	; 0xcf8 <main+0x49a>
     cda:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     cde:	1f 92       	push	r1
     ce0:	8f 93       	push	r24
     ce2:	82 ee       	ldi	r24, 0xE2	; 226
     ce4:	91 e0       	ldi	r25, 0x01	; 1
     ce6:	9f 93       	push	r25
     ce8:	8f 93       	push	r24
     cea:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
     cee:	0f 90       	pop	r0
     cf0:	0f 90       	pop	r0
     cf2:	0f 90       	pop	r0
     cf4:	0f 90       	pop	r0
     cf6:	1a ce       	rjmp	.-972    	; 0x92c <main+0xce>
	Status=Motor_scan (Next_coordinate-Coordinate);
     cf8:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <Next_coordinate>
     cfc:	90 91 5d 03 	lds	r25, 0x035D	; 0x80035d <Next_coordinate+0x1>
     d00:	a0 91 5e 03 	lds	r26, 0x035E	; 0x80035e <Next_coordinate+0x2>
     d04:	b0 91 5f 03 	lds	r27, 0x035F	; 0x80035f <Next_coordinate+0x3>
     d08:	20 91 62 03 	lds	r18, 0x0362	; 0x800362 <Coordinate>
     d0c:	30 91 63 03 	lds	r19, 0x0363	; 0x800363 <Coordinate+0x1>
     d10:	40 91 64 03 	lds	r20, 0x0364	; 0x800364 <Coordinate+0x2>
     d14:	50 91 65 03 	lds	r21, 0x0365	; 0x800365 <Coordinate+0x3>
     d18:	bc 01       	movw	r22, r24
     d1a:	cd 01       	movw	r24, r26
     d1c:	62 1b       	sub	r22, r18
     d1e:	73 0b       	sbc	r23, r19
     d20:	84 0b       	sbc	r24, r20
     d22:	95 0b       	sbc	r25, r21
     d24:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <Motor_scan>
     d28:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
	//			else if(Left_end<(Coordinate+Next_coordinate)&&(Coordinate+Next_coordinate)<Right_end) Status=Motor_scan (Next_coordinate);
	//			else if(Next_coordinate>0) Status=Motor_scan (Next_coordinate);
	//			else {Status='O';printf ("ABRU %c\r\n",Status);continue;}
	while (Status=='W');//printf ("GOAM %ld\r\n",Speed);
     d2c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     d30:	87 35       	cpi	r24, 0x57	; 87
     d32:	e1 f3       	breq	.-8      	; 0xd2c <main+0x4ce>
	//		printf ("GOAM %c,%c\r\n",Status,Scanning);
	Write_coordinate((void*)&Coordinate);
     d34:	82 e6       	ldi	r24, 0x62	; 98
     d36:	93 e0       	ldi	r25, 0x03	; 3
     d38:	0e 94 b1 08 	call	0x1162	; 0x1162 <Write_coordinate>
	printf ("GOAM %c\r\n",Status);
     d3c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     d40:	1f 92       	push	r1
     d42:	8f 93       	push	r24
     d44:	8c ee       	ldi	r24, 0xEC	; 236
     d46:	91 e0       	ldi	r25, 0x01	; 1
     d48:	9f 93       	push	r25
     d4a:	8f 93       	push	r24
     d4c:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
	continue;
     d50:	0f 90       	pop	r0
     d52:	0f 90       	pop	r0
     d54:	0f 90       	pop	r0
     d56:	0f 90       	pop	r0
     d58:	e9 cd       	rjmp	.-1070   	; 0x92c <main+0xce>
}

if (!strncmp(Command_buff,"AMRU",4))
     d5a:	44 e0       	ldi	r20, 0x04	; 4
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	66 ef       	ldi	r22, 0xF6	; 246
     d60:	71 e0       	ldi	r23, 0x01	; 1
     d62:	80 e4       	ldi	r24, 0x40	; 64
     d64:	92 e0       	ldi	r25, 0x02	; 2
     d66:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     d6a:	89 2b       	or	r24, r25
     d6c:	09 f0       	breq	.+2      	; 0xd70 <main+0x512>
     d6e:	7f c0       	rjmp	.+254    	; 0xe6e <main+0x610>
{	float F_DX=1;
     d70:	49 82       	std	Y+1, r4	; 0x01
     d72:	5a 82       	std	Y+2, r5	; 0x02
     d74:	6b 82       	std	Y+3, r6	; 0x03
     d76:	7c 82       	std	Y+4, r7	; 0x04
	sscanf (Command_buff+4,"%f",&F_DX);
     d78:	9f 92       	push	r9
     d7a:	8f 92       	push	r8
     d7c:	3f 92       	push	r3
     d7e:	2f 92       	push	r2
     d80:	bf 92       	push	r11
     d82:	af 92       	push	r10
     d84:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
	Next_coordinate=(long)Work_Parameters.Unit*F_DX;
     d88:	f6 01       	movw	r30, r12
     d8a:	60 81       	ld	r22, Z
     d8c:	71 81       	ldd	r23, Z+1	; 0x01
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__floatsisf>
     d96:	29 81       	ldd	r18, Y+1	; 0x01
     d98:	3a 81       	ldd	r19, Y+2	; 0x02
     d9a:	4b 81       	ldd	r20, Y+3	; 0x03
     d9c:	5c 81       	ldd	r21, Y+4	; 0x04
     d9e:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__mulsf3>
     da2:	0e 94 32 09 	call	0x1264	; 0x1264 <__fixsfsi>
     da6:	60 93 5c 03 	sts	0x035C, r22	; 0x80035c <Next_coordinate>
     daa:	70 93 5d 03 	sts	0x035D, r23	; 0x80035d <Next_coordinate+0x1>
     dae:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <Next_coordinate+0x2>
     db2:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <Next_coordinate+0x3>
	if(Status=='W' || Status=='N'){printf ("ABRU %c\r\n",Status);continue;}
     db6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     dba:	0f 90       	pop	r0
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	0f 90       	pop	r0
     dc4:	0f 90       	pop	r0
     dc6:	87 35       	cpi	r24, 0x57	; 87
     dc8:	21 f0       	breq	.+8      	; 0xdd2 <main+0x574>
     dca:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     dce:	8e 34       	cpi	r24, 0x4E	; 78
     dd0:	79 f4       	brne	.+30     	; 0xdf0 <main+0x592>
     dd2:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     dd6:	1f 92       	push	r1
     dd8:	8f 93       	push	r24
     dda:	8b ef       	ldi	r24, 0xFB	; 251
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	9f 93       	push	r25
     de0:	8f 93       	push	r24
     de2:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
     de6:	0f 90       	pop	r0
     de8:	0f 90       	pop	r0
     dea:	0f 90       	pop	r0
     dec:	0f 90       	pop	r0
     dee:	9e cd       	rjmp	.-1220   	; 0x92c <main+0xce>
	Status=Motor_scan (Next_coordinate);
     df0:	60 91 5c 03 	lds	r22, 0x035C	; 0x80035c <Next_coordinate>
     df4:	70 91 5d 03 	lds	r23, 0x035D	; 0x80035d <Next_coordinate+0x1>
     df8:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <Next_coordinate+0x2>
     dfc:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <Next_coordinate+0x3>
     e00:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <Motor_scan>
     e04:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
	while (Status=='W')printf ("ST** %lu\r\n",Speed);//printf ("GOAM %ld\r\n",Work_counter);
     e08:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     e0c:	87 35       	cpi	r24, 0x57	; 87
     e0e:	e1 f4       	brne	.+56     	; 0xe48 <main+0x5ea>
     e10:	80 91 55 03 	lds	r24, 0x0355	; 0x800355 <Speed>
     e14:	90 91 56 03 	lds	r25, 0x0356	; 0x800356 <Speed+0x1>
     e18:	a0 91 57 03 	lds	r26, 0x0357	; 0x800357 <Speed+0x2>
     e1c:	b0 91 58 03 	lds	r27, 0x0358	; 0x800358 <Speed+0x3>
     e20:	bf 93       	push	r27
     e22:	af 93       	push	r26
     e24:	9f 93       	push	r25
     e26:	8f 93       	push	r24
     e28:	a5 e0       	ldi	r26, 0x05	; 5
     e2a:	b2 e0       	ldi	r27, 0x02	; 2
     e2c:	bf 93       	push	r27
     e2e:	af 93       	push	r26
     e30:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
     e34:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     e38:	0f 90       	pop	r0
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
     e42:	0f 90       	pop	r0
     e44:	87 35       	cpi	r24, 0x57	; 87
     e46:	21 f3       	breq	.-56     	; 0xe10 <main+0x5b2>
	//		printf ("GOAM %c,%c\r\n",Status,Scanning);
	Write_coordinate((void*)&Coordinate);
     e48:	82 e6       	ldi	r24, 0x62	; 98
     e4a:	93 e0       	ldi	r25, 0x03	; 3
     e4c:	0e 94 b1 08 	call	0x1162	; 0x1162 <Write_coordinate>
	printf ("RUAM %c\r\n",Status);
     e50:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     e54:	1f 92       	push	r1
     e56:	8f 93       	push	r24
     e58:	80 e1       	ldi	r24, 0x10	; 16
     e5a:	92 e0       	ldi	r25, 0x02	; 2
     e5c:	9f 93       	push	r25
     e5e:	8f 93       	push	r24
     e60:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
	continue;
     e64:	0f 90       	pop	r0
     e66:	0f 90       	pop	r0
     e68:	0f 90       	pop	r0
     e6a:	0f 90       	pop	r0
     e6c:	5f cd       	rjmp	.-1346   	; 0x92c <main+0xce>
}

if (!strncmp(Command_buff,"AMSC",4))
     e6e:	44 e0       	ldi	r20, 0x04	; 4
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	6a e1       	ldi	r22, 0x1A	; 26
     e74:	72 e0       	ldi	r23, 0x02	; 2
     e76:	80 e4       	ldi	r24, 0x40	; 64
     e78:	92 e0       	ldi	r25, 0x02	; 2
     e7a:	0e 94 54 0f 	call	0x1ea8	; 0x1ea8 <strncmp>
     e7e:	89 2b       	or	r24, r25
     e80:	09 f0       	breq	.+2      	; 0xe84 <main+0x626>
     e82:	8d c0       	rjmp	.+282    	; 0xf9e <main+0x740>
{	float F_DX=1;
     e84:	49 82       	std	Y+1, r4	; 0x01
     e86:	5a 82       	std	Y+2, r5	; 0x02
     e88:	6b 82       	std	Y+3, r6	; 0x03
     e8a:	7c 82       	std	Y+4, r7	; 0x04
	sscanf (Command_buff+4,"%f",&F_DX);
     e8c:	9f 92       	push	r9
     e8e:	8f 92       	push	r8
     e90:	3f 92       	push	r3
     e92:	2f 92       	push	r2
     e94:	bf 92       	push	r11
     e96:	af 92       	push	r10
     e98:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <sscanf>
	Next_coordinate=(long)Work_Parameters.Unit*F_DX;
     e9c:	d6 01       	movw	r26, r12
     e9e:	6d 91       	ld	r22, X+
     ea0:	7c 91       	ld	r23, X
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__floatsisf>
     eaa:	29 81       	ldd	r18, Y+1	; 0x01
     eac:	3a 81       	ldd	r19, Y+2	; 0x02
     eae:	4b 81       	ldd	r20, Y+3	; 0x03
     eb0:	5c 81       	ldd	r21, Y+4	; 0x04
     eb2:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__mulsf3>
     eb6:	0e 94 32 09 	call	0x1264	; 0x1264 <__fixsfsi>
     eba:	60 93 5c 03 	sts	0x035C, r22	; 0x80035c <Next_coordinate>
     ebe:	70 93 5d 03 	sts	0x035D, r23	; 0x80035d <Next_coordinate+0x1>
     ec2:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <Next_coordinate+0x2>
     ec6:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <Next_coordinate+0x3>
	if(Status=='W' || Status=='N'){printf ("ABSC %c\r\n",Status);continue;}
     eca:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     ece:	0f 90       	pop	r0
     ed0:	0f 90       	pop	r0
     ed2:	0f 90       	pop	r0
     ed4:	0f 90       	pop	r0
     ed6:	0f 90       	pop	r0
     ed8:	0f 90       	pop	r0
     eda:	87 35       	cpi	r24, 0x57	; 87
     edc:	29 f0       	breq	.+10     	; 0xee8 <main+0x68a>
     ede:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     ee2:	8e 34       	cpi	r24, 0x4E	; 78
     ee4:	09 f0       	breq	.+2      	; 0xee8 <main+0x68a>
     ee6:	44 c0       	rjmp	.+136    	; 0xf70 <main+0x712>
     ee8:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     eec:	1f 92       	push	r1
     eee:	8f 93       	push	r24
     ef0:	af e1       	ldi	r26, 0x1F	; 31
     ef2:	b2 e0       	ldi	r27, 0x02	; 2
     ef4:	bf 93       	push	r27
     ef6:	af 93       	push	r26
     ef8:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
     efc:	0f 90       	pop	r0
     efe:	0f 90       	pop	r0
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	13 cd       	rjmp	.-1498   	; 0x92c <main+0xce>
	while (Running!='A')
	{
		Status=Motor_scan (Next_coordinate);
     f06:	60 91 5c 03 	lds	r22, 0x035C	; 0x80035c <Next_coordinate>
     f0a:	70 91 5d 03 	lds	r23, 0x035D	; 0x80035d <Next_coordinate+0x1>
     f0e:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <Next_coordinate+0x2>
     f12:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <Next_coordinate+0x3>
     f16:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <Motor_scan>
     f1a:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
		while (Status=='W' && Running!='A');
     f1e:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     f22:	87 35       	cpi	r24, 0x57	; 87
     f24:	21 f4       	brne	.+8      	; 0xf2e <main+0x6d0>
     f26:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     f2a:	81 34       	cpi	r24, 0x41	; 65
     f2c:	c1 f7       	brne	.-16     	; 0xf1e <main+0x6c0>
		if (Running!='A') Status=Motor_scan (-Next_coordinate);
     f2e:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     f32:	81 34       	cpi	r24, 0x41	; 65
     f34:	a9 f0       	breq	.+42     	; 0xf60 <main+0x702>
     f36:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <Next_coordinate>
     f3a:	90 91 5d 03 	lds	r25, 0x035D	; 0x80035d <Next_coordinate+0x1>
     f3e:	a0 91 5e 03 	lds	r26, 0x035E	; 0x80035e <Next_coordinate+0x2>
     f42:	b0 91 5f 03 	lds	r27, 0x035F	; 0x80035f <Next_coordinate+0x3>
     f46:	9c 01       	movw	r18, r24
     f48:	ad 01       	movw	r20, r26
     f4a:	66 27       	eor	r22, r22
     f4c:	77 27       	eor	r23, r23
     f4e:	cb 01       	movw	r24, r22
     f50:	62 1b       	sub	r22, r18
     f52:	73 0b       	sbc	r23, r19
     f54:	84 0b       	sbc	r24, r20
     f56:	95 0b       	sbc	r25, r21
     f58:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <Motor_scan>
     f5c:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <Status>
		while (Status=='W' && Running!='A');
     f60:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     f64:	87 35       	cpi	r24, 0x57	; 87
     f66:	21 f4       	brne	.+8      	; 0xf70 <main+0x712>
     f68:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     f6c:	81 34       	cpi	r24, 0x41	; 65
     f6e:	c1 f7       	brne	.-16     	; 0xf60 <main+0x702>
if (!strncmp(Command_buff,"AMSC",4))
{	float F_DX=1;
	sscanf (Command_buff+4,"%f",&F_DX);
	Next_coordinate=(long)Work_Parameters.Unit*F_DX;
	if(Status=='W' || Status=='N'){printf ("ABSC %c\r\n",Status);continue;}
	while (Running!='A')
     f70:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Running>
     f74:	81 34       	cpi	r24, 0x41	; 65
     f76:	39 f6       	brne	.-114    	; 0xf06 <main+0x6a8>
		Status=Motor_scan (Next_coordinate);
		while (Status=='W' && Running!='A');
		if (Running!='A') Status=Motor_scan (-Next_coordinate);
		while (Status=='W' && Running!='A');
	}
	Write_coordinate((void*)&Coordinate);
     f78:	82 e6       	ldi	r24, 0x62	; 98
     f7a:	93 e0       	ldi	r25, 0x03	; 3
     f7c:	0e 94 b1 08 	call	0x1162	; 0x1162 <Write_coordinate>
	printf ("SCAM %c\r\n",Status);
     f80:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <Status>
     f84:	1f 92       	push	r1
     f86:	8f 93       	push	r24
     f88:	89 e2       	ldi	r24, 0x29	; 41
     f8a:	92 e0       	ldi	r25, 0x02	; 2
     f8c:	9f 93       	push	r25
     f8e:	8f 93       	push	r24
     f90:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <printf>
	continue;
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	c7 cc       	rjmp	.-1650   	; 0x92c <main+0xce>
}

	
	else
	{
		printf ("BAD COMMAND""\r\n");
     f9e:	83 e3       	ldi	r24, 0x33	; 51
     fa0:	92 e0       	ldi	r25, 0x02	; 2
     fa2:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <puts>
		continue;
     fa6:	c2 cc       	rjmp	.-1660   	; 0x92c <main+0xce>

00000fa8 <Motor_scan>:
volatile long			Next_coordinate;
//*********************************************************
extern unsigned long	Store_Coordinate;//={1,2};
//******************************************************************************************
unsigned char Motor_scan(long Step_counter)
{
     fa8:	8f 92       	push	r8
     faa:	9f 92       	push	r9
     fac:	af 92       	push	r10
     fae:	bf 92       	push	r11
     fb0:	cf 92       	push	r12
     fb2:	df 92       	push	r13
     fb4:	ef 92       	push	r14
     fb6:	ff 92       	push	r15
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	6b 01       	movw	r12, r22
     fbe:	7c 01       	movw	r14, r24
	
	ClrBit(PORTB,ENABLE);//motor on
     fc0:	28 98       	cbi	0x05, 0	; 5
	delay(10);
     fc2:	8a e0       	ldi	r24, 0x0A	; 10
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <delay>
	if(Step_counter==0)	return'Y';
     fca:	c1 14       	cp	r12, r1
     fcc:	d1 04       	cpc	r13, r1
     fce:	e1 04       	cpc	r14, r1
     fd0:	f1 04       	cpc	r15, r1
     fd2:	09 f4       	brne	.+2      	; 0xfd6 <Motor_scan+0x2e>
     fd4:	ac c0       	rjmp	.+344    	; 0x112e <Motor_scan+0x186>
	if((Step_counter>0)&&((PIND&0x10)!=0x00)) {Direction=1;PORTD=PORTD|0x20;Work_counter=Step_counter;Up_down_speed=Step_counter/2;}
     fd6:	14 f1       	brlt	.+68     	; 0x101c <Motor_scan+0x74>
     fd8:	4c 9b       	sbis	0x09, 4	; 9
     fda:	20 c0       	rjmp	.+64     	; 0x101c <Motor_scan+0x74>
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <Direction>
     fe2:	5d 9a       	sbi	0x0b, 5	; 11
     fe4:	c0 92 6c 03 	sts	0x036C, r12	; 0x80036c <Work_counter>
     fe8:	d0 92 6d 03 	sts	0x036D, r13	; 0x80036d <Work_counter+0x1>
     fec:	e0 92 6e 03 	sts	0x036E, r14	; 0x80036e <Work_counter+0x2>
     ff0:	f0 92 6f 03 	sts	0x036F, r15	; 0x80036f <Work_counter+0x3>
     ff4:	d7 01       	movw	r26, r14
     ff6:	c6 01       	movw	r24, r12
     ff8:	ff 20       	and	r15, r15
     ffa:	1c f4       	brge	.+6      	; 0x1002 <Motor_scan+0x5a>
     ffc:	01 96       	adiw	r24, 0x01	; 1
     ffe:	a1 1d       	adc	r26, r1
    1000:	b1 1d       	adc	r27, r1
    1002:	b5 95       	asr	r27
    1004:	a7 95       	ror	r26
    1006:	97 95       	ror	r25
    1008:	87 95       	ror	r24
    100a:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <Up_down_speed>
    100e:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <Up_down_speed+0x1>
    1012:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <Up_down_speed+0x2>
    1016:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <Up_down_speed+0x3>
    101a:	30 c0       	rjmp	.+96     	; 0x107c <Motor_scan+0xd4>
	else if ((Step_counter<0)&&((PIND&0x08)!=0x00))	{Direction=0;PORTD=PORTD&0xDF;Work_counter=-Step_counter;Up_down_speed=-Step_counter/2;}
    101c:	ff 20       	and	r15, r15
    101e:	4c f5       	brge	.+82     	; 0x1072 <Motor_scan+0xca>
    1020:	4b 9b       	sbis	0x09, 3	; 9
    1022:	27 c0       	rjmp	.+78     	; 0x1072 <Motor_scan+0xca>
    1024:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <Direction>
    1028:	5d 98       	cbi	0x0b, 5	; 11
    102a:	f0 94       	com	r15
    102c:	e0 94       	com	r14
    102e:	d0 94       	com	r13
    1030:	c0 94       	com	r12
    1032:	c1 1c       	adc	r12, r1
    1034:	d1 1c       	adc	r13, r1
    1036:	e1 1c       	adc	r14, r1
    1038:	f1 1c       	adc	r15, r1
    103a:	c0 92 6c 03 	sts	0x036C, r12	; 0x80036c <Work_counter>
    103e:	d0 92 6d 03 	sts	0x036D, r13	; 0x80036d <Work_counter+0x1>
    1042:	e0 92 6e 03 	sts	0x036E, r14	; 0x80036e <Work_counter+0x2>
    1046:	f0 92 6f 03 	sts	0x036F, r15	; 0x80036f <Work_counter+0x3>
    104a:	d7 01       	movw	r26, r14
    104c:	c6 01       	movw	r24, r12
    104e:	ff 20       	and	r15, r15
    1050:	1c f4       	brge	.+6      	; 0x1058 <Motor_scan+0xb0>
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	a1 1d       	adc	r26, r1
    1056:	b1 1d       	adc	r27, r1
    1058:	b5 95       	asr	r27
    105a:	a7 95       	ror	r26
    105c:	97 95       	ror	r25
    105e:	87 95       	ror	r24
    1060:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <Up_down_speed>
    1064:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <Up_down_speed+0x1>
    1068:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <Up_down_speed+0x2>
    106c:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <Up_down_speed+0x3>
    1070:	05 c0       	rjmp	.+10     	; 0x107c <Motor_scan+0xd4>
	else {
		SetBit(PORTB,ENABLE);
    1072:	28 9a       	sbi	0x05, 0	; 5
		if((PIND&0x10)==0x00) return'R';
    1074:	4c 9b       	sbis	0x09, 4	; 9
    1076:	5d c0       	rjmp	.+186    	; 0x1132 <Motor_scan+0x18a>
		if((PIND&0x08)==0x00) return'L';
    1078:	4b 9b       	sbis	0x09, 3	; 9
    107a:	5d c0       	rjmp	.+186    	; 0x1136 <Motor_scan+0x18e>
		}
			
	Speed=Work_Parameters.Speed_min;
    107c:	cc e4       	ldi	r28, 0x4C	; 76
    107e:	d3 e0       	ldi	r29, 0x03	; 3
    1080:	2a 81       	ldd	r18, Y+2	; 0x02
    1082:	3b 81       	ldd	r19, Y+3	; 0x03
    1084:	40 e0       	ldi	r20, 0x00	; 0
    1086:	50 e0       	ldi	r21, 0x00	; 0
    1088:	20 93 55 03 	sts	0x0355, r18	; 0x800355 <Speed>
    108c:	30 93 56 03 	sts	0x0356, r19	; 0x800356 <Speed+0x1>
    1090:	40 93 57 03 	sts	0x0357, r20	; 0x800357 <Speed+0x2>
    1094:	50 93 58 03 	sts	0x0358, r21	; 0x800358 <Speed+0x3>
	
	T_Speed_min=(0xffff-TIMERCLK_3/Work_Parameters.Speed_min);
    1098:	0f 2e       	mov	r0, r31
    109a:	f2 e1       	ldi	r31, 0x12	; 18
    109c:	8f 2e       	mov	r8, r31
    109e:	fa e7       	ldi	r31, 0x7A	; 122
    10a0:	9f 2e       	mov	r9, r31
    10a2:	a1 2c       	mov	r10, r1
    10a4:	b1 2c       	mov	r11, r1
    10a6:	f0 2d       	mov	r31, r0
    10a8:	c5 01       	movw	r24, r10
    10aa:	b4 01       	movw	r22, r8
    10ac:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__divmodsi4>
    10b0:	79 01       	movw	r14, r18
    10b2:	e0 94       	com	r14
    10b4:	f0 94       	com	r15
    10b6:	f0 92 5a 03 	sts	0x035A, r15	; 0x80035a <T_Speed_min+0x1>
    10ba:	e0 92 59 03 	sts	0x0359, r14	; 0x800359 <T_Speed_min>
	T_Speed_max=(0xffff-TIMERCLK_3/Work_Parameters.Speed_max);
    10be:	2c 81       	ldd	r18, Y+4	; 0x04
    10c0:	3d 81       	ldd	r19, Y+5	; 0x05
    10c2:	40 e0       	ldi	r20, 0x00	; 0
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	c5 01       	movw	r24, r10
    10c8:	b4 01       	movw	r22, r8
    10ca:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__divmodsi4>
    10ce:	20 95       	com	r18
    10d0:	30 95       	com	r19
    10d2:	30 93 61 03 	sts	0x0361, r19	; 0x800361 <T_Speed_max+0x1>
    10d6:	20 93 60 03 	sts	0x0360, r18	; 0x800360 <T_Speed_max>
	T_Speed=0xffff-TIMERCLK_3/Work_Parameters.Speed_min;	
    10da:	f0 92 67 03 	sts	0x0367, r15	; 0x800367 <T_Speed+0x1>
    10de:	e0 92 66 03 	sts	0x0366, r14	; 0x800366 <T_Speed>
	T_acselerate=0xff-TIMERCLK_0/Work_Parameters.Acselerate;
    10e2:	2e 81       	ldd	r18, Y+6	; 0x06
    10e4:	3f 81       	ldd	r19, Y+7	; 0x07
    10e6:	40 e0       	ldi	r20, 0x00	; 0
    10e8:	50 e0       	ldi	r21, 0x00	; 0
    10ea:	64 e8       	ldi	r22, 0x84	; 132
    10ec:	7e e1       	ldi	r23, 0x1E	; 30
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__divmodsi4>
    10f6:	20 95       	com	r18
    10f8:	20 93 49 03 	sts	0x0349, r18	; 0x800349 <T_acselerate>

	TCNT2 = T_acselerate;
    10fc:	80 91 49 03 	lds	r24, 0x0349	; 0x800349 <T_acselerate>
    1100:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	
	Scanning='W';
    1104:	87 e5       	ldi	r24, 0x57	; 87
    1106:	80 93 4a 03 	sts	0x034A, r24	; 0x80034a <Scanning>
	
	TCCR2B = 0x07;//0x02; //start timer0, frequency = 0Hz
    110a:	87 e0       	ldi	r24, 0x07	; 7
    110c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK2 |= 0x01;	
    1110:	e0 e7       	ldi	r30, 0x70	; 112
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	80 81       	ld	r24, Z
    1116:	81 60       	ori	r24, 0x01	; 1
    1118:	80 83       	st	Z, r24
	TCCR1B = 0x04;//start timer 2
    111a:	84 e0       	ldi	r24, 0x04	; 4
    111c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TIMSK1 |= 0x01;
    1120:	ef e6       	ldi	r30, 0x6F	; 111
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	81 60       	ori	r24, 0x01	; 1
    1128:	80 83       	st	Z, r24

	return	'W';
    112a:	87 e5       	ldi	r24, 0x57	; 87
    112c:	05 c0       	rjmp	.+10     	; 0x1138 <Motor_scan+0x190>
unsigned char Motor_scan(long Step_counter)
{
	
	ClrBit(PORTB,ENABLE);//motor on
	delay(10);
	if(Step_counter==0)	return'Y';
    112e:	89 e5       	ldi	r24, 0x59	; 89
    1130:	03 c0       	rjmp	.+6      	; 0x1138 <Motor_scan+0x190>
	if((Step_counter>0)&&((PIND&0x10)!=0x00)) {Direction=1;PORTD=PORTD|0x20;Work_counter=Step_counter;Up_down_speed=Step_counter/2;}
	else if ((Step_counter<0)&&((PIND&0x08)!=0x00))	{Direction=0;PORTD=PORTD&0xDF;Work_counter=-Step_counter;Up_down_speed=-Step_counter/2;}
	else {
		SetBit(PORTB,ENABLE);
		if((PIND&0x10)==0x00) return'R';
    1132:	82 e5       	ldi	r24, 0x52	; 82
    1134:	01 c0       	rjmp	.+2      	; 0x1138 <Motor_scan+0x190>
		if((PIND&0x08)==0x00) return'L';
    1136:	8c e4       	ldi	r24, 0x4C	; 76
	TIMSK2 |= 0x01;	
	TCCR1B = 0x04;//start timer 2
	TIMSK1 |= 0x01;

	return	'W';
}
    1138:	df 91       	pop	r29
    113a:	cf 91       	pop	r28
    113c:	ff 90       	pop	r15
    113e:	ef 90       	pop	r14
    1140:	df 90       	pop	r13
    1142:	cf 90       	pop	r12
    1144:	bf 90       	pop	r11
    1146:	af 90       	pop	r10
    1148:	9f 90       	pop	r9
    114a:	8f 90       	pop	r8
    114c:	08 95       	ret

0000114e <Motor_set>:
//*******************************************************************
void Motor_set(unsigned char microstep)
	 {unsigned char u1=0x00;
		u1 = microstep << 6;	 
		PORTB &= 0x3F;
    114e:	95 b1       	in	r25, 0x05	; 5
    1150:	9f 73       	andi	r25, 0x3F	; 63
    1152:	95 b9       	out	0x05, r25	; 5
		PORTB = PORTB + u1;
    1154:	95 b1       	in	r25, 0x05	; 5
    1156:	20 e4       	ldi	r18, 0x40	; 64
    1158:	82 9f       	mul	r24, r18
    115a:	90 0d       	add	r25, r0
    115c:	11 24       	eor	r1, r1
    115e:	95 b9       	out	0x05, r25	; 5
    1160:	08 95       	ret

00001162 <Write_coordinate>:
 	 }
//*******************************************************************
void Write_coordinate(unsigned long *value_coord)
	 {
	 eeprom_write_dword(&Store_Coordinate,*value_coord);
    1162:	fc 01       	movw	r30, r24
    1164:	40 81       	ld	r20, Z
    1166:	51 81       	ldd	r21, Z+1	; 0x01
    1168:	62 81       	ldd	r22, Z+2	; 0x02
    116a:	73 81       	ldd	r23, Z+3	; 0x03
    116c:	80 e0       	ldi	r24, 0x00	; 0
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 ac 13 	call	0x2758	; 0x2758 <eeprom_write_dword>
    1174:	08 95       	ret

00001176 <Read_coordinate>:
 	 }
//*******************************************************************	  
unsigned long Read_coordinate(void)//N,*DXX
	 {unsigned long DXX;
	 DXX=(unsigned long)eeprom_read_dword(&Store_Coordinate);//
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	0e 94 8e 13 	call	0x271c	; 0x271c <eeprom_read_dword>
	 return DXX;
	 }
    117e:	08 95       	ret

00001180 <__divsf3>:
    1180:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__divsf3x>
    1184:	0c 94 bc 09 	jmp	0x1378	; 0x1378 <__fp_round>
    1188:	0e 94 b5 09 	call	0x136a	; 0x136a <__fp_pscB>
    118c:	58 f0       	brcs	.+22     	; 0x11a4 <__divsf3+0x24>
    118e:	0e 94 ae 09 	call	0x135c	; 0x135c <__fp_pscA>
    1192:	40 f0       	brcs	.+16     	; 0x11a4 <__divsf3+0x24>
    1194:	29 f4       	brne	.+10     	; 0x11a0 <__divsf3+0x20>
    1196:	5f 3f       	cpi	r21, 0xFF	; 255
    1198:	29 f0       	breq	.+10     	; 0x11a4 <__divsf3+0x24>
    119a:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_inf>
    119e:	51 11       	cpse	r21, r1
    11a0:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_szero>
    11a4:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_nan>

000011a8 <__divsf3x>:
    11a8:	0e 94 cd 09 	call	0x139a	; 0x139a <__fp_split3>
    11ac:	68 f3       	brcs	.-38     	; 0x1188 <__divsf3+0x8>

000011ae <__divsf3_pse>:
    11ae:	99 23       	and	r25, r25
    11b0:	b1 f3       	breq	.-20     	; 0x119e <__divsf3+0x1e>
    11b2:	55 23       	and	r21, r21
    11b4:	91 f3       	breq	.-28     	; 0x119a <__divsf3+0x1a>
    11b6:	95 1b       	sub	r25, r21
    11b8:	55 0b       	sbc	r21, r21
    11ba:	bb 27       	eor	r27, r27
    11bc:	aa 27       	eor	r26, r26
    11be:	62 17       	cp	r22, r18
    11c0:	73 07       	cpc	r23, r19
    11c2:	84 07       	cpc	r24, r20
    11c4:	38 f0       	brcs	.+14     	; 0x11d4 <__divsf3_pse+0x26>
    11c6:	9f 5f       	subi	r25, 0xFF	; 255
    11c8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ca:	22 0f       	add	r18, r18
    11cc:	33 1f       	adc	r19, r19
    11ce:	44 1f       	adc	r20, r20
    11d0:	aa 1f       	adc	r26, r26
    11d2:	a9 f3       	breq	.-22     	; 0x11be <__divsf3_pse+0x10>
    11d4:	35 d0       	rcall	.+106    	; 0x1240 <__divsf3_pse+0x92>
    11d6:	0e 2e       	mov	r0, r30
    11d8:	3a f0       	brmi	.+14     	; 0x11e8 <__divsf3_pse+0x3a>
    11da:	e0 e8       	ldi	r30, 0x80	; 128
    11dc:	32 d0       	rcall	.+100    	; 0x1242 <__divsf3_pse+0x94>
    11de:	91 50       	subi	r25, 0x01	; 1
    11e0:	50 40       	sbci	r21, 0x00	; 0
    11e2:	e6 95       	lsr	r30
    11e4:	00 1c       	adc	r0, r0
    11e6:	ca f7       	brpl	.-14     	; 0x11da <__divsf3_pse+0x2c>
    11e8:	2b d0       	rcall	.+86     	; 0x1240 <__divsf3_pse+0x92>
    11ea:	fe 2f       	mov	r31, r30
    11ec:	29 d0       	rcall	.+82     	; 0x1240 <__divsf3_pse+0x92>
    11ee:	66 0f       	add	r22, r22
    11f0:	77 1f       	adc	r23, r23
    11f2:	88 1f       	adc	r24, r24
    11f4:	bb 1f       	adc	r27, r27
    11f6:	26 17       	cp	r18, r22
    11f8:	37 07       	cpc	r19, r23
    11fa:	48 07       	cpc	r20, r24
    11fc:	ab 07       	cpc	r26, r27
    11fe:	b0 e8       	ldi	r27, 0x80	; 128
    1200:	09 f0       	breq	.+2      	; 0x1204 <__divsf3_pse+0x56>
    1202:	bb 0b       	sbc	r27, r27
    1204:	80 2d       	mov	r24, r0
    1206:	bf 01       	movw	r22, r30
    1208:	ff 27       	eor	r31, r31
    120a:	93 58       	subi	r25, 0x83	; 131
    120c:	5f 4f       	sbci	r21, 0xFF	; 255
    120e:	3a f0       	brmi	.+14     	; 0x121e <__divsf3_pse+0x70>
    1210:	9e 3f       	cpi	r25, 0xFE	; 254
    1212:	51 05       	cpc	r21, r1
    1214:	78 f0       	brcs	.+30     	; 0x1234 <__divsf3_pse+0x86>
    1216:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_inf>
    121a:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_szero>
    121e:	5f 3f       	cpi	r21, 0xFF	; 255
    1220:	e4 f3       	brlt	.-8      	; 0x121a <__divsf3_pse+0x6c>
    1222:	98 3e       	cpi	r25, 0xE8	; 232
    1224:	d4 f3       	brlt	.-12     	; 0x121a <__divsf3_pse+0x6c>
    1226:	86 95       	lsr	r24
    1228:	77 95       	ror	r23
    122a:	67 95       	ror	r22
    122c:	b7 95       	ror	r27
    122e:	f7 95       	ror	r31
    1230:	9f 5f       	subi	r25, 0xFF	; 255
    1232:	c9 f7       	brne	.-14     	; 0x1226 <__divsf3_pse+0x78>
    1234:	88 0f       	add	r24, r24
    1236:	91 1d       	adc	r25, r1
    1238:	96 95       	lsr	r25
    123a:	87 95       	ror	r24
    123c:	97 f9       	bld	r25, 7
    123e:	08 95       	ret
    1240:	e1 e0       	ldi	r30, 0x01	; 1
    1242:	66 0f       	add	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	bb 1f       	adc	r27, r27
    124a:	62 17       	cp	r22, r18
    124c:	73 07       	cpc	r23, r19
    124e:	84 07       	cpc	r24, r20
    1250:	ba 07       	cpc	r27, r26
    1252:	20 f0       	brcs	.+8      	; 0x125c <__divsf3_pse+0xae>
    1254:	62 1b       	sub	r22, r18
    1256:	73 0b       	sbc	r23, r19
    1258:	84 0b       	sbc	r24, r20
    125a:	ba 0b       	sbc	r27, r26
    125c:	ee 1f       	adc	r30, r30
    125e:	88 f7       	brcc	.-30     	; 0x1242 <__divsf3_pse+0x94>
    1260:	e0 95       	com	r30
    1262:	08 95       	ret

00001264 <__fixsfsi>:
    1264:	0e 94 39 09 	call	0x1272	; 0x1272 <__fixunssfsi>
    1268:	68 94       	set
    126a:	b1 11       	cpse	r27, r1
    126c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_szero>
    1270:	08 95       	ret

00001272 <__fixunssfsi>:
    1272:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_splitA>
    1276:	88 f0       	brcs	.+34     	; 0x129a <__fixunssfsi+0x28>
    1278:	9f 57       	subi	r25, 0x7F	; 127
    127a:	98 f0       	brcs	.+38     	; 0x12a2 <__fixunssfsi+0x30>
    127c:	b9 2f       	mov	r27, r25
    127e:	99 27       	eor	r25, r25
    1280:	b7 51       	subi	r27, 0x17	; 23
    1282:	b0 f0       	brcs	.+44     	; 0x12b0 <__fixunssfsi+0x3e>
    1284:	e1 f0       	breq	.+56     	; 0x12be <__fixunssfsi+0x4c>
    1286:	66 0f       	add	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	88 1f       	adc	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	1a f0       	brmi	.+6      	; 0x1296 <__fixunssfsi+0x24>
    1290:	ba 95       	dec	r27
    1292:	c9 f7       	brne	.-14     	; 0x1286 <__fixunssfsi+0x14>
    1294:	14 c0       	rjmp	.+40     	; 0x12be <__fixunssfsi+0x4c>
    1296:	b1 30       	cpi	r27, 0x01	; 1
    1298:	91 f0       	breq	.+36     	; 0x12be <__fixunssfsi+0x4c>
    129a:	0e 94 ef 09 	call	0x13de	; 0x13de <__fp_zero>
    129e:	b1 e0       	ldi	r27, 0x01	; 1
    12a0:	08 95       	ret
    12a2:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__fp_zero>
    12a6:	67 2f       	mov	r22, r23
    12a8:	78 2f       	mov	r23, r24
    12aa:	88 27       	eor	r24, r24
    12ac:	b8 5f       	subi	r27, 0xF8	; 248
    12ae:	39 f0       	breq	.+14     	; 0x12be <__fixunssfsi+0x4c>
    12b0:	b9 3f       	cpi	r27, 0xF9	; 249
    12b2:	cc f3       	brlt	.-14     	; 0x12a6 <__fixunssfsi+0x34>
    12b4:	86 95       	lsr	r24
    12b6:	77 95       	ror	r23
    12b8:	67 95       	ror	r22
    12ba:	b3 95       	inc	r27
    12bc:	d9 f7       	brne	.-10     	; 0x12b4 <__fixunssfsi+0x42>
    12be:	3e f4       	brtc	.+14     	; 0x12ce <__fixunssfsi+0x5c>
    12c0:	90 95       	com	r25
    12c2:	80 95       	com	r24
    12c4:	70 95       	com	r23
    12c6:	61 95       	neg	r22
    12c8:	7f 4f       	sbci	r23, 0xFF	; 255
    12ca:	8f 4f       	sbci	r24, 0xFF	; 255
    12cc:	9f 4f       	sbci	r25, 0xFF	; 255
    12ce:	08 95       	ret

000012d0 <__floatunsisf>:
    12d0:	e8 94       	clt
    12d2:	09 c0       	rjmp	.+18     	; 0x12e6 <__floatsisf+0x12>

000012d4 <__floatsisf>:
    12d4:	97 fb       	bst	r25, 7
    12d6:	3e f4       	brtc	.+14     	; 0x12e6 <__floatsisf+0x12>
    12d8:	90 95       	com	r25
    12da:	80 95       	com	r24
    12dc:	70 95       	com	r23
    12de:	61 95       	neg	r22
    12e0:	7f 4f       	sbci	r23, 0xFF	; 255
    12e2:	8f 4f       	sbci	r24, 0xFF	; 255
    12e4:	9f 4f       	sbci	r25, 0xFF	; 255
    12e6:	99 23       	and	r25, r25
    12e8:	a9 f0       	breq	.+42     	; 0x1314 <__floatsisf+0x40>
    12ea:	f9 2f       	mov	r31, r25
    12ec:	96 e9       	ldi	r25, 0x96	; 150
    12ee:	bb 27       	eor	r27, r27
    12f0:	93 95       	inc	r25
    12f2:	f6 95       	lsr	r31
    12f4:	87 95       	ror	r24
    12f6:	77 95       	ror	r23
    12f8:	67 95       	ror	r22
    12fa:	b7 95       	ror	r27
    12fc:	f1 11       	cpse	r31, r1
    12fe:	f8 cf       	rjmp	.-16     	; 0x12f0 <__floatsisf+0x1c>
    1300:	fa f4       	brpl	.+62     	; 0x1340 <__floatsisf+0x6c>
    1302:	bb 0f       	add	r27, r27
    1304:	11 f4       	brne	.+4      	; 0x130a <__floatsisf+0x36>
    1306:	60 ff       	sbrs	r22, 0
    1308:	1b c0       	rjmp	.+54     	; 0x1340 <__floatsisf+0x6c>
    130a:	6f 5f       	subi	r22, 0xFF	; 255
    130c:	7f 4f       	sbci	r23, 0xFF	; 255
    130e:	8f 4f       	sbci	r24, 0xFF	; 255
    1310:	9f 4f       	sbci	r25, 0xFF	; 255
    1312:	16 c0       	rjmp	.+44     	; 0x1340 <__floatsisf+0x6c>
    1314:	88 23       	and	r24, r24
    1316:	11 f0       	breq	.+4      	; 0x131c <__floatsisf+0x48>
    1318:	96 e9       	ldi	r25, 0x96	; 150
    131a:	11 c0       	rjmp	.+34     	; 0x133e <__floatsisf+0x6a>
    131c:	77 23       	and	r23, r23
    131e:	21 f0       	breq	.+8      	; 0x1328 <__floatsisf+0x54>
    1320:	9e e8       	ldi	r25, 0x8E	; 142
    1322:	87 2f       	mov	r24, r23
    1324:	76 2f       	mov	r23, r22
    1326:	05 c0       	rjmp	.+10     	; 0x1332 <__floatsisf+0x5e>
    1328:	66 23       	and	r22, r22
    132a:	71 f0       	breq	.+28     	; 0x1348 <__floatsisf+0x74>
    132c:	96 e8       	ldi	r25, 0x86	; 134
    132e:	86 2f       	mov	r24, r22
    1330:	70 e0       	ldi	r23, 0x00	; 0
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	2a f0       	brmi	.+10     	; 0x1340 <__floatsisf+0x6c>
    1336:	9a 95       	dec	r25
    1338:	66 0f       	add	r22, r22
    133a:	77 1f       	adc	r23, r23
    133c:	88 1f       	adc	r24, r24
    133e:	da f7       	brpl	.-10     	; 0x1336 <__floatsisf+0x62>
    1340:	88 0f       	add	r24, r24
    1342:	96 95       	lsr	r25
    1344:	87 95       	ror	r24
    1346:	97 f9       	bld	r25, 7
    1348:	08 95       	ret

0000134a <__fp_inf>:
    134a:	97 f9       	bld	r25, 7
    134c:	9f 67       	ori	r25, 0x7F	; 127
    134e:	80 e8       	ldi	r24, 0x80	; 128
    1350:	70 e0       	ldi	r23, 0x00	; 0
    1352:	60 e0       	ldi	r22, 0x00	; 0
    1354:	08 95       	ret

00001356 <__fp_nan>:
    1356:	9f ef       	ldi	r25, 0xFF	; 255
    1358:	80 ec       	ldi	r24, 0xC0	; 192
    135a:	08 95       	ret

0000135c <__fp_pscA>:
    135c:	00 24       	eor	r0, r0
    135e:	0a 94       	dec	r0
    1360:	16 16       	cp	r1, r22
    1362:	17 06       	cpc	r1, r23
    1364:	18 06       	cpc	r1, r24
    1366:	09 06       	cpc	r0, r25
    1368:	08 95       	ret

0000136a <__fp_pscB>:
    136a:	00 24       	eor	r0, r0
    136c:	0a 94       	dec	r0
    136e:	12 16       	cp	r1, r18
    1370:	13 06       	cpc	r1, r19
    1372:	14 06       	cpc	r1, r20
    1374:	05 06       	cpc	r0, r21
    1376:	08 95       	ret

00001378 <__fp_round>:
    1378:	09 2e       	mov	r0, r25
    137a:	03 94       	inc	r0
    137c:	00 0c       	add	r0, r0
    137e:	11 f4       	brne	.+4      	; 0x1384 <__fp_round+0xc>
    1380:	88 23       	and	r24, r24
    1382:	52 f0       	brmi	.+20     	; 0x1398 <__fp_round+0x20>
    1384:	bb 0f       	add	r27, r27
    1386:	40 f4       	brcc	.+16     	; 0x1398 <__fp_round+0x20>
    1388:	bf 2b       	or	r27, r31
    138a:	11 f4       	brne	.+4      	; 0x1390 <__fp_round+0x18>
    138c:	60 ff       	sbrs	r22, 0
    138e:	04 c0       	rjmp	.+8      	; 0x1398 <__fp_round+0x20>
    1390:	6f 5f       	subi	r22, 0xFF	; 255
    1392:	7f 4f       	sbci	r23, 0xFF	; 255
    1394:	8f 4f       	sbci	r24, 0xFF	; 255
    1396:	9f 4f       	sbci	r25, 0xFF	; 255
    1398:	08 95       	ret

0000139a <__fp_split3>:
    139a:	57 fd       	sbrc	r21, 7
    139c:	90 58       	subi	r25, 0x80	; 128
    139e:	44 0f       	add	r20, r20
    13a0:	55 1f       	adc	r21, r21
    13a2:	59 f0       	breq	.+22     	; 0x13ba <__fp_splitA+0x10>
    13a4:	5f 3f       	cpi	r21, 0xFF	; 255
    13a6:	71 f0       	breq	.+28     	; 0x13c4 <__fp_splitA+0x1a>
    13a8:	47 95       	ror	r20

000013aa <__fp_splitA>:
    13aa:	88 0f       	add	r24, r24
    13ac:	97 fb       	bst	r25, 7
    13ae:	99 1f       	adc	r25, r25
    13b0:	61 f0       	breq	.+24     	; 0x13ca <__fp_splitA+0x20>
    13b2:	9f 3f       	cpi	r25, 0xFF	; 255
    13b4:	79 f0       	breq	.+30     	; 0x13d4 <__fp_splitA+0x2a>
    13b6:	87 95       	ror	r24
    13b8:	08 95       	ret
    13ba:	12 16       	cp	r1, r18
    13bc:	13 06       	cpc	r1, r19
    13be:	14 06       	cpc	r1, r20
    13c0:	55 1f       	adc	r21, r21
    13c2:	f2 cf       	rjmp	.-28     	; 0x13a8 <__fp_split3+0xe>
    13c4:	46 95       	lsr	r20
    13c6:	f1 df       	rcall	.-30     	; 0x13aa <__fp_splitA>
    13c8:	08 c0       	rjmp	.+16     	; 0x13da <__fp_splitA+0x30>
    13ca:	16 16       	cp	r1, r22
    13cc:	17 06       	cpc	r1, r23
    13ce:	18 06       	cpc	r1, r24
    13d0:	99 1f       	adc	r25, r25
    13d2:	f1 cf       	rjmp	.-30     	; 0x13b6 <__fp_splitA+0xc>
    13d4:	86 95       	lsr	r24
    13d6:	71 05       	cpc	r23, r1
    13d8:	61 05       	cpc	r22, r1
    13da:	08 94       	sec
    13dc:	08 95       	ret

000013de <__fp_zero>:
    13de:	e8 94       	clt

000013e0 <__fp_szero>:
    13e0:	bb 27       	eor	r27, r27
    13e2:	66 27       	eor	r22, r22
    13e4:	77 27       	eor	r23, r23
    13e6:	cb 01       	movw	r24, r22
    13e8:	97 f9       	bld	r25, 7
    13ea:	08 95       	ret

000013ec <__mulsf3>:
    13ec:	0e 94 09 0a 	call	0x1412	; 0x1412 <__mulsf3x>
    13f0:	0c 94 bc 09 	jmp	0x1378	; 0x1378 <__fp_round>
    13f4:	0e 94 ae 09 	call	0x135c	; 0x135c <__fp_pscA>
    13f8:	38 f0       	brcs	.+14     	; 0x1408 <__mulsf3+0x1c>
    13fa:	0e 94 b5 09 	call	0x136a	; 0x136a <__fp_pscB>
    13fe:	20 f0       	brcs	.+8      	; 0x1408 <__mulsf3+0x1c>
    1400:	95 23       	and	r25, r21
    1402:	11 f0       	breq	.+4      	; 0x1408 <__mulsf3+0x1c>
    1404:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_inf>
    1408:	0c 94 ab 09 	jmp	0x1356	; 0x1356 <__fp_nan>
    140c:	11 24       	eor	r1, r1
    140e:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_szero>

00001412 <__mulsf3x>:
    1412:	0e 94 cd 09 	call	0x139a	; 0x139a <__fp_split3>
    1416:	70 f3       	brcs	.-36     	; 0x13f4 <__mulsf3+0x8>

00001418 <__mulsf3_pse>:
    1418:	95 9f       	mul	r25, r21
    141a:	c1 f3       	breq	.-16     	; 0x140c <__mulsf3+0x20>
    141c:	95 0f       	add	r25, r21
    141e:	50 e0       	ldi	r21, 0x00	; 0
    1420:	55 1f       	adc	r21, r21
    1422:	62 9f       	mul	r22, r18
    1424:	f0 01       	movw	r30, r0
    1426:	72 9f       	mul	r23, r18
    1428:	bb 27       	eor	r27, r27
    142a:	f0 0d       	add	r31, r0
    142c:	b1 1d       	adc	r27, r1
    142e:	63 9f       	mul	r22, r19
    1430:	aa 27       	eor	r26, r26
    1432:	f0 0d       	add	r31, r0
    1434:	b1 1d       	adc	r27, r1
    1436:	aa 1f       	adc	r26, r26
    1438:	64 9f       	mul	r22, r20
    143a:	66 27       	eor	r22, r22
    143c:	b0 0d       	add	r27, r0
    143e:	a1 1d       	adc	r26, r1
    1440:	66 1f       	adc	r22, r22
    1442:	82 9f       	mul	r24, r18
    1444:	22 27       	eor	r18, r18
    1446:	b0 0d       	add	r27, r0
    1448:	a1 1d       	adc	r26, r1
    144a:	62 1f       	adc	r22, r18
    144c:	73 9f       	mul	r23, r19
    144e:	b0 0d       	add	r27, r0
    1450:	a1 1d       	adc	r26, r1
    1452:	62 1f       	adc	r22, r18
    1454:	83 9f       	mul	r24, r19
    1456:	a0 0d       	add	r26, r0
    1458:	61 1d       	adc	r22, r1
    145a:	22 1f       	adc	r18, r18
    145c:	74 9f       	mul	r23, r20
    145e:	33 27       	eor	r19, r19
    1460:	a0 0d       	add	r26, r0
    1462:	61 1d       	adc	r22, r1
    1464:	23 1f       	adc	r18, r19
    1466:	84 9f       	mul	r24, r20
    1468:	60 0d       	add	r22, r0
    146a:	21 1d       	adc	r18, r1
    146c:	82 2f       	mov	r24, r18
    146e:	76 2f       	mov	r23, r22
    1470:	6a 2f       	mov	r22, r26
    1472:	11 24       	eor	r1, r1
    1474:	9f 57       	subi	r25, 0x7F	; 127
    1476:	50 40       	sbci	r21, 0x00	; 0
    1478:	9a f0       	brmi	.+38     	; 0x14a0 <__mulsf3_pse+0x88>
    147a:	f1 f0       	breq	.+60     	; 0x14b8 <__mulsf3_pse+0xa0>
    147c:	88 23       	and	r24, r24
    147e:	4a f0       	brmi	.+18     	; 0x1492 <__mulsf3_pse+0x7a>
    1480:	ee 0f       	add	r30, r30
    1482:	ff 1f       	adc	r31, r31
    1484:	bb 1f       	adc	r27, r27
    1486:	66 1f       	adc	r22, r22
    1488:	77 1f       	adc	r23, r23
    148a:	88 1f       	adc	r24, r24
    148c:	91 50       	subi	r25, 0x01	; 1
    148e:	50 40       	sbci	r21, 0x00	; 0
    1490:	a9 f7       	brne	.-22     	; 0x147c <__mulsf3_pse+0x64>
    1492:	9e 3f       	cpi	r25, 0xFE	; 254
    1494:	51 05       	cpc	r21, r1
    1496:	80 f0       	brcs	.+32     	; 0x14b8 <__mulsf3_pse+0xa0>
    1498:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_inf>
    149c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__fp_szero>
    14a0:	5f 3f       	cpi	r21, 0xFF	; 255
    14a2:	e4 f3       	brlt	.-8      	; 0x149c <__mulsf3_pse+0x84>
    14a4:	98 3e       	cpi	r25, 0xE8	; 232
    14a6:	d4 f3       	brlt	.-12     	; 0x149c <__mulsf3_pse+0x84>
    14a8:	86 95       	lsr	r24
    14aa:	77 95       	ror	r23
    14ac:	67 95       	ror	r22
    14ae:	b7 95       	ror	r27
    14b0:	f7 95       	ror	r31
    14b2:	e7 95       	ror	r30
    14b4:	9f 5f       	subi	r25, 0xFF	; 255
    14b6:	c1 f7       	brne	.-16     	; 0x14a8 <__mulsf3_pse+0x90>
    14b8:	fe 2b       	or	r31, r30
    14ba:	88 0f       	add	r24, r24
    14bc:	91 1d       	adc	r25, r1
    14be:	96 95       	lsr	r25
    14c0:	87 95       	ror	r24
    14c2:	97 f9       	bld	r25, 7
    14c4:	08 95       	ret

000014c6 <vfprintf>:
    14c6:	a3 e1       	ldi	r26, 0x13	; 19
    14c8:	b0 e0       	ldi	r27, 0x00	; 0
    14ca:	e9 e6       	ldi	r30, 0x69	; 105
    14cc:	fa e0       	ldi	r31, 0x0A	; 10
    14ce:	0c 94 fe 0d 	jmp	0x1bfc	; 0x1bfc <__prologue_saves__>
    14d2:	6c 01       	movw	r12, r24
    14d4:	4b 01       	movw	r8, r22
    14d6:	2a 01       	movw	r4, r20
    14d8:	fc 01       	movw	r30, r24
    14da:	17 82       	std	Z+7, r1	; 0x07
    14dc:	16 82       	std	Z+6, r1	; 0x06
    14de:	83 81       	ldd	r24, Z+3	; 0x03
    14e0:	81 ff       	sbrs	r24, 1
    14e2:	43 c3       	rjmp	.+1670   	; 0x1b6a <vfprintf+0x6a4>
    14e4:	ae 01       	movw	r20, r28
    14e6:	4f 5f       	subi	r20, 0xFF	; 255
    14e8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ea:	3a 01       	movw	r6, r20
    14ec:	f6 01       	movw	r30, r12
    14ee:	93 81       	ldd	r25, Z+3	; 0x03
    14f0:	f4 01       	movw	r30, r8
    14f2:	93 fd       	sbrc	r25, 3
    14f4:	85 91       	lpm	r24, Z+
    14f6:	93 ff       	sbrs	r25, 3
    14f8:	81 91       	ld	r24, Z+
    14fa:	4f 01       	movw	r8, r30
    14fc:	88 23       	and	r24, r24
    14fe:	09 f4       	brne	.+2      	; 0x1502 <vfprintf+0x3c>
    1500:	30 c3       	rjmp	.+1632   	; 0x1b62 <vfprintf+0x69c>
    1502:	85 32       	cpi	r24, 0x25	; 37
    1504:	39 f4       	brne	.+14     	; 0x1514 <vfprintf+0x4e>
    1506:	93 fd       	sbrc	r25, 3
    1508:	85 91       	lpm	r24, Z+
    150a:	93 ff       	sbrs	r25, 3
    150c:	81 91       	ld	r24, Z+
    150e:	4f 01       	movw	r8, r30
    1510:	85 32       	cpi	r24, 0x25	; 37
    1512:	39 f4       	brne	.+14     	; 0x1522 <vfprintf+0x5c>
    1514:	b6 01       	movw	r22, r12
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    151c:	52 01       	movw	r10, r4
    151e:	25 01       	movw	r4, r10
    1520:	e5 cf       	rjmp	.-54     	; 0x14ec <vfprintf+0x26>
    1522:	10 e0       	ldi	r17, 0x00	; 0
    1524:	f1 2c       	mov	r15, r1
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	20 32       	cpi	r18, 0x20	; 32
    152a:	a0 f4       	brcc	.+40     	; 0x1554 <vfprintf+0x8e>
    152c:	8b 32       	cpi	r24, 0x2B	; 43
    152e:	69 f0       	breq	.+26     	; 0x154a <vfprintf+0x84>
    1530:	30 f4       	brcc	.+12     	; 0x153e <vfprintf+0x78>
    1532:	80 32       	cpi	r24, 0x20	; 32
    1534:	59 f0       	breq	.+22     	; 0x154c <vfprintf+0x86>
    1536:	83 32       	cpi	r24, 0x23	; 35
    1538:	69 f4       	brne	.+26     	; 0x1554 <vfprintf+0x8e>
    153a:	20 61       	ori	r18, 0x10	; 16
    153c:	2c c0       	rjmp	.+88     	; 0x1596 <vfprintf+0xd0>
    153e:	8d 32       	cpi	r24, 0x2D	; 45
    1540:	39 f0       	breq	.+14     	; 0x1550 <vfprintf+0x8a>
    1542:	80 33       	cpi	r24, 0x30	; 48
    1544:	39 f4       	brne	.+14     	; 0x1554 <vfprintf+0x8e>
    1546:	21 60       	ori	r18, 0x01	; 1
    1548:	26 c0       	rjmp	.+76     	; 0x1596 <vfprintf+0xd0>
    154a:	22 60       	ori	r18, 0x02	; 2
    154c:	24 60       	ori	r18, 0x04	; 4
    154e:	23 c0       	rjmp	.+70     	; 0x1596 <vfprintf+0xd0>
    1550:	28 60       	ori	r18, 0x08	; 8
    1552:	21 c0       	rjmp	.+66     	; 0x1596 <vfprintf+0xd0>
    1554:	27 fd       	sbrc	r18, 7
    1556:	27 c0       	rjmp	.+78     	; 0x15a6 <vfprintf+0xe0>
    1558:	30 ed       	ldi	r19, 0xD0	; 208
    155a:	38 0f       	add	r19, r24
    155c:	3a 30       	cpi	r19, 0x0A	; 10
    155e:	78 f4       	brcc	.+30     	; 0x157e <vfprintf+0xb8>
    1560:	26 ff       	sbrs	r18, 6
    1562:	06 c0       	rjmp	.+12     	; 0x1570 <vfprintf+0xaa>
    1564:	fa e0       	ldi	r31, 0x0A	; 10
    1566:	1f 9f       	mul	r17, r31
    1568:	30 0d       	add	r19, r0
    156a:	11 24       	eor	r1, r1
    156c:	13 2f       	mov	r17, r19
    156e:	13 c0       	rjmp	.+38     	; 0x1596 <vfprintf+0xd0>
    1570:	4a e0       	ldi	r20, 0x0A	; 10
    1572:	f4 9e       	mul	r15, r20
    1574:	30 0d       	add	r19, r0
    1576:	11 24       	eor	r1, r1
    1578:	f3 2e       	mov	r15, r19
    157a:	20 62       	ori	r18, 0x20	; 32
    157c:	0c c0       	rjmp	.+24     	; 0x1596 <vfprintf+0xd0>
    157e:	8e 32       	cpi	r24, 0x2E	; 46
    1580:	21 f4       	brne	.+8      	; 0x158a <vfprintf+0xc4>
    1582:	26 fd       	sbrc	r18, 6
    1584:	ee c2       	rjmp	.+1500   	; 0x1b62 <vfprintf+0x69c>
    1586:	20 64       	ori	r18, 0x40	; 64
    1588:	06 c0       	rjmp	.+12     	; 0x1596 <vfprintf+0xd0>
    158a:	8c 36       	cpi	r24, 0x6C	; 108
    158c:	11 f4       	brne	.+4      	; 0x1592 <vfprintf+0xcc>
    158e:	20 68       	ori	r18, 0x80	; 128
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <vfprintf+0xd0>
    1592:	88 36       	cpi	r24, 0x68	; 104
    1594:	41 f4       	brne	.+16     	; 0x15a6 <vfprintf+0xe0>
    1596:	f4 01       	movw	r30, r8
    1598:	93 fd       	sbrc	r25, 3
    159a:	85 91       	lpm	r24, Z+
    159c:	93 ff       	sbrs	r25, 3
    159e:	81 91       	ld	r24, Z+
    15a0:	4f 01       	movw	r8, r30
    15a2:	81 11       	cpse	r24, r1
    15a4:	c1 cf       	rjmp	.-126    	; 0x1528 <vfprintf+0x62>
    15a6:	9b eb       	ldi	r25, 0xBB	; 187
    15a8:	98 0f       	add	r25, r24
    15aa:	93 30       	cpi	r25, 0x03	; 3
    15ac:	18 f4       	brcc	.+6      	; 0x15b4 <vfprintf+0xee>
    15ae:	20 61       	ori	r18, 0x10	; 16
    15b0:	80 5e       	subi	r24, 0xE0	; 224
    15b2:	06 c0       	rjmp	.+12     	; 0x15c0 <vfprintf+0xfa>
    15b4:	9b e9       	ldi	r25, 0x9B	; 155
    15b6:	98 0f       	add	r25, r24
    15b8:	93 30       	cpi	r25, 0x03	; 3
    15ba:	08 f0       	brcs	.+2      	; 0x15be <vfprintf+0xf8>
    15bc:	71 c1       	rjmp	.+738    	; 0x18a0 <vfprintf+0x3da>
    15be:	2f 7e       	andi	r18, 0xEF	; 239
    15c0:	26 ff       	sbrs	r18, 6
    15c2:	16 e0       	ldi	r17, 0x06	; 6
    15c4:	2f 73       	andi	r18, 0x3F	; 63
    15c6:	32 2e       	mov	r3, r18
    15c8:	85 36       	cpi	r24, 0x65	; 101
    15ca:	19 f4       	brne	.+6      	; 0x15d2 <vfprintf+0x10c>
    15cc:	20 64       	ori	r18, 0x40	; 64
    15ce:	32 2e       	mov	r3, r18
    15d0:	08 c0       	rjmp	.+16     	; 0x15e2 <vfprintf+0x11c>
    15d2:	86 36       	cpi	r24, 0x66	; 102
    15d4:	21 f4       	brne	.+8      	; 0x15de <vfprintf+0x118>
    15d6:	f2 2f       	mov	r31, r18
    15d8:	f0 68       	ori	r31, 0x80	; 128
    15da:	3f 2e       	mov	r3, r31
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <vfprintf+0x11c>
    15de:	11 11       	cpse	r17, r1
    15e0:	11 50       	subi	r17, 0x01	; 1
    15e2:	37 fe       	sbrs	r3, 7
    15e4:	07 c0       	rjmp	.+14     	; 0x15f4 <vfprintf+0x12e>
    15e6:	1c 33       	cpi	r17, 0x3C	; 60
    15e8:	50 f4       	brcc	.+20     	; 0x15fe <vfprintf+0x138>
    15ea:	ee 24       	eor	r14, r14
    15ec:	e3 94       	inc	r14
    15ee:	e1 0e       	add	r14, r17
    15f0:	27 e0       	ldi	r18, 0x07	; 7
    15f2:	0b c0       	rjmp	.+22     	; 0x160a <vfprintf+0x144>
    15f4:	18 30       	cpi	r17, 0x08	; 8
    15f6:	38 f0       	brcs	.+14     	; 0x1606 <vfprintf+0x140>
    15f8:	27 e0       	ldi	r18, 0x07	; 7
    15fa:	17 e0       	ldi	r17, 0x07	; 7
    15fc:	05 c0       	rjmp	.+10     	; 0x1608 <vfprintf+0x142>
    15fe:	27 e0       	ldi	r18, 0x07	; 7
    1600:	4c e3       	ldi	r20, 0x3C	; 60
    1602:	e4 2e       	mov	r14, r20
    1604:	02 c0       	rjmp	.+4      	; 0x160a <vfprintf+0x144>
    1606:	21 2f       	mov	r18, r17
    1608:	e1 2c       	mov	r14, r1
    160a:	52 01       	movw	r10, r4
    160c:	44 e0       	ldi	r20, 0x04	; 4
    160e:	a4 0e       	add	r10, r20
    1610:	b1 1c       	adc	r11, r1
    1612:	f2 01       	movw	r30, r4
    1614:	60 81       	ld	r22, Z
    1616:	71 81       	ldd	r23, Z+1	; 0x01
    1618:	82 81       	ldd	r24, Z+2	; 0x02
    161a:	93 81       	ldd	r25, Z+3	; 0x03
    161c:	0e 2d       	mov	r16, r14
    161e:	a3 01       	movw	r20, r6
    1620:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__ftoa_engine>
    1624:	2c 01       	movw	r4, r24
    1626:	09 81       	ldd	r16, Y+1	; 0x01
    1628:	00 ff       	sbrs	r16, 0
    162a:	02 c0       	rjmp	.+4      	; 0x1630 <vfprintf+0x16a>
    162c:	03 ff       	sbrs	r16, 3
    162e:	07 c0       	rjmp	.+14     	; 0x163e <vfprintf+0x178>
    1630:	31 fc       	sbrc	r3, 1
    1632:	08 c0       	rjmp	.+16     	; 0x1644 <vfprintf+0x17e>
    1634:	32 fe       	sbrs	r3, 2
    1636:	09 c0       	rjmp	.+18     	; 0x164a <vfprintf+0x184>
    1638:	30 e2       	ldi	r19, 0x20	; 32
    163a:	23 2e       	mov	r2, r19
    163c:	07 c0       	rjmp	.+14     	; 0x164c <vfprintf+0x186>
    163e:	2d e2       	ldi	r18, 0x2D	; 45
    1640:	22 2e       	mov	r2, r18
    1642:	04 c0       	rjmp	.+8      	; 0x164c <vfprintf+0x186>
    1644:	9b e2       	ldi	r25, 0x2B	; 43
    1646:	29 2e       	mov	r2, r25
    1648:	01 c0       	rjmp	.+2      	; 0x164c <vfprintf+0x186>
    164a:	21 2c       	mov	r2, r1
    164c:	80 2f       	mov	r24, r16
    164e:	8c 70       	andi	r24, 0x0C	; 12
    1650:	19 f0       	breq	.+6      	; 0x1658 <vfprintf+0x192>
    1652:	21 10       	cpse	r2, r1
    1654:	68 c2       	rjmp	.+1232   	; 0x1b26 <vfprintf+0x660>
    1656:	a8 c2       	rjmp	.+1360   	; 0x1ba8 <vfprintf+0x6e2>
    1658:	37 fe       	sbrs	r3, 7
    165a:	0f c0       	rjmp	.+30     	; 0x167a <vfprintf+0x1b4>
    165c:	e4 0c       	add	r14, r4
    165e:	04 ff       	sbrs	r16, 4
    1660:	04 c0       	rjmp	.+8      	; 0x166a <vfprintf+0x1a4>
    1662:	8a 81       	ldd	r24, Y+2	; 0x02
    1664:	81 33       	cpi	r24, 0x31	; 49
    1666:	09 f4       	brne	.+2      	; 0x166a <vfprintf+0x1a4>
    1668:	ea 94       	dec	r14
    166a:	1e 14       	cp	r1, r14
    166c:	74 f5       	brge	.+92     	; 0x16ca <vfprintf+0x204>
    166e:	f8 e0       	ldi	r31, 0x08	; 8
    1670:	fe 15       	cp	r31, r14
    1672:	78 f5       	brcc	.+94     	; 0x16d2 <vfprintf+0x20c>
    1674:	88 e0       	ldi	r24, 0x08	; 8
    1676:	e8 2e       	mov	r14, r24
    1678:	2c c0       	rjmp	.+88     	; 0x16d2 <vfprintf+0x20c>
    167a:	36 fc       	sbrc	r3, 6
    167c:	2a c0       	rjmp	.+84     	; 0x16d2 <vfprintf+0x20c>
    167e:	81 2f       	mov	r24, r17
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	84 15       	cp	r24, r4
    1684:	95 05       	cpc	r25, r5
    1686:	9c f0       	brlt	.+38     	; 0x16ae <vfprintf+0x1e8>
    1688:	2c ef       	ldi	r18, 0xFC	; 252
    168a:	42 16       	cp	r4, r18
    168c:	2f ef       	ldi	r18, 0xFF	; 255
    168e:	52 06       	cpc	r5, r18
    1690:	74 f0       	brlt	.+28     	; 0x16ae <vfprintf+0x1e8>
    1692:	43 2d       	mov	r20, r3
    1694:	40 68       	ori	r20, 0x80	; 128
    1696:	34 2e       	mov	r3, r20
    1698:	0a c0       	rjmp	.+20     	; 0x16ae <vfprintf+0x1e8>
    169a:	e2 e0       	ldi	r30, 0x02	; 2
    169c:	f0 e0       	ldi	r31, 0x00	; 0
    169e:	ec 0f       	add	r30, r28
    16a0:	fd 1f       	adc	r31, r29
    16a2:	e1 0f       	add	r30, r17
    16a4:	f1 1d       	adc	r31, r1
    16a6:	80 81       	ld	r24, Z
    16a8:	80 33       	cpi	r24, 0x30	; 48
    16aa:	19 f4       	brne	.+6      	; 0x16b2 <vfprintf+0x1ec>
    16ac:	11 50       	subi	r17, 0x01	; 1
    16ae:	11 11       	cpse	r17, r1
    16b0:	f4 cf       	rjmp	.-24     	; 0x169a <vfprintf+0x1d4>
    16b2:	37 fe       	sbrs	r3, 7
    16b4:	0e c0       	rjmp	.+28     	; 0x16d2 <vfprintf+0x20c>
    16b6:	ee 24       	eor	r14, r14
    16b8:	e3 94       	inc	r14
    16ba:	e1 0e       	add	r14, r17
    16bc:	81 2f       	mov	r24, r17
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	48 16       	cp	r4, r24
    16c2:	59 06       	cpc	r5, r25
    16c4:	2c f4       	brge	.+10     	; 0x16d0 <vfprintf+0x20a>
    16c6:	14 19       	sub	r17, r4
    16c8:	04 c0       	rjmp	.+8      	; 0x16d2 <vfprintf+0x20c>
    16ca:	ee 24       	eor	r14, r14
    16cc:	e3 94       	inc	r14
    16ce:	01 c0       	rjmp	.+2      	; 0x16d2 <vfprintf+0x20c>
    16d0:	10 e0       	ldi	r17, 0x00	; 0
    16d2:	37 fe       	sbrs	r3, 7
    16d4:	06 c0       	rjmp	.+12     	; 0x16e2 <vfprintf+0x21c>
    16d6:	14 14       	cp	r1, r4
    16d8:	15 04       	cpc	r1, r5
    16da:	34 f4       	brge	.+12     	; 0x16e8 <vfprintf+0x222>
    16dc:	c2 01       	movw	r24, r4
    16de:	01 96       	adiw	r24, 0x01	; 1
    16e0:	05 c0       	rjmp	.+10     	; 0x16ec <vfprintf+0x226>
    16e2:	85 e0       	ldi	r24, 0x05	; 5
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <vfprintf+0x226>
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	21 10       	cpse	r2, r1
    16ee:	01 96       	adiw	r24, 0x01	; 1
    16f0:	11 23       	and	r17, r17
    16f2:	31 f0       	breq	.+12     	; 0x1700 <vfprintf+0x23a>
    16f4:	21 2f       	mov	r18, r17
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	2f 5f       	subi	r18, 0xFF	; 255
    16fa:	3f 4f       	sbci	r19, 0xFF	; 255
    16fc:	82 0f       	add	r24, r18
    16fe:	93 1f       	adc	r25, r19
    1700:	2f 2d       	mov	r18, r15
    1702:	30 e0       	ldi	r19, 0x00	; 0
    1704:	82 17       	cp	r24, r18
    1706:	93 07       	cpc	r25, r19
    1708:	14 f4       	brge	.+4      	; 0x170e <vfprintf+0x248>
    170a:	f8 1a       	sub	r15, r24
    170c:	01 c0       	rjmp	.+2      	; 0x1710 <vfprintf+0x24a>
    170e:	f1 2c       	mov	r15, r1
    1710:	83 2d       	mov	r24, r3
    1712:	89 70       	andi	r24, 0x09	; 9
    1714:	49 f4       	brne	.+18     	; 0x1728 <vfprintf+0x262>
    1716:	ff 20       	and	r15, r15
    1718:	39 f0       	breq	.+14     	; 0x1728 <vfprintf+0x262>
    171a:	b6 01       	movw	r22, r12
    171c:	80 e2       	ldi	r24, 0x20	; 32
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1724:	fa 94       	dec	r15
    1726:	f7 cf       	rjmp	.-18     	; 0x1716 <vfprintf+0x250>
    1728:	22 20       	and	r2, r2
    172a:	29 f0       	breq	.+10     	; 0x1736 <vfprintf+0x270>
    172c:	b6 01       	movw	r22, r12
    172e:	82 2d       	mov	r24, r2
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1736:	33 fc       	sbrc	r3, 3
    1738:	09 c0       	rjmp	.+18     	; 0x174c <vfprintf+0x286>
    173a:	ff 20       	and	r15, r15
    173c:	39 f0       	breq	.+14     	; 0x174c <vfprintf+0x286>
    173e:	b6 01       	movw	r22, r12
    1740:	80 e3       	ldi	r24, 0x30	; 48
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1748:	fa 94       	dec	r15
    174a:	f7 cf       	rjmp	.-18     	; 0x173a <vfprintf+0x274>
    174c:	37 fe       	sbrs	r3, 7
    174e:	5a c0       	rjmp	.+180    	; 0x1804 <vfprintf+0x33e>
    1750:	94 2d       	mov	r25, r4
    1752:	85 2d       	mov	r24, r5
    1754:	57 fe       	sbrs	r5, 7
    1756:	02 c0       	rjmp	.+4      	; 0x175c <vfprintf+0x296>
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	80 e0       	ldi	r24, 0x00	; 0
    175c:	29 2e       	mov	r2, r25
    175e:	38 2e       	mov	r3, r24
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	a2 01       	movw	r20, r4
    1766:	4e 19       	sub	r20, r14
    1768:	51 09       	sbc	r21, r1
    176a:	5d 87       	std	Y+13, r21	; 0x0d
    176c:	4c 87       	std	Y+12, r20	; 0x0c
    176e:	a2 01       	movw	r20, r4
    1770:	42 19       	sub	r20, r2
    1772:	53 09       	sbc	r21, r3
    1774:	5f 87       	std	Y+15, r21	; 0x0f
    1776:	4e 87       	std	Y+14, r20	; 0x0e
    1778:	61 2f       	mov	r22, r17
    177a:	70 e0       	ldi	r23, 0x00	; 0
    177c:	44 27       	eor	r20, r20
    177e:	55 27       	eor	r21, r21
    1780:	46 1b       	sub	r20, r22
    1782:	57 0b       	sbc	r21, r23
    1784:	59 8b       	std	Y+17, r21	; 0x11
    1786:	48 8b       	std	Y+16, r20	; 0x10
    1788:	5f ef       	ldi	r21, 0xFF	; 255
    178a:	25 16       	cp	r2, r21
    178c:	35 06       	cpc	r3, r21
    178e:	49 f4       	brne	.+18     	; 0x17a2 <vfprintf+0x2dc>
    1790:	b6 01       	movw	r22, r12
    1792:	8e e2       	ldi	r24, 0x2E	; 46
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	2a 8b       	std	Y+18, r18	; 0x12
    1798:	3b 8b       	std	Y+19, r19	; 0x13
    179a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    179e:	3b 89       	ldd	r19, Y+19	; 0x13
    17a0:	2a 89       	ldd	r18, Y+18	; 0x12
    17a2:	42 14       	cp	r4, r2
    17a4:	53 04       	cpc	r5, r3
    17a6:	6c f0       	brlt	.+26     	; 0x17c2 <vfprintf+0x2fc>
    17a8:	4c 85       	ldd	r20, Y+12	; 0x0c
    17aa:	5d 85       	ldd	r21, Y+13	; 0x0d
    17ac:	42 15       	cp	r20, r2
    17ae:	53 05       	cpc	r21, r3
    17b0:	44 f4       	brge	.+16     	; 0x17c2 <vfprintf+0x2fc>
    17b2:	ee 85       	ldd	r30, Y+14	; 0x0e
    17b4:	ff 85       	ldd	r31, Y+15	; 0x0f
    17b6:	e2 0f       	add	r30, r18
    17b8:	f3 1f       	adc	r31, r19
    17ba:	e6 0d       	add	r30, r6
    17bc:	f7 1d       	adc	r31, r7
    17be:	81 81       	ldd	r24, Z+1	; 0x01
    17c0:	01 c0       	rjmp	.+2      	; 0x17c4 <vfprintf+0x2fe>
    17c2:	80 e3       	ldi	r24, 0x30	; 48
    17c4:	51 e0       	ldi	r21, 0x01	; 1
    17c6:	25 1a       	sub	r2, r21
    17c8:	31 08       	sbc	r3, r1
    17ca:	2f 5f       	subi	r18, 0xFF	; 255
    17cc:	3f 4f       	sbci	r19, 0xFF	; 255
    17ce:	48 89       	ldd	r20, Y+16	; 0x10
    17d0:	59 89       	ldd	r21, Y+17	; 0x11
    17d2:	24 16       	cp	r2, r20
    17d4:	35 06       	cpc	r3, r21
    17d6:	4c f0       	brlt	.+18     	; 0x17ea <vfprintf+0x324>
    17d8:	b6 01       	movw	r22, r12
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	2a 8b       	std	Y+18, r18	; 0x12
    17de:	3b 8b       	std	Y+19, r19	; 0x13
    17e0:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    17e4:	2a 89       	ldd	r18, Y+18	; 0x12
    17e6:	3b 89       	ldd	r19, Y+19	; 0x13
    17e8:	cf cf       	rjmp	.-98     	; 0x1788 <vfprintf+0x2c2>
    17ea:	24 14       	cp	r2, r4
    17ec:	35 04       	cpc	r3, r5
    17ee:	39 f4       	brne	.+14     	; 0x17fe <vfprintf+0x338>
    17f0:	9a 81       	ldd	r25, Y+2	; 0x02
    17f2:	96 33       	cpi	r25, 0x36	; 54
    17f4:	18 f4       	brcc	.+6      	; 0x17fc <vfprintf+0x336>
    17f6:	95 33       	cpi	r25, 0x35	; 53
    17f8:	11 f4       	brne	.+4      	; 0x17fe <vfprintf+0x338>
    17fa:	04 ff       	sbrs	r16, 4
    17fc:	81 e3       	ldi	r24, 0x31	; 49
    17fe:	b6 01       	movw	r22, r12
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	4b c0       	rjmp	.+150    	; 0x189a <vfprintf+0x3d4>
    1804:	8a 81       	ldd	r24, Y+2	; 0x02
    1806:	81 33       	cpi	r24, 0x31	; 49
    1808:	09 f0       	breq	.+2      	; 0x180c <vfprintf+0x346>
    180a:	0f 7e       	andi	r16, 0xEF	; 239
    180c:	b6 01       	movw	r22, r12
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1814:	11 11       	cpse	r17, r1
    1816:	05 c0       	rjmp	.+10     	; 0x1822 <vfprintf+0x35c>
    1818:	34 fc       	sbrc	r3, 4
    181a:	18 c0       	rjmp	.+48     	; 0x184c <vfprintf+0x386>
    181c:	85 e6       	ldi	r24, 0x65	; 101
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	17 c0       	rjmp	.+46     	; 0x1850 <vfprintf+0x38a>
    1822:	b6 01       	movw	r22, r12
    1824:	8e e2       	ldi	r24, 0x2E	; 46
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    182c:	82 e0       	ldi	r24, 0x02	; 2
    182e:	ee 24       	eor	r14, r14
    1830:	e3 94       	inc	r14
    1832:	e8 0e       	add	r14, r24
    1834:	f3 01       	movw	r30, r6
    1836:	e8 0f       	add	r30, r24
    1838:	f1 1d       	adc	r31, r1
    183a:	80 81       	ld	r24, Z
    183c:	b6 01       	movw	r22, r12
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1844:	11 50       	subi	r17, 0x01	; 1
    1846:	8e 2d       	mov	r24, r14
    1848:	91 f7       	brne	.-28     	; 0x182e <vfprintf+0x368>
    184a:	e6 cf       	rjmp	.-52     	; 0x1818 <vfprintf+0x352>
    184c:	85 e4       	ldi	r24, 0x45	; 69
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	b6 01       	movw	r22, r12
    1852:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1856:	57 fc       	sbrc	r5, 7
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <vfprintf+0x39e>
    185a:	41 14       	cp	r4, r1
    185c:	51 04       	cpc	r5, r1
    185e:	39 f4       	brne	.+14     	; 0x186e <vfprintf+0x3a8>
    1860:	04 ff       	sbrs	r16, 4
    1862:	05 c0       	rjmp	.+10     	; 0x186e <vfprintf+0x3a8>
    1864:	51 94       	neg	r5
    1866:	41 94       	neg	r4
    1868:	51 08       	sbc	r5, r1
    186a:	8d e2       	ldi	r24, 0x2D	; 45
    186c:	01 c0       	rjmp	.+2      	; 0x1870 <vfprintf+0x3aa>
    186e:	8b e2       	ldi	r24, 0x2B	; 43
    1870:	b6 01       	movw	r22, r12
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1878:	80 e3       	ldi	r24, 0x30	; 48
    187a:	9a e0       	ldi	r25, 0x0A	; 10
    187c:	49 16       	cp	r4, r25
    187e:	51 04       	cpc	r5, r1
    1880:	2c f0       	brlt	.+10     	; 0x188c <vfprintf+0x3c6>
    1882:	8f 5f       	subi	r24, 0xFF	; 255
    1884:	5a e0       	ldi	r21, 0x0A	; 10
    1886:	45 1a       	sub	r4, r21
    1888:	51 08       	sbc	r5, r1
    188a:	f7 cf       	rjmp	.-18     	; 0x187a <vfprintf+0x3b4>
    188c:	b6 01       	movw	r22, r12
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1894:	b6 01       	movw	r22, r12
    1896:	c2 01       	movw	r24, r4
    1898:	c0 96       	adiw	r24, 0x30	; 48
    189a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    189e:	57 c1       	rjmp	.+686    	; 0x1b4e <vfprintf+0x688>
    18a0:	83 36       	cpi	r24, 0x63	; 99
    18a2:	31 f0       	breq	.+12     	; 0x18b0 <vfprintf+0x3ea>
    18a4:	83 37       	cpi	r24, 0x73	; 115
    18a6:	79 f0       	breq	.+30     	; 0x18c6 <vfprintf+0x400>
    18a8:	83 35       	cpi	r24, 0x53	; 83
    18aa:	09 f0       	breq	.+2      	; 0x18ae <vfprintf+0x3e8>
    18ac:	58 c0       	rjmp	.+176    	; 0x195e <vfprintf+0x498>
    18ae:	21 c0       	rjmp	.+66     	; 0x18f2 <vfprintf+0x42c>
    18b0:	52 01       	movw	r10, r4
    18b2:	e2 e0       	ldi	r30, 0x02	; 2
    18b4:	ae 0e       	add	r10, r30
    18b6:	b1 1c       	adc	r11, r1
    18b8:	f2 01       	movw	r30, r4
    18ba:	80 81       	ld	r24, Z
    18bc:	89 83       	std	Y+1, r24	; 0x01
    18be:	01 e0       	ldi	r16, 0x01	; 1
    18c0:	10 e0       	ldi	r17, 0x00	; 0
    18c2:	23 01       	movw	r4, r6
    18c4:	14 c0       	rjmp	.+40     	; 0x18ee <vfprintf+0x428>
    18c6:	52 01       	movw	r10, r4
    18c8:	f2 e0       	ldi	r31, 0x02	; 2
    18ca:	af 0e       	add	r10, r31
    18cc:	b1 1c       	adc	r11, r1
    18ce:	f2 01       	movw	r30, r4
    18d0:	40 80       	ld	r4, Z
    18d2:	51 80       	ldd	r5, Z+1	; 0x01
    18d4:	26 ff       	sbrs	r18, 6
    18d6:	03 c0       	rjmp	.+6      	; 0x18de <vfprintf+0x418>
    18d8:	61 2f       	mov	r22, r17
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	02 c0       	rjmp	.+4      	; 0x18e2 <vfprintf+0x41c>
    18de:	6f ef       	ldi	r22, 0xFF	; 255
    18e0:	7f ef       	ldi	r23, 0xFF	; 255
    18e2:	c2 01       	movw	r24, r4
    18e4:	2a 8b       	std	Y+18, r18	; 0x12
    18e6:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <strnlen>
    18ea:	8c 01       	movw	r16, r24
    18ec:	2a 89       	ldd	r18, Y+18	; 0x12
    18ee:	2f 77       	andi	r18, 0x7F	; 127
    18f0:	15 c0       	rjmp	.+42     	; 0x191c <vfprintf+0x456>
    18f2:	52 01       	movw	r10, r4
    18f4:	f2 e0       	ldi	r31, 0x02	; 2
    18f6:	af 0e       	add	r10, r31
    18f8:	b1 1c       	adc	r11, r1
    18fa:	f2 01       	movw	r30, r4
    18fc:	40 80       	ld	r4, Z
    18fe:	51 80       	ldd	r5, Z+1	; 0x01
    1900:	26 ff       	sbrs	r18, 6
    1902:	03 c0       	rjmp	.+6      	; 0x190a <vfprintf+0x444>
    1904:	61 2f       	mov	r22, r17
    1906:	70 e0       	ldi	r23, 0x00	; 0
    1908:	02 c0       	rjmp	.+4      	; 0x190e <vfprintf+0x448>
    190a:	6f ef       	ldi	r22, 0xFF	; 255
    190c:	7f ef       	ldi	r23, 0xFF	; 255
    190e:	c2 01       	movw	r24, r4
    1910:	2a 8b       	std	Y+18, r18	; 0x12
    1912:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <strnlen_P>
    1916:	8c 01       	movw	r16, r24
    1918:	2a 89       	ldd	r18, Y+18	; 0x12
    191a:	20 68       	ori	r18, 0x80	; 128
    191c:	32 2e       	mov	r3, r18
    191e:	23 fd       	sbrc	r18, 3
    1920:	1a c0       	rjmp	.+52     	; 0x1956 <vfprintf+0x490>
    1922:	8f 2d       	mov	r24, r15
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	08 17       	cp	r16, r24
    1928:	19 07       	cpc	r17, r25
    192a:	a8 f4       	brcc	.+42     	; 0x1956 <vfprintf+0x490>
    192c:	b6 01       	movw	r22, r12
    192e:	80 e2       	ldi	r24, 0x20	; 32
    1930:	90 e0       	ldi	r25, 0x00	; 0
    1932:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1936:	fa 94       	dec	r15
    1938:	f4 cf       	rjmp	.-24     	; 0x1922 <vfprintf+0x45c>
    193a:	f2 01       	movw	r30, r4
    193c:	37 fc       	sbrc	r3, 7
    193e:	85 91       	lpm	r24, Z+
    1940:	37 fe       	sbrs	r3, 7
    1942:	81 91       	ld	r24, Z+
    1944:	2f 01       	movw	r4, r30
    1946:	b6 01       	movw	r22, r12
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    194e:	f1 10       	cpse	r15, r1
    1950:	fa 94       	dec	r15
    1952:	01 50       	subi	r16, 0x01	; 1
    1954:	11 09       	sbc	r17, r1
    1956:	01 15       	cp	r16, r1
    1958:	11 05       	cpc	r17, r1
    195a:	79 f7       	brne	.-34     	; 0x193a <vfprintf+0x474>
    195c:	f8 c0       	rjmp	.+496    	; 0x1b4e <vfprintf+0x688>
    195e:	84 36       	cpi	r24, 0x64	; 100
    1960:	11 f0       	breq	.+4      	; 0x1966 <vfprintf+0x4a0>
    1962:	89 36       	cpi	r24, 0x69	; 105
    1964:	59 f5       	brne	.+86     	; 0x19bc <vfprintf+0x4f6>
    1966:	52 01       	movw	r10, r4
    1968:	27 ff       	sbrs	r18, 7
    196a:	09 c0       	rjmp	.+18     	; 0x197e <vfprintf+0x4b8>
    196c:	f4 e0       	ldi	r31, 0x04	; 4
    196e:	af 0e       	add	r10, r31
    1970:	b1 1c       	adc	r11, r1
    1972:	f2 01       	movw	r30, r4
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	82 81       	ldd	r24, Z+2	; 0x02
    197a:	93 81       	ldd	r25, Z+3	; 0x03
    197c:	0a c0       	rjmp	.+20     	; 0x1992 <vfprintf+0x4cc>
    197e:	f2 e0       	ldi	r31, 0x02	; 2
    1980:	af 0e       	add	r10, r31
    1982:	b1 1c       	adc	r11, r1
    1984:	f2 01       	movw	r30, r4
    1986:	60 81       	ld	r22, Z
    1988:	71 81       	ldd	r23, Z+1	; 0x01
    198a:	07 2e       	mov	r0, r23
    198c:	00 0c       	add	r0, r0
    198e:	88 0b       	sbc	r24, r24
    1990:	99 0b       	sbc	r25, r25
    1992:	2f 76       	andi	r18, 0x6F	; 111
    1994:	32 2e       	mov	r3, r18
    1996:	97 ff       	sbrs	r25, 7
    1998:	09 c0       	rjmp	.+18     	; 0x19ac <vfprintf+0x4e6>
    199a:	90 95       	com	r25
    199c:	80 95       	com	r24
    199e:	70 95       	com	r23
    19a0:	61 95       	neg	r22
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	8f 4f       	sbci	r24, 0xFF	; 255
    19a6:	9f 4f       	sbci	r25, 0xFF	; 255
    19a8:	20 68       	ori	r18, 0x80	; 128
    19aa:	32 2e       	mov	r3, r18
    19ac:	2a e0       	ldi	r18, 0x0A	; 10
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	a3 01       	movw	r20, r6
    19b2:	0e 94 04 10 	call	0x2008	; 0x2008 <__ultoa_invert>
    19b6:	e8 2e       	mov	r14, r24
    19b8:	e6 18       	sub	r14, r6
    19ba:	3f c0       	rjmp	.+126    	; 0x1a3a <vfprintf+0x574>
    19bc:	02 2f       	mov	r16, r18
    19be:	85 37       	cpi	r24, 0x75	; 117
    19c0:	21 f4       	brne	.+8      	; 0x19ca <vfprintf+0x504>
    19c2:	0f 7e       	andi	r16, 0xEF	; 239
    19c4:	2a e0       	ldi	r18, 0x0A	; 10
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	1d c0       	rjmp	.+58     	; 0x1a04 <vfprintf+0x53e>
    19ca:	09 7f       	andi	r16, 0xF9	; 249
    19cc:	8f 36       	cpi	r24, 0x6F	; 111
    19ce:	91 f0       	breq	.+36     	; 0x19f4 <vfprintf+0x52e>
    19d0:	18 f4       	brcc	.+6      	; 0x19d8 <vfprintf+0x512>
    19d2:	88 35       	cpi	r24, 0x58	; 88
    19d4:	59 f0       	breq	.+22     	; 0x19ec <vfprintf+0x526>
    19d6:	c5 c0       	rjmp	.+394    	; 0x1b62 <vfprintf+0x69c>
    19d8:	80 37       	cpi	r24, 0x70	; 112
    19da:	19 f0       	breq	.+6      	; 0x19e2 <vfprintf+0x51c>
    19dc:	88 37       	cpi	r24, 0x78	; 120
    19de:	11 f0       	breq	.+4      	; 0x19e4 <vfprintf+0x51e>
    19e0:	c0 c0       	rjmp	.+384    	; 0x1b62 <vfprintf+0x69c>
    19e2:	00 61       	ori	r16, 0x10	; 16
    19e4:	04 ff       	sbrs	r16, 4
    19e6:	09 c0       	rjmp	.+18     	; 0x19fa <vfprintf+0x534>
    19e8:	04 60       	ori	r16, 0x04	; 4
    19ea:	07 c0       	rjmp	.+14     	; 0x19fa <vfprintf+0x534>
    19ec:	24 ff       	sbrs	r18, 4
    19ee:	08 c0       	rjmp	.+16     	; 0x1a00 <vfprintf+0x53a>
    19f0:	06 60       	ori	r16, 0x06	; 6
    19f2:	06 c0       	rjmp	.+12     	; 0x1a00 <vfprintf+0x53a>
    19f4:	28 e0       	ldi	r18, 0x08	; 8
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	05 c0       	rjmp	.+10     	; 0x1a04 <vfprintf+0x53e>
    19fa:	20 e1       	ldi	r18, 0x10	; 16
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	02 c0       	rjmp	.+4      	; 0x1a04 <vfprintf+0x53e>
    1a00:	20 e1       	ldi	r18, 0x10	; 16
    1a02:	32 e0       	ldi	r19, 0x02	; 2
    1a04:	52 01       	movw	r10, r4
    1a06:	07 ff       	sbrs	r16, 7
    1a08:	09 c0       	rjmp	.+18     	; 0x1a1c <vfprintf+0x556>
    1a0a:	f4 e0       	ldi	r31, 0x04	; 4
    1a0c:	af 0e       	add	r10, r31
    1a0e:	b1 1c       	adc	r11, r1
    1a10:	f2 01       	movw	r30, r4
    1a12:	60 81       	ld	r22, Z
    1a14:	71 81       	ldd	r23, Z+1	; 0x01
    1a16:	82 81       	ldd	r24, Z+2	; 0x02
    1a18:	93 81       	ldd	r25, Z+3	; 0x03
    1a1a:	08 c0       	rjmp	.+16     	; 0x1a2c <vfprintf+0x566>
    1a1c:	f2 e0       	ldi	r31, 0x02	; 2
    1a1e:	af 0e       	add	r10, r31
    1a20:	b1 1c       	adc	r11, r1
    1a22:	f2 01       	movw	r30, r4
    1a24:	60 81       	ld	r22, Z
    1a26:	71 81       	ldd	r23, Z+1	; 0x01
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	a3 01       	movw	r20, r6
    1a2e:	0e 94 04 10 	call	0x2008	; 0x2008 <__ultoa_invert>
    1a32:	e8 2e       	mov	r14, r24
    1a34:	e6 18       	sub	r14, r6
    1a36:	0f 77       	andi	r16, 0x7F	; 127
    1a38:	30 2e       	mov	r3, r16
    1a3a:	36 fe       	sbrs	r3, 6
    1a3c:	0b c0       	rjmp	.+22     	; 0x1a54 <vfprintf+0x58e>
    1a3e:	33 2d       	mov	r19, r3
    1a40:	3e 7f       	andi	r19, 0xFE	; 254
    1a42:	e1 16       	cp	r14, r17
    1a44:	50 f4       	brcc	.+20     	; 0x1a5a <vfprintf+0x594>
    1a46:	34 fe       	sbrs	r3, 4
    1a48:	0a c0       	rjmp	.+20     	; 0x1a5e <vfprintf+0x598>
    1a4a:	32 fc       	sbrc	r3, 2
    1a4c:	08 c0       	rjmp	.+16     	; 0x1a5e <vfprintf+0x598>
    1a4e:	33 2d       	mov	r19, r3
    1a50:	3e 7e       	andi	r19, 0xEE	; 238
    1a52:	05 c0       	rjmp	.+10     	; 0x1a5e <vfprintf+0x598>
    1a54:	0e 2d       	mov	r16, r14
    1a56:	33 2d       	mov	r19, r3
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <vfprintf+0x59a>
    1a5a:	0e 2d       	mov	r16, r14
    1a5c:	01 c0       	rjmp	.+2      	; 0x1a60 <vfprintf+0x59a>
    1a5e:	01 2f       	mov	r16, r17
    1a60:	34 ff       	sbrs	r19, 4
    1a62:	0c c0       	rjmp	.+24     	; 0x1a7c <vfprintf+0x5b6>
    1a64:	fe 01       	movw	r30, r28
    1a66:	ee 0d       	add	r30, r14
    1a68:	f1 1d       	adc	r31, r1
    1a6a:	80 81       	ld	r24, Z
    1a6c:	80 33       	cpi	r24, 0x30	; 48
    1a6e:	11 f4       	brne	.+4      	; 0x1a74 <vfprintf+0x5ae>
    1a70:	39 7e       	andi	r19, 0xE9	; 233
    1a72:	08 c0       	rjmp	.+16     	; 0x1a84 <vfprintf+0x5be>
    1a74:	32 ff       	sbrs	r19, 2
    1a76:	05 c0       	rjmp	.+10     	; 0x1a82 <vfprintf+0x5bc>
    1a78:	0e 5f       	subi	r16, 0xFE	; 254
    1a7a:	04 c0       	rjmp	.+8      	; 0x1a84 <vfprintf+0x5be>
    1a7c:	83 2f       	mov	r24, r19
    1a7e:	86 78       	andi	r24, 0x86	; 134
    1a80:	09 f0       	breq	.+2      	; 0x1a84 <vfprintf+0x5be>
    1a82:	0f 5f       	subi	r16, 0xFF	; 255
    1a84:	33 fd       	sbrc	r19, 3
    1a86:	13 c0       	rjmp	.+38     	; 0x1aae <vfprintf+0x5e8>
    1a88:	30 ff       	sbrs	r19, 0
    1a8a:	06 c0       	rjmp	.+12     	; 0x1a98 <vfprintf+0x5d2>
    1a8c:	1e 2d       	mov	r17, r14
    1a8e:	0f 15       	cp	r16, r15
    1a90:	18 f4       	brcc	.+6      	; 0x1a98 <vfprintf+0x5d2>
    1a92:	1f 0d       	add	r17, r15
    1a94:	10 1b       	sub	r17, r16
    1a96:	0f 2d       	mov	r16, r15
    1a98:	0f 15       	cp	r16, r15
    1a9a:	68 f4       	brcc	.+26     	; 0x1ab6 <vfprintf+0x5f0>
    1a9c:	b6 01       	movw	r22, r12
    1a9e:	80 e2       	ldi	r24, 0x20	; 32
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	3b 8b       	std	Y+19, r19	; 0x13
    1aa4:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1aa8:	0f 5f       	subi	r16, 0xFF	; 255
    1aaa:	3b 89       	ldd	r19, Y+19	; 0x13
    1aac:	f5 cf       	rjmp	.-22     	; 0x1a98 <vfprintf+0x5d2>
    1aae:	0f 15       	cp	r16, r15
    1ab0:	10 f4       	brcc	.+4      	; 0x1ab6 <vfprintf+0x5f0>
    1ab2:	f0 1a       	sub	r15, r16
    1ab4:	01 c0       	rjmp	.+2      	; 0x1ab8 <vfprintf+0x5f2>
    1ab6:	f1 2c       	mov	r15, r1
    1ab8:	34 ff       	sbrs	r19, 4
    1aba:	12 c0       	rjmp	.+36     	; 0x1ae0 <vfprintf+0x61a>
    1abc:	b6 01       	movw	r22, r12
    1abe:	80 e3       	ldi	r24, 0x30	; 48
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	3b 8b       	std	Y+19, r19	; 0x13
    1ac4:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1ac8:	3b 89       	ldd	r19, Y+19	; 0x13
    1aca:	32 ff       	sbrs	r19, 2
    1acc:	17 c0       	rjmp	.+46     	; 0x1afc <vfprintf+0x636>
    1ace:	31 fd       	sbrc	r19, 1
    1ad0:	03 c0       	rjmp	.+6      	; 0x1ad8 <vfprintf+0x612>
    1ad2:	88 e7       	ldi	r24, 0x78	; 120
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <vfprintf+0x616>
    1ad8:	88 e5       	ldi	r24, 0x58	; 88
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	b6 01       	movw	r22, r12
    1ade:	0c c0       	rjmp	.+24     	; 0x1af8 <vfprintf+0x632>
    1ae0:	83 2f       	mov	r24, r19
    1ae2:	86 78       	andi	r24, 0x86	; 134
    1ae4:	59 f0       	breq	.+22     	; 0x1afc <vfprintf+0x636>
    1ae6:	31 ff       	sbrs	r19, 1
    1ae8:	02 c0       	rjmp	.+4      	; 0x1aee <vfprintf+0x628>
    1aea:	8b e2       	ldi	r24, 0x2B	; 43
    1aec:	01 c0       	rjmp	.+2      	; 0x1af0 <vfprintf+0x62a>
    1aee:	80 e2       	ldi	r24, 0x20	; 32
    1af0:	37 fd       	sbrc	r19, 7
    1af2:	8d e2       	ldi	r24, 0x2D	; 45
    1af4:	b6 01       	movw	r22, r12
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1afc:	e1 16       	cp	r14, r17
    1afe:	38 f4       	brcc	.+14     	; 0x1b0e <vfprintf+0x648>
    1b00:	b6 01       	movw	r22, r12
    1b02:	80 e3       	ldi	r24, 0x30	; 48
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1b0a:	11 50       	subi	r17, 0x01	; 1
    1b0c:	f7 cf       	rjmp	.-18     	; 0x1afc <vfprintf+0x636>
    1b0e:	ea 94       	dec	r14
    1b10:	f3 01       	movw	r30, r6
    1b12:	ee 0d       	add	r30, r14
    1b14:	f1 1d       	adc	r31, r1
    1b16:	80 81       	ld	r24, Z
    1b18:	b6 01       	movw	r22, r12
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1b20:	e1 10       	cpse	r14, r1
    1b22:	f5 cf       	rjmp	.-22     	; 0x1b0e <vfprintf+0x648>
    1b24:	14 c0       	rjmp	.+40     	; 0x1b4e <vfprintf+0x688>
    1b26:	f4 e0       	ldi	r31, 0x04	; 4
    1b28:	ff 15       	cp	r31, r15
    1b2a:	58 f5       	brcc	.+86     	; 0x1b82 <vfprintf+0x6bc>
    1b2c:	84 e0       	ldi	r24, 0x04	; 4
    1b2e:	f8 1a       	sub	r15, r24
    1b30:	33 fe       	sbrs	r3, 3
    1b32:	1e c0       	rjmp	.+60     	; 0x1b70 <vfprintf+0x6aa>
    1b34:	21 10       	cpse	r2, r1
    1b36:	26 c0       	rjmp	.+76     	; 0x1b84 <vfprintf+0x6be>
    1b38:	03 ff       	sbrs	r16, 3
    1b3a:	2a c0       	rjmp	.+84     	; 0x1b90 <vfprintf+0x6ca>
    1b3c:	08 e6       	ldi	r16, 0x68	; 104
    1b3e:	10 e0       	ldi	r17, 0x00	; 0
    1b40:	f3 2d       	mov	r31, r3
    1b42:	f0 71       	andi	r31, 0x10	; 16
    1b44:	3f 2e       	mov	r3, r31
    1b46:	f8 01       	movw	r30, r16
    1b48:	84 91       	lpm	r24, Z
    1b4a:	81 11       	cpse	r24, r1
    1b4c:	24 c0       	rjmp	.+72     	; 0x1b96 <vfprintf+0x6d0>
    1b4e:	ff 20       	and	r15, r15
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <vfprintf+0x68e>
    1b52:	e5 cc       	rjmp	.-1590   	; 0x151e <vfprintf+0x58>
    1b54:	b6 01       	movw	r22, r12
    1b56:	80 e2       	ldi	r24, 0x20	; 32
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1b5e:	fa 94       	dec	r15
    1b60:	f6 cf       	rjmp	.-20     	; 0x1b4e <vfprintf+0x688>
    1b62:	f6 01       	movw	r30, r12
    1b64:	86 81       	ldd	r24, Z+6	; 0x06
    1b66:	97 81       	ldd	r25, Z+7	; 0x07
    1b68:	26 c0       	rjmp	.+76     	; 0x1bb6 <vfprintf+0x6f0>
    1b6a:	8f ef       	ldi	r24, 0xFF	; 255
    1b6c:	9f ef       	ldi	r25, 0xFF	; 255
    1b6e:	23 c0       	rjmp	.+70     	; 0x1bb6 <vfprintf+0x6f0>
    1b70:	b6 01       	movw	r22, r12
    1b72:	80 e2       	ldi	r24, 0x20	; 32
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1b7a:	fa 94       	dec	r15
    1b7c:	f1 10       	cpse	r15, r1
    1b7e:	f8 cf       	rjmp	.-16     	; 0x1b70 <vfprintf+0x6aa>
    1b80:	d9 cf       	rjmp	.-78     	; 0x1b34 <vfprintf+0x66e>
    1b82:	f1 2c       	mov	r15, r1
    1b84:	b6 01       	movw	r22, r12
    1b86:	82 2d       	mov	r24, r2
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1b8e:	d4 cf       	rjmp	.-88     	; 0x1b38 <vfprintf+0x672>
    1b90:	0c e6       	ldi	r16, 0x6C	; 108
    1b92:	10 e0       	ldi	r17, 0x00	; 0
    1b94:	d5 cf       	rjmp	.-86     	; 0x1b40 <vfprintf+0x67a>
    1b96:	31 10       	cpse	r3, r1
    1b98:	80 52       	subi	r24, 0x20	; 32
    1b9a:	b6 01       	movw	r22, r12
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <fputc>
    1ba2:	0f 5f       	subi	r16, 0xFF	; 255
    1ba4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba6:	cf cf       	rjmp	.-98     	; 0x1b46 <vfprintf+0x680>
    1ba8:	23 e0       	ldi	r18, 0x03	; 3
    1baa:	2f 15       	cp	r18, r15
    1bac:	10 f4       	brcc	.+4      	; 0x1bb2 <vfprintf+0x6ec>
    1bae:	83 e0       	ldi	r24, 0x03	; 3
    1bb0:	be cf       	rjmp	.-132    	; 0x1b2e <vfprintf+0x668>
    1bb2:	f1 2c       	mov	r15, r1
    1bb4:	c1 cf       	rjmp	.-126    	; 0x1b38 <vfprintf+0x672>
    1bb6:	63 96       	adiw	r28, 0x13	; 19
    1bb8:	e2 e1       	ldi	r30, 0x12	; 18
    1bba:	0c 94 1a 0e 	jmp	0x1c34	; 0x1c34 <__epilogue_restores__>

00001bbe <__divmodsi4>:
    1bbe:	05 2e       	mov	r0, r21
    1bc0:	97 fb       	bst	r25, 7
    1bc2:	1e f4       	brtc	.+6      	; 0x1bca <__divmodsi4+0xc>
    1bc4:	00 94       	com	r0
    1bc6:	0e 94 f6 0d 	call	0x1bec	; 0x1bec <__negsi2>
    1bca:	57 fd       	sbrc	r21, 7
    1bcc:	07 d0       	rcall	.+14     	; 0x1bdc <__divmodsi4_neg2>
    1bce:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__udivmodsi4>
    1bd2:	07 fc       	sbrc	r0, 7
    1bd4:	03 d0       	rcall	.+6      	; 0x1bdc <__divmodsi4_neg2>
    1bd6:	4e f4       	brtc	.+18     	; 0x1bea <__divmodsi4_exit>
    1bd8:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__negsi2>

00001bdc <__divmodsi4_neg2>:
    1bdc:	50 95       	com	r21
    1bde:	40 95       	com	r20
    1be0:	30 95       	com	r19
    1be2:	21 95       	neg	r18
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	4f 4f       	sbci	r20, 0xFF	; 255
    1be8:	5f 4f       	sbci	r21, 0xFF	; 255

00001bea <__divmodsi4_exit>:
    1bea:	08 95       	ret

00001bec <__negsi2>:
    1bec:	90 95       	com	r25
    1bee:	80 95       	com	r24
    1bf0:	70 95       	com	r23
    1bf2:	61 95       	neg	r22
    1bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfa:	08 95       	ret

00001bfc <__prologue_saves__>:
    1bfc:	2f 92       	push	r2
    1bfe:	3f 92       	push	r3
    1c00:	4f 92       	push	r4
    1c02:	5f 92       	push	r5
    1c04:	6f 92       	push	r6
    1c06:	7f 92       	push	r7
    1c08:	8f 92       	push	r8
    1c0a:	9f 92       	push	r9
    1c0c:	af 92       	push	r10
    1c0e:	bf 92       	push	r11
    1c10:	cf 92       	push	r12
    1c12:	df 92       	push	r13
    1c14:	ef 92       	push	r14
    1c16:	ff 92       	push	r15
    1c18:	0f 93       	push	r16
    1c1a:	1f 93       	push	r17
    1c1c:	cf 93       	push	r28
    1c1e:	df 93       	push	r29
    1c20:	cd b7       	in	r28, 0x3d	; 61
    1c22:	de b7       	in	r29, 0x3e	; 62
    1c24:	ca 1b       	sub	r28, r26
    1c26:	db 0b       	sbc	r29, r27
    1c28:	0f b6       	in	r0, 0x3f	; 63
    1c2a:	f8 94       	cli
    1c2c:	de bf       	out	0x3e, r29	; 62
    1c2e:	0f be       	out	0x3f, r0	; 63
    1c30:	cd bf       	out	0x3d, r28	; 61
    1c32:	09 94       	ijmp

00001c34 <__epilogue_restores__>:
    1c34:	2a 88       	ldd	r2, Y+18	; 0x12
    1c36:	39 88       	ldd	r3, Y+17	; 0x11
    1c38:	48 88       	ldd	r4, Y+16	; 0x10
    1c3a:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c3c:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c3e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c40:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c42:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c44:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c46:	b9 84       	ldd	r11, Y+9	; 0x09
    1c48:	c8 84       	ldd	r12, Y+8	; 0x08
    1c4a:	df 80       	ldd	r13, Y+7	; 0x07
    1c4c:	ee 80       	ldd	r14, Y+6	; 0x06
    1c4e:	fd 80       	ldd	r15, Y+5	; 0x05
    1c50:	0c 81       	ldd	r16, Y+4	; 0x04
    1c52:	1b 81       	ldd	r17, Y+3	; 0x03
    1c54:	aa 81       	ldd	r26, Y+2	; 0x02
    1c56:	b9 81       	ldd	r27, Y+1	; 0x01
    1c58:	ce 0f       	add	r28, r30
    1c5a:	d1 1d       	adc	r29, r1
    1c5c:	0f b6       	in	r0, 0x3f	; 63
    1c5e:	f8 94       	cli
    1c60:	de bf       	out	0x3e, r29	; 62
    1c62:	0f be       	out	0x3f, r0	; 63
    1c64:	cd bf       	out	0x3d, r28	; 61
    1c66:	ed 01       	movw	r28, r26
    1c68:	08 95       	ret

00001c6a <__udivmodsi4>:
    1c6a:	a1 e2       	ldi	r26, 0x21	; 33
    1c6c:	1a 2e       	mov	r1, r26
    1c6e:	aa 1b       	sub	r26, r26
    1c70:	bb 1b       	sub	r27, r27
    1c72:	fd 01       	movw	r30, r26
    1c74:	0d c0       	rjmp	.+26     	; 0x1c90 <__udivmodsi4_ep>

00001c76 <__udivmodsi4_loop>:
    1c76:	aa 1f       	adc	r26, r26
    1c78:	bb 1f       	adc	r27, r27
    1c7a:	ee 1f       	adc	r30, r30
    1c7c:	ff 1f       	adc	r31, r31
    1c7e:	a2 17       	cp	r26, r18
    1c80:	b3 07       	cpc	r27, r19
    1c82:	e4 07       	cpc	r30, r20
    1c84:	f5 07       	cpc	r31, r21
    1c86:	20 f0       	brcs	.+8      	; 0x1c90 <__udivmodsi4_ep>
    1c88:	a2 1b       	sub	r26, r18
    1c8a:	b3 0b       	sbc	r27, r19
    1c8c:	e4 0b       	sbc	r30, r20
    1c8e:	f5 0b       	sbc	r31, r21

00001c90 <__udivmodsi4_ep>:
    1c90:	66 1f       	adc	r22, r22
    1c92:	77 1f       	adc	r23, r23
    1c94:	88 1f       	adc	r24, r24
    1c96:	99 1f       	adc	r25, r25
    1c98:	1a 94       	dec	r1
    1c9a:	69 f7       	brne	.-38     	; 0x1c76 <__udivmodsi4_loop>
    1c9c:	60 95       	com	r22
    1c9e:	70 95       	com	r23
    1ca0:	80 95       	com	r24
    1ca2:	90 95       	com	r25
    1ca4:	9b 01       	movw	r18, r22
    1ca6:	ac 01       	movw	r20, r24
    1ca8:	bd 01       	movw	r22, r26
    1caa:	cf 01       	movw	r24, r30
    1cac:	08 95       	ret

00001cae <__ftoa_engine>:
    1cae:	28 30       	cpi	r18, 0x08	; 8
    1cb0:	08 f0       	brcs	.+2      	; 0x1cb4 <__ftoa_engine+0x6>
    1cb2:	27 e0       	ldi	r18, 0x07	; 7
    1cb4:	33 27       	eor	r19, r19
    1cb6:	da 01       	movw	r26, r20
    1cb8:	99 0f       	add	r25, r25
    1cba:	31 1d       	adc	r19, r1
    1cbc:	87 fd       	sbrc	r24, 7
    1cbe:	91 60       	ori	r25, 0x01	; 1
    1cc0:	00 96       	adiw	r24, 0x00	; 0
    1cc2:	61 05       	cpc	r22, r1
    1cc4:	71 05       	cpc	r23, r1
    1cc6:	39 f4       	brne	.+14     	; 0x1cd6 <__ftoa_engine+0x28>
    1cc8:	32 60       	ori	r19, 0x02	; 2
    1cca:	2e 5f       	subi	r18, 0xFE	; 254
    1ccc:	3d 93       	st	X+, r19
    1cce:	30 e3       	ldi	r19, 0x30	; 48
    1cd0:	2a 95       	dec	r18
    1cd2:	e1 f7       	brne	.-8      	; 0x1ccc <__ftoa_engine+0x1e>
    1cd4:	08 95       	ret
    1cd6:	9f 3f       	cpi	r25, 0xFF	; 255
    1cd8:	30 f0       	brcs	.+12     	; 0x1ce6 <__ftoa_engine+0x38>
    1cda:	80 38       	cpi	r24, 0x80	; 128
    1cdc:	71 05       	cpc	r23, r1
    1cde:	61 05       	cpc	r22, r1
    1ce0:	09 f0       	breq	.+2      	; 0x1ce4 <__ftoa_engine+0x36>
    1ce2:	3c 5f       	subi	r19, 0xFC	; 252
    1ce4:	3c 5f       	subi	r19, 0xFC	; 252
    1ce6:	3d 93       	st	X+, r19
    1ce8:	91 30       	cpi	r25, 0x01	; 1
    1cea:	08 f0       	brcs	.+2      	; 0x1cee <__ftoa_engine+0x40>
    1cec:	80 68       	ori	r24, 0x80	; 128
    1cee:	91 1d       	adc	r25, r1
    1cf0:	df 93       	push	r29
    1cf2:	cf 93       	push	r28
    1cf4:	1f 93       	push	r17
    1cf6:	0f 93       	push	r16
    1cf8:	ff 92       	push	r15
    1cfa:	ef 92       	push	r14
    1cfc:	19 2f       	mov	r17, r25
    1cfe:	98 7f       	andi	r25, 0xF8	; 248
    1d00:	96 95       	lsr	r25
    1d02:	e9 2f       	mov	r30, r25
    1d04:	96 95       	lsr	r25
    1d06:	96 95       	lsr	r25
    1d08:	e9 0f       	add	r30, r25
    1d0a:	ff 27       	eor	r31, r31
    1d0c:	e6 53       	subi	r30, 0x36	; 54
    1d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d10:	99 27       	eor	r25, r25
    1d12:	33 27       	eor	r19, r19
    1d14:	ee 24       	eor	r14, r14
    1d16:	ff 24       	eor	r15, r15
    1d18:	a7 01       	movw	r20, r14
    1d1a:	e7 01       	movw	r28, r14
    1d1c:	05 90       	lpm	r0, Z+
    1d1e:	08 94       	sec
    1d20:	07 94       	ror	r0
    1d22:	28 f4       	brcc	.+10     	; 0x1d2e <__ftoa_engine+0x80>
    1d24:	36 0f       	add	r19, r22
    1d26:	e7 1e       	adc	r14, r23
    1d28:	f8 1e       	adc	r15, r24
    1d2a:	49 1f       	adc	r20, r25
    1d2c:	51 1d       	adc	r21, r1
    1d2e:	66 0f       	add	r22, r22
    1d30:	77 1f       	adc	r23, r23
    1d32:	88 1f       	adc	r24, r24
    1d34:	99 1f       	adc	r25, r25
    1d36:	06 94       	lsr	r0
    1d38:	a1 f7       	brne	.-24     	; 0x1d22 <__ftoa_engine+0x74>
    1d3a:	05 90       	lpm	r0, Z+
    1d3c:	07 94       	ror	r0
    1d3e:	28 f4       	brcc	.+10     	; 0x1d4a <__ftoa_engine+0x9c>
    1d40:	e7 0e       	add	r14, r23
    1d42:	f8 1e       	adc	r15, r24
    1d44:	49 1f       	adc	r20, r25
    1d46:	56 1f       	adc	r21, r22
    1d48:	c1 1d       	adc	r28, r1
    1d4a:	77 0f       	add	r23, r23
    1d4c:	88 1f       	adc	r24, r24
    1d4e:	99 1f       	adc	r25, r25
    1d50:	66 1f       	adc	r22, r22
    1d52:	06 94       	lsr	r0
    1d54:	a1 f7       	brne	.-24     	; 0x1d3e <__ftoa_engine+0x90>
    1d56:	05 90       	lpm	r0, Z+
    1d58:	07 94       	ror	r0
    1d5a:	28 f4       	brcc	.+10     	; 0x1d66 <__ftoa_engine+0xb8>
    1d5c:	f8 0e       	add	r15, r24
    1d5e:	49 1f       	adc	r20, r25
    1d60:	56 1f       	adc	r21, r22
    1d62:	c7 1f       	adc	r28, r23
    1d64:	d1 1d       	adc	r29, r1
    1d66:	88 0f       	add	r24, r24
    1d68:	99 1f       	adc	r25, r25
    1d6a:	66 1f       	adc	r22, r22
    1d6c:	77 1f       	adc	r23, r23
    1d6e:	06 94       	lsr	r0
    1d70:	a1 f7       	brne	.-24     	; 0x1d5a <__ftoa_engine+0xac>
    1d72:	05 90       	lpm	r0, Z+
    1d74:	07 94       	ror	r0
    1d76:	20 f4       	brcc	.+8      	; 0x1d80 <__ftoa_engine+0xd2>
    1d78:	49 0f       	add	r20, r25
    1d7a:	56 1f       	adc	r21, r22
    1d7c:	c7 1f       	adc	r28, r23
    1d7e:	d8 1f       	adc	r29, r24
    1d80:	99 0f       	add	r25, r25
    1d82:	66 1f       	adc	r22, r22
    1d84:	77 1f       	adc	r23, r23
    1d86:	88 1f       	adc	r24, r24
    1d88:	06 94       	lsr	r0
    1d8a:	a9 f7       	brne	.-22     	; 0x1d76 <__ftoa_engine+0xc8>
    1d8c:	84 91       	lpm	r24, Z
    1d8e:	10 95       	com	r17
    1d90:	17 70       	andi	r17, 0x07	; 7
    1d92:	41 f0       	breq	.+16     	; 0x1da4 <__ftoa_engine+0xf6>
    1d94:	d6 95       	lsr	r29
    1d96:	c7 95       	ror	r28
    1d98:	57 95       	ror	r21
    1d9a:	47 95       	ror	r20
    1d9c:	f7 94       	ror	r15
    1d9e:	e7 94       	ror	r14
    1da0:	1a 95       	dec	r17
    1da2:	c1 f7       	brne	.-16     	; 0x1d94 <__ftoa_engine+0xe6>
    1da4:	e0 e7       	ldi	r30, 0x70	; 112
    1da6:	f0 e0       	ldi	r31, 0x00	; 0
    1da8:	68 94       	set
    1daa:	15 90       	lpm	r1, Z+
    1dac:	15 91       	lpm	r17, Z+
    1dae:	35 91       	lpm	r19, Z+
    1db0:	65 91       	lpm	r22, Z+
    1db2:	95 91       	lpm	r25, Z+
    1db4:	05 90       	lpm	r0, Z+
    1db6:	7f e2       	ldi	r23, 0x2F	; 47
    1db8:	73 95       	inc	r23
    1dba:	e1 18       	sub	r14, r1
    1dbc:	f1 0a       	sbc	r15, r17
    1dbe:	43 0b       	sbc	r20, r19
    1dc0:	56 0b       	sbc	r21, r22
    1dc2:	c9 0b       	sbc	r28, r25
    1dc4:	d0 09       	sbc	r29, r0
    1dc6:	c0 f7       	brcc	.-16     	; 0x1db8 <__ftoa_engine+0x10a>
    1dc8:	e1 0c       	add	r14, r1
    1dca:	f1 1e       	adc	r15, r17
    1dcc:	43 1f       	adc	r20, r19
    1dce:	56 1f       	adc	r21, r22
    1dd0:	c9 1f       	adc	r28, r25
    1dd2:	d0 1d       	adc	r29, r0
    1dd4:	7e f4       	brtc	.+30     	; 0x1df4 <__ftoa_engine+0x146>
    1dd6:	70 33       	cpi	r23, 0x30	; 48
    1dd8:	11 f4       	brne	.+4      	; 0x1dde <__ftoa_engine+0x130>
    1dda:	8a 95       	dec	r24
    1ddc:	e6 cf       	rjmp	.-52     	; 0x1daa <__ftoa_engine+0xfc>
    1dde:	e8 94       	clt
    1de0:	01 50       	subi	r16, 0x01	; 1
    1de2:	30 f0       	brcs	.+12     	; 0x1df0 <__ftoa_engine+0x142>
    1de4:	08 0f       	add	r16, r24
    1de6:	0a f4       	brpl	.+2      	; 0x1dea <__ftoa_engine+0x13c>
    1de8:	00 27       	eor	r16, r16
    1dea:	02 17       	cp	r16, r18
    1dec:	08 f4       	brcc	.+2      	; 0x1df0 <__ftoa_engine+0x142>
    1dee:	20 2f       	mov	r18, r16
    1df0:	23 95       	inc	r18
    1df2:	02 2f       	mov	r16, r18
    1df4:	7a 33       	cpi	r23, 0x3A	; 58
    1df6:	28 f0       	brcs	.+10     	; 0x1e02 <__ftoa_engine+0x154>
    1df8:	79 e3       	ldi	r23, 0x39	; 57
    1dfa:	7d 93       	st	X+, r23
    1dfc:	2a 95       	dec	r18
    1dfe:	e9 f7       	brne	.-6      	; 0x1dfa <__ftoa_engine+0x14c>
    1e00:	10 c0       	rjmp	.+32     	; 0x1e22 <__ftoa_engine+0x174>
    1e02:	7d 93       	st	X+, r23
    1e04:	2a 95       	dec	r18
    1e06:	89 f6       	brne	.-94     	; 0x1daa <__ftoa_engine+0xfc>
    1e08:	06 94       	lsr	r0
    1e0a:	97 95       	ror	r25
    1e0c:	67 95       	ror	r22
    1e0e:	37 95       	ror	r19
    1e10:	17 95       	ror	r17
    1e12:	17 94       	ror	r1
    1e14:	e1 18       	sub	r14, r1
    1e16:	f1 0a       	sbc	r15, r17
    1e18:	43 0b       	sbc	r20, r19
    1e1a:	56 0b       	sbc	r21, r22
    1e1c:	c9 0b       	sbc	r28, r25
    1e1e:	d0 09       	sbc	r29, r0
    1e20:	98 f0       	brcs	.+38     	; 0x1e48 <__ftoa_engine+0x19a>
    1e22:	23 95       	inc	r18
    1e24:	7e 91       	ld	r23, -X
    1e26:	73 95       	inc	r23
    1e28:	7a 33       	cpi	r23, 0x3A	; 58
    1e2a:	08 f0       	brcs	.+2      	; 0x1e2e <__ftoa_engine+0x180>
    1e2c:	70 e3       	ldi	r23, 0x30	; 48
    1e2e:	7c 93       	st	X, r23
    1e30:	20 13       	cpse	r18, r16
    1e32:	b8 f7       	brcc	.-18     	; 0x1e22 <__ftoa_engine+0x174>
    1e34:	7e 91       	ld	r23, -X
    1e36:	70 61       	ori	r23, 0x10	; 16
    1e38:	7d 93       	st	X+, r23
    1e3a:	30 f0       	brcs	.+12     	; 0x1e48 <__ftoa_engine+0x19a>
    1e3c:	83 95       	inc	r24
    1e3e:	71 e3       	ldi	r23, 0x31	; 49
    1e40:	7d 93       	st	X+, r23
    1e42:	70 e3       	ldi	r23, 0x30	; 48
    1e44:	2a 95       	dec	r18
    1e46:	e1 f7       	brne	.-8      	; 0x1e40 <__ftoa_engine+0x192>
    1e48:	11 24       	eor	r1, r1
    1e4a:	ef 90       	pop	r14
    1e4c:	ff 90       	pop	r15
    1e4e:	0f 91       	pop	r16
    1e50:	1f 91       	pop	r17
    1e52:	cf 91       	pop	r28
    1e54:	df 91       	pop	r29
    1e56:	99 27       	eor	r25, r25
    1e58:	87 fd       	sbrc	r24, 7
    1e5a:	90 95       	com	r25
    1e5c:	08 95       	ret

00001e5e <isgraph>:
    1e5e:	80 32       	cpi	r24, 0x20	; 32
    1e60:	09 f0       	breq	.+2      	; 0x1e64 <isprint+0x2>

00001e62 <isprint>:
    1e62:	91 11       	cpse	r25, r1
    1e64:	0c 94 10 13 	jmp	0x2620	; 0x2620 <__ctype_isfalse>
    1e68:	80 52       	subi	r24, 0x20	; 32
    1e6a:	8f 55       	subi	r24, 0x5F	; 95
    1e6c:	d8 f7       	brcc	.-10     	; 0x1e64 <isprint+0x2>
    1e6e:	08 95       	ret

00001e70 <toupper>:
    1e70:	91 11       	cpse	r25, r1
    1e72:	08 95       	ret
    1e74:	81 56       	subi	r24, 0x61	; 97
    1e76:	8a 51       	subi	r24, 0x1A	; 26
    1e78:	08 f4       	brcc	.+2      	; 0x1e7c <toupper+0xc>
    1e7a:	80 52       	subi	r24, 0x20	; 32
    1e7c:	85 58       	subi	r24, 0x85	; 133
    1e7e:	08 95       	ret

00001e80 <strnlen_P>:
    1e80:	fc 01       	movw	r30, r24
    1e82:	05 90       	lpm	r0, Z+
    1e84:	61 50       	subi	r22, 0x01	; 1
    1e86:	70 40       	sbci	r23, 0x00	; 0
    1e88:	01 10       	cpse	r0, r1
    1e8a:	d8 f7       	brcc	.-10     	; 0x1e82 <strnlen_P+0x2>
    1e8c:	80 95       	com	r24
    1e8e:	90 95       	com	r25
    1e90:	8e 0f       	add	r24, r30
    1e92:	9f 1f       	adc	r25, r31
    1e94:	08 95       	ret

00001e96 <memcpy>:
    1e96:	fb 01       	movw	r30, r22
    1e98:	dc 01       	movw	r26, r24
    1e9a:	02 c0       	rjmp	.+4      	; 0x1ea0 <memcpy+0xa>
    1e9c:	01 90       	ld	r0, Z+
    1e9e:	0d 92       	st	X+, r0
    1ea0:	41 50       	subi	r20, 0x01	; 1
    1ea2:	50 40       	sbci	r21, 0x00	; 0
    1ea4:	d8 f7       	brcc	.-10     	; 0x1e9c <memcpy+0x6>
    1ea6:	08 95       	ret

00001ea8 <strncmp>:
    1ea8:	fb 01       	movw	r30, r22
    1eaa:	dc 01       	movw	r26, r24
    1eac:	41 50       	subi	r20, 0x01	; 1
    1eae:	50 40       	sbci	r21, 0x00	; 0
    1eb0:	30 f0       	brcs	.+12     	; 0x1ebe <strncmp+0x16>
    1eb2:	8d 91       	ld	r24, X+
    1eb4:	01 90       	ld	r0, Z+
    1eb6:	80 19       	sub	r24, r0
    1eb8:	19 f4       	brne	.+6      	; 0x1ec0 <strncmp+0x18>
    1eba:	00 20       	and	r0, r0
    1ebc:	b9 f7       	brne	.-18     	; 0x1eac <strncmp+0x4>
    1ebe:	88 1b       	sub	r24, r24
    1ec0:	99 0b       	sbc	r25, r25
    1ec2:	08 95       	ret

00001ec4 <strnlen>:
    1ec4:	fc 01       	movw	r30, r24
    1ec6:	61 50       	subi	r22, 0x01	; 1
    1ec8:	70 40       	sbci	r23, 0x00	; 0
    1eca:	01 90       	ld	r0, Z+
    1ecc:	01 10       	cpse	r0, r1
    1ece:	d8 f7       	brcc	.-10     	; 0x1ec6 <strnlen+0x2>
    1ed0:	80 95       	com	r24
    1ed2:	90 95       	com	r25
    1ed4:	8e 0f       	add	r24, r30
    1ed6:	9f 1f       	adc	r25, r31
    1ed8:	08 95       	ret

00001eda <fputc>:
    1eda:	0f 93       	push	r16
    1edc:	1f 93       	push	r17
    1ede:	cf 93       	push	r28
    1ee0:	df 93       	push	r29
    1ee2:	fb 01       	movw	r30, r22
    1ee4:	23 81       	ldd	r18, Z+3	; 0x03
    1ee6:	21 fd       	sbrc	r18, 1
    1ee8:	03 c0       	rjmp	.+6      	; 0x1ef0 <fputc+0x16>
    1eea:	8f ef       	ldi	r24, 0xFF	; 255
    1eec:	9f ef       	ldi	r25, 0xFF	; 255
    1eee:	28 c0       	rjmp	.+80     	; 0x1f40 <fputc+0x66>
    1ef0:	22 ff       	sbrs	r18, 2
    1ef2:	16 c0       	rjmp	.+44     	; 0x1f20 <fputc+0x46>
    1ef4:	46 81       	ldd	r20, Z+6	; 0x06
    1ef6:	57 81       	ldd	r21, Z+7	; 0x07
    1ef8:	24 81       	ldd	r18, Z+4	; 0x04
    1efa:	35 81       	ldd	r19, Z+5	; 0x05
    1efc:	42 17       	cp	r20, r18
    1efe:	53 07       	cpc	r21, r19
    1f00:	44 f4       	brge	.+16     	; 0x1f12 <fputc+0x38>
    1f02:	a0 81       	ld	r26, Z
    1f04:	b1 81       	ldd	r27, Z+1	; 0x01
    1f06:	9d 01       	movw	r18, r26
    1f08:	2f 5f       	subi	r18, 0xFF	; 255
    1f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f0c:	31 83       	std	Z+1, r19	; 0x01
    1f0e:	20 83       	st	Z, r18
    1f10:	8c 93       	st	X, r24
    1f12:	26 81       	ldd	r18, Z+6	; 0x06
    1f14:	37 81       	ldd	r19, Z+7	; 0x07
    1f16:	2f 5f       	subi	r18, 0xFF	; 255
    1f18:	3f 4f       	sbci	r19, 0xFF	; 255
    1f1a:	37 83       	std	Z+7, r19	; 0x07
    1f1c:	26 83       	std	Z+6, r18	; 0x06
    1f1e:	10 c0       	rjmp	.+32     	; 0x1f40 <fputc+0x66>
    1f20:	eb 01       	movw	r28, r22
    1f22:	09 2f       	mov	r16, r25
    1f24:	18 2f       	mov	r17, r24
    1f26:	00 84       	ldd	r0, Z+8	; 0x08
    1f28:	f1 85       	ldd	r31, Z+9	; 0x09
    1f2a:	e0 2d       	mov	r30, r0
    1f2c:	09 95       	icall
    1f2e:	89 2b       	or	r24, r25
    1f30:	e1 f6       	brne	.-72     	; 0x1eea <fputc+0x10>
    1f32:	8e 81       	ldd	r24, Y+6	; 0x06
    1f34:	9f 81       	ldd	r25, Y+7	; 0x07
    1f36:	01 96       	adiw	r24, 0x01	; 1
    1f38:	9f 83       	std	Y+7, r25	; 0x07
    1f3a:	8e 83       	std	Y+6, r24	; 0x06
    1f3c:	81 2f       	mov	r24, r17
    1f3e:	90 2f       	mov	r25, r16
    1f40:	df 91       	pop	r29
    1f42:	cf 91       	pop	r28
    1f44:	1f 91       	pop	r17
    1f46:	0f 91       	pop	r16
    1f48:	08 95       	ret

00001f4a <printf>:
    1f4a:	a0 e0       	ldi	r26, 0x00	; 0
    1f4c:	b0 e0       	ldi	r27, 0x00	; 0
    1f4e:	eb ea       	ldi	r30, 0xAB	; 171
    1f50:	ff e0       	ldi	r31, 0x0F	; 15
    1f52:	0c 94 0e 0e 	jmp	0x1c1c	; 0x1c1c <__prologue_saves__+0x20>
    1f56:	ae 01       	movw	r20, r28
    1f58:	4b 5f       	subi	r20, 0xFB	; 251
    1f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f5c:	fa 01       	movw	r30, r20
    1f5e:	61 91       	ld	r22, Z+
    1f60:	71 91       	ld	r23, Z+
    1f62:	af 01       	movw	r20, r30
    1f64:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <__iob+0x2>
    1f68:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <__iob+0x3>
    1f6c:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <vfprintf>
    1f70:	e2 e0       	ldi	r30, 0x02	; 2
    1f72:	0c 94 2a 0e 	jmp	0x1c54	; 0x1c54 <__epilogue_restores__+0x20>

00001f76 <puts>:
    1f76:	0f 93       	push	r16
    1f78:	1f 93       	push	r17
    1f7a:	cf 93       	push	r28
    1f7c:	df 93       	push	r29
    1f7e:	e0 91 72 03 	lds	r30, 0x0372	; 0x800372 <__iob+0x2>
    1f82:	f0 91 73 03 	lds	r31, 0x0373	; 0x800373 <__iob+0x3>
    1f86:	23 81       	ldd	r18, Z+3	; 0x03
    1f88:	21 ff       	sbrs	r18, 1
    1f8a:	1b c0       	rjmp	.+54     	; 0x1fc2 <puts+0x4c>
    1f8c:	8c 01       	movw	r16, r24
    1f8e:	d0 e0       	ldi	r29, 0x00	; 0
    1f90:	c0 e0       	ldi	r28, 0x00	; 0
    1f92:	f8 01       	movw	r30, r16
    1f94:	81 91       	ld	r24, Z+
    1f96:	8f 01       	movw	r16, r30
    1f98:	60 91 72 03 	lds	r22, 0x0372	; 0x800372 <__iob+0x2>
    1f9c:	70 91 73 03 	lds	r23, 0x0373	; 0x800373 <__iob+0x3>
    1fa0:	db 01       	movw	r26, r22
    1fa2:	18 96       	adiw	r26, 0x08	; 8
    1fa4:	ed 91       	ld	r30, X+
    1fa6:	fc 91       	ld	r31, X
    1fa8:	19 97       	sbiw	r26, 0x09	; 9
    1faa:	88 23       	and	r24, r24
    1fac:	31 f0       	breq	.+12     	; 0x1fba <puts+0x44>
    1fae:	09 95       	icall
    1fb0:	89 2b       	or	r24, r25
    1fb2:	79 f3       	breq	.-34     	; 0x1f92 <puts+0x1c>
    1fb4:	df ef       	ldi	r29, 0xFF	; 255
    1fb6:	cf ef       	ldi	r28, 0xFF	; 255
    1fb8:	ec cf       	rjmp	.-40     	; 0x1f92 <puts+0x1c>
    1fba:	8a e0       	ldi	r24, 0x0A	; 10
    1fbc:	09 95       	icall
    1fbe:	89 2b       	or	r24, r25
    1fc0:	19 f0       	breq	.+6      	; 0x1fc8 <puts+0x52>
    1fc2:	8f ef       	ldi	r24, 0xFF	; 255
    1fc4:	9f ef       	ldi	r25, 0xFF	; 255
    1fc6:	02 c0       	rjmp	.+4      	; 0x1fcc <puts+0x56>
    1fc8:	8d 2f       	mov	r24, r29
    1fca:	9c 2f       	mov	r25, r28
    1fcc:	df 91       	pop	r29
    1fce:	cf 91       	pop	r28
    1fd0:	1f 91       	pop	r17
    1fd2:	0f 91       	pop	r16
    1fd4:	08 95       	ret

00001fd6 <sscanf>:
    1fd6:	ae e0       	ldi	r26, 0x0E	; 14
    1fd8:	b0 e0       	ldi	r27, 0x00	; 0
    1fda:	e1 ef       	ldi	r30, 0xF1	; 241
    1fdc:	ff e0       	ldi	r31, 0x0F	; 15
    1fde:	0c 94 0e 0e 	jmp	0x1c1c	; 0x1c1c <__prologue_saves__+0x20>
    1fe2:	85 e0       	ldi	r24, 0x05	; 5
    1fe4:	8c 83       	std	Y+4, r24	; 0x04
    1fe6:	8b 89       	ldd	r24, Y+19	; 0x13
    1fe8:	9c 89       	ldd	r25, Y+20	; 0x14
    1fea:	9a 83       	std	Y+2, r25	; 0x02
    1fec:	89 83       	std	Y+1, r24	; 0x01
    1fee:	ae 01       	movw	r20, r28
    1ff0:	49 5e       	subi	r20, 0xE9	; 233
    1ff2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ff4:	6d 89       	ldd	r22, Y+21	; 0x15
    1ff6:	7e 89       	ldd	r23, Y+22	; 0x16
    1ff8:	ce 01       	movw	r24, r28
    1ffa:	01 96       	adiw	r24, 0x01	; 1
    1ffc:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <vfscanf>
    2000:	2e 96       	adiw	r28, 0x0e	; 14
    2002:	e2 e0       	ldi	r30, 0x02	; 2
    2004:	0c 94 2a 0e 	jmp	0x1c54	; 0x1c54 <__epilogue_restores__+0x20>

00002008 <__ultoa_invert>:
    2008:	fa 01       	movw	r30, r20
    200a:	aa 27       	eor	r26, r26
    200c:	28 30       	cpi	r18, 0x08	; 8
    200e:	51 f1       	breq	.+84     	; 0x2064 <__ultoa_invert+0x5c>
    2010:	20 31       	cpi	r18, 0x10	; 16
    2012:	81 f1       	breq	.+96     	; 0x2074 <__ultoa_invert+0x6c>
    2014:	e8 94       	clt
    2016:	6f 93       	push	r22
    2018:	6e 7f       	andi	r22, 0xFE	; 254
    201a:	6e 5f       	subi	r22, 0xFE	; 254
    201c:	7f 4f       	sbci	r23, 0xFF	; 255
    201e:	8f 4f       	sbci	r24, 0xFF	; 255
    2020:	9f 4f       	sbci	r25, 0xFF	; 255
    2022:	af 4f       	sbci	r26, 0xFF	; 255
    2024:	b1 e0       	ldi	r27, 0x01	; 1
    2026:	3e d0       	rcall	.+124    	; 0x20a4 <__ultoa_invert+0x9c>
    2028:	b4 e0       	ldi	r27, 0x04	; 4
    202a:	3c d0       	rcall	.+120    	; 0x20a4 <__ultoa_invert+0x9c>
    202c:	67 0f       	add	r22, r23
    202e:	78 1f       	adc	r23, r24
    2030:	89 1f       	adc	r24, r25
    2032:	9a 1f       	adc	r25, r26
    2034:	a1 1d       	adc	r26, r1
    2036:	68 0f       	add	r22, r24
    2038:	79 1f       	adc	r23, r25
    203a:	8a 1f       	adc	r24, r26
    203c:	91 1d       	adc	r25, r1
    203e:	a1 1d       	adc	r26, r1
    2040:	6a 0f       	add	r22, r26
    2042:	71 1d       	adc	r23, r1
    2044:	81 1d       	adc	r24, r1
    2046:	91 1d       	adc	r25, r1
    2048:	a1 1d       	adc	r26, r1
    204a:	20 d0       	rcall	.+64     	; 0x208c <__ultoa_invert+0x84>
    204c:	09 f4       	brne	.+2      	; 0x2050 <__ultoa_invert+0x48>
    204e:	68 94       	set
    2050:	3f 91       	pop	r19
    2052:	2a e0       	ldi	r18, 0x0A	; 10
    2054:	26 9f       	mul	r18, r22
    2056:	11 24       	eor	r1, r1
    2058:	30 19       	sub	r19, r0
    205a:	30 5d       	subi	r19, 0xD0	; 208
    205c:	31 93       	st	Z+, r19
    205e:	de f6       	brtc	.-74     	; 0x2016 <__ultoa_invert+0xe>
    2060:	cf 01       	movw	r24, r30
    2062:	08 95       	ret
    2064:	46 2f       	mov	r20, r22
    2066:	47 70       	andi	r20, 0x07	; 7
    2068:	40 5d       	subi	r20, 0xD0	; 208
    206a:	41 93       	st	Z+, r20
    206c:	b3 e0       	ldi	r27, 0x03	; 3
    206e:	0f d0       	rcall	.+30     	; 0x208e <__ultoa_invert+0x86>
    2070:	c9 f7       	brne	.-14     	; 0x2064 <__ultoa_invert+0x5c>
    2072:	f6 cf       	rjmp	.-20     	; 0x2060 <__ultoa_invert+0x58>
    2074:	46 2f       	mov	r20, r22
    2076:	4f 70       	andi	r20, 0x0F	; 15
    2078:	40 5d       	subi	r20, 0xD0	; 208
    207a:	4a 33       	cpi	r20, 0x3A	; 58
    207c:	18 f0       	brcs	.+6      	; 0x2084 <__ultoa_invert+0x7c>
    207e:	49 5d       	subi	r20, 0xD9	; 217
    2080:	31 fd       	sbrc	r19, 1
    2082:	40 52       	subi	r20, 0x20	; 32
    2084:	41 93       	st	Z+, r20
    2086:	02 d0       	rcall	.+4      	; 0x208c <__ultoa_invert+0x84>
    2088:	a9 f7       	brne	.-22     	; 0x2074 <__ultoa_invert+0x6c>
    208a:	ea cf       	rjmp	.-44     	; 0x2060 <__ultoa_invert+0x58>
    208c:	b4 e0       	ldi	r27, 0x04	; 4
    208e:	a6 95       	lsr	r26
    2090:	97 95       	ror	r25
    2092:	87 95       	ror	r24
    2094:	77 95       	ror	r23
    2096:	67 95       	ror	r22
    2098:	ba 95       	dec	r27
    209a:	c9 f7       	brne	.-14     	; 0x208e <__ultoa_invert+0x86>
    209c:	00 97       	sbiw	r24, 0x00	; 0
    209e:	61 05       	cpc	r22, r1
    20a0:	71 05       	cpc	r23, r1
    20a2:	08 95       	ret
    20a4:	9b 01       	movw	r18, r22
    20a6:	ac 01       	movw	r20, r24
    20a8:	0a 2e       	mov	r0, r26
    20aa:	06 94       	lsr	r0
    20ac:	57 95       	ror	r21
    20ae:	47 95       	ror	r20
    20b0:	37 95       	ror	r19
    20b2:	27 95       	ror	r18
    20b4:	ba 95       	dec	r27
    20b6:	c9 f7       	brne	.-14     	; 0x20aa <__ultoa_invert+0xa2>
    20b8:	62 0f       	add	r22, r18
    20ba:	73 1f       	adc	r23, r19
    20bc:	84 1f       	adc	r24, r20
    20be:	95 1f       	adc	r25, r21
    20c0:	a0 1d       	adc	r26, r0
    20c2:	08 95       	ret

000020c4 <putval>:
    20c4:	20 fd       	sbrc	r18, 0
    20c6:	09 c0       	rjmp	.+18     	; 0x20da <putval+0x16>
    20c8:	fc 01       	movw	r30, r24
    20ca:	23 fd       	sbrc	r18, 3
    20cc:	05 c0       	rjmp	.+10     	; 0x20d8 <putval+0x14>
    20ce:	22 ff       	sbrs	r18, 2
    20d0:	02 c0       	rjmp	.+4      	; 0x20d6 <putval+0x12>
    20d2:	73 83       	std	Z+3, r23	; 0x03
    20d4:	62 83       	std	Z+2, r22	; 0x02
    20d6:	51 83       	std	Z+1, r21	; 0x01
    20d8:	40 83       	st	Z, r20
    20da:	08 95       	ret

000020dc <mulacc>:
    20dc:	44 fd       	sbrc	r20, 4
    20de:	10 c0       	rjmp	.+32     	; 0x2100 <mulacc+0x24>
    20e0:	46 fd       	sbrc	r20, 6
    20e2:	10 c0       	rjmp	.+32     	; 0x2104 <mulacc+0x28>
    20e4:	db 01       	movw	r26, r22
    20e6:	fc 01       	movw	r30, r24
    20e8:	aa 0f       	add	r26, r26
    20ea:	bb 1f       	adc	r27, r27
    20ec:	ee 1f       	adc	r30, r30
    20ee:	ff 1f       	adc	r31, r31
    20f0:	10 94       	com	r1
    20f2:	d1 f7       	brne	.-12     	; 0x20e8 <mulacc+0xc>
    20f4:	6a 0f       	add	r22, r26
    20f6:	7b 1f       	adc	r23, r27
    20f8:	8e 1f       	adc	r24, r30
    20fa:	9f 1f       	adc	r25, r31
    20fc:	31 e0       	ldi	r19, 0x01	; 1
    20fe:	03 c0       	rjmp	.+6      	; 0x2106 <mulacc+0x2a>
    2100:	33 e0       	ldi	r19, 0x03	; 3
    2102:	01 c0       	rjmp	.+2      	; 0x2106 <mulacc+0x2a>
    2104:	34 e0       	ldi	r19, 0x04	; 4
    2106:	66 0f       	add	r22, r22
    2108:	77 1f       	adc	r23, r23
    210a:	88 1f       	adc	r24, r24
    210c:	99 1f       	adc	r25, r25
    210e:	31 50       	subi	r19, 0x01	; 1
    2110:	d1 f7       	brne	.-12     	; 0x2106 <mulacc+0x2a>
    2112:	62 0f       	add	r22, r18
    2114:	71 1d       	adc	r23, r1
    2116:	81 1d       	adc	r24, r1
    2118:	91 1d       	adc	r25, r1
    211a:	08 95       	ret

0000211c <skip_spaces>:
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	cf 93       	push	r28
    2122:	df 93       	push	r29
    2124:	8c 01       	movw	r16, r24
    2126:	c8 01       	movw	r24, r16
    2128:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    212c:	ec 01       	movw	r28, r24
    212e:	97 fd       	sbrc	r25, 7
    2130:	08 c0       	rjmp	.+16     	; 0x2142 <skip_spaces+0x26>
    2132:	0e 94 13 13 	call	0x2626	; 0x2626 <isspace>
    2136:	89 2b       	or	r24, r25
    2138:	b1 f7       	brne	.-20     	; 0x2126 <skip_spaces+0xa>
    213a:	b8 01       	movw	r22, r16
    213c:	ce 01       	movw	r24, r28
    213e:	0e 94 65 13 	call	0x26ca	; 0x26ca <ungetc>
    2142:	ce 01       	movw	r24, r28
    2144:	df 91       	pop	r29
    2146:	cf 91       	pop	r28
    2148:	1f 91       	pop	r17
    214a:	0f 91       	pop	r16
    214c:	08 95       	ret

0000214e <conv_int>:
    214e:	a1 e0       	ldi	r26, 0x01	; 1
    2150:	b0 e0       	ldi	r27, 0x00	; 0
    2152:	ed ea       	ldi	r30, 0xAD	; 173
    2154:	f0 e1       	ldi	r31, 0x10	; 16
    2156:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__prologue_saves__+0xc>
    215a:	8c 01       	movw	r16, r24
    215c:	c6 2e       	mov	r12, r22
    215e:	7a 01       	movw	r14, r20
    2160:	29 83       	std	Y+1, r18	; 0x01
    2162:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    2166:	ac 01       	movw	r20, r24
    2168:	55 27       	eor	r21, r21
    216a:	29 81       	ldd	r18, Y+1	; 0x01
    216c:	4b 32       	cpi	r20, 0x2B	; 43
    216e:	51 05       	cpc	r21, r1
    2170:	21 f0       	breq	.+8      	; 0x217a <conv_int+0x2c>
    2172:	4d 32       	cpi	r20, 0x2D	; 45
    2174:	51 05       	cpc	r21, r1
    2176:	69 f4       	brne	.+26     	; 0x2192 <conv_int+0x44>
    2178:	20 68       	ori	r18, 0x80	; 128
    217a:	ca 94       	dec	r12
    217c:	c1 10       	cpse	r12, r1
    217e:	02 c0       	rjmp	.+4      	; 0x2184 <conv_int+0x36>
    2180:	80 e0       	ldi	r24, 0x00	; 0
    2182:	76 c0       	rjmp	.+236    	; 0x2270 <conv_int+0x122>
    2184:	c8 01       	movw	r24, r16
    2186:	29 83       	std	Y+1, r18	; 0x01
    2188:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    218c:	29 81       	ldd	r18, Y+1	; 0x01
    218e:	97 fd       	sbrc	r25, 7
    2190:	f7 cf       	rjmp	.-18     	; 0x2180 <conv_int+0x32>
    2192:	32 2f       	mov	r19, r18
    2194:	3d 7f       	andi	r19, 0xFD	; 253
    2196:	d3 2e       	mov	r13, r19
    2198:	32 2f       	mov	r19, r18
    219a:	30 73       	andi	r19, 0x30	; 48
    219c:	49 f5       	brne	.+82     	; 0x21f0 <conv_int+0xa2>
    219e:	80 33       	cpi	r24, 0x30	; 48
    21a0:	39 f5       	brne	.+78     	; 0x21f0 <conv_int+0xa2>
    21a2:	bb 24       	eor	r11, r11
    21a4:	ba 94       	dec	r11
    21a6:	bc 0c       	add	r11, r12
    21a8:	09 f4       	brne	.+2      	; 0x21ac <conv_int+0x5e>
    21aa:	4e c0       	rjmp	.+156    	; 0x2248 <conv_int+0xfa>
    21ac:	c8 01       	movw	r24, r16
    21ae:	29 83       	std	Y+1, r18	; 0x01
    21b0:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    21b4:	29 81       	ldd	r18, Y+1	; 0x01
    21b6:	97 fd       	sbrc	r25, 7
    21b8:	47 c0       	rjmp	.+142    	; 0x2248 <conv_int+0xfa>
    21ba:	38 2f       	mov	r19, r24
    21bc:	3f 7d       	andi	r19, 0xDF	; 223
    21be:	38 35       	cpi	r19, 0x58	; 88
    21c0:	69 f4       	brne	.+26     	; 0x21dc <conv_int+0x8e>
    21c2:	8d 2d       	mov	r24, r13
    21c4:	82 64       	ori	r24, 0x42	; 66
    21c6:	d8 2e       	mov	r13, r24
    21c8:	ca 94       	dec	r12
    21ca:	ca 94       	dec	r12
    21cc:	cc 20       	and	r12, r12
    21ce:	e1 f1       	breq	.+120    	; 0x2248 <conv_int+0xfa>
    21d0:	c8 01       	movw	r24, r16
    21d2:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    21d6:	97 ff       	sbrs	r25, 7
    21d8:	0b c0       	rjmp	.+22     	; 0x21f0 <conv_int+0xa2>
    21da:	36 c0       	rjmp	.+108    	; 0x2248 <conv_int+0xfa>
    21dc:	26 ff       	sbrs	r18, 6
    21de:	04 c0       	rjmp	.+8      	; 0x21e8 <conv_int+0x9a>
    21e0:	2d 2d       	mov	r18, r13
    21e2:	22 60       	ori	r18, 0x02	; 2
    21e4:	d2 2e       	mov	r13, r18
    21e6:	03 c0       	rjmp	.+6      	; 0x21ee <conv_int+0xa0>
    21e8:	3d 2d       	mov	r19, r13
    21ea:	32 61       	ori	r19, 0x12	; 18
    21ec:	d3 2e       	mov	r13, r19
    21ee:	cb 2c       	mov	r12, r11
    21f0:	81 2c       	mov	r8, r1
    21f2:	91 2c       	mov	r9, r1
    21f4:	54 01       	movw	r10, r8
    21f6:	20 ed       	ldi	r18, 0xD0	; 208
    21f8:	28 0f       	add	r18, r24
    21fa:	28 30       	cpi	r18, 0x08	; 8
    21fc:	80 f0       	brcs	.+32     	; 0x221e <conv_int+0xd0>
    21fe:	d4 fe       	sbrs	r13, 4
    2200:	04 c0       	rjmp	.+8      	; 0x220a <conv_int+0xbc>
    2202:	b8 01       	movw	r22, r16
    2204:	0e 94 65 13 	call	0x26ca	; 0x26ca <ungetc>
    2208:	1c c0       	rjmp	.+56     	; 0x2242 <conv_int+0xf4>
    220a:	2a 30       	cpi	r18, 0x0A	; 10
    220c:	40 f0       	brcs	.+16     	; 0x221e <conv_int+0xd0>
    220e:	d6 fe       	sbrs	r13, 6
    2210:	f8 cf       	rjmp	.-16     	; 0x2202 <conv_int+0xb4>
    2212:	2f 7d       	andi	r18, 0xDF	; 223
    2214:	3f ee       	ldi	r19, 0xEF	; 239
    2216:	32 0f       	add	r19, r18
    2218:	36 30       	cpi	r19, 0x06	; 6
    221a:	98 f7       	brcc	.-26     	; 0x2202 <conv_int+0xb4>
    221c:	27 50       	subi	r18, 0x07	; 7
    221e:	4d 2d       	mov	r20, r13
    2220:	c5 01       	movw	r24, r10
    2222:	b4 01       	movw	r22, r8
    2224:	0e 94 6e 10 	call	0x20dc	; 0x20dc <mulacc>
    2228:	4b 01       	movw	r8, r22
    222a:	5c 01       	movw	r10, r24
    222c:	8d 2d       	mov	r24, r13
    222e:	82 60       	ori	r24, 0x02	; 2
    2230:	d8 2e       	mov	r13, r24
    2232:	ca 94       	dec	r12
    2234:	cc 20       	and	r12, r12
    2236:	59 f0       	breq	.+22     	; 0x224e <conv_int+0x100>
    2238:	c8 01       	movw	r24, r16
    223a:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    223e:	97 ff       	sbrs	r25, 7
    2240:	da cf       	rjmp	.-76     	; 0x21f6 <conv_int+0xa8>
    2242:	d1 fc       	sbrc	r13, 1
    2244:	04 c0       	rjmp	.+8      	; 0x224e <conv_int+0x100>
    2246:	9c cf       	rjmp	.-200    	; 0x2180 <conv_int+0x32>
    2248:	81 2c       	mov	r8, r1
    224a:	91 2c       	mov	r9, r1
    224c:	54 01       	movw	r10, r8
    224e:	d7 fe       	sbrs	r13, 7
    2250:	08 c0       	rjmp	.+16     	; 0x2262 <conv_int+0x114>
    2252:	b0 94       	com	r11
    2254:	a0 94       	com	r10
    2256:	90 94       	com	r9
    2258:	80 94       	com	r8
    225a:	81 1c       	adc	r8, r1
    225c:	91 1c       	adc	r9, r1
    225e:	a1 1c       	adc	r10, r1
    2260:	b1 1c       	adc	r11, r1
    2262:	2d 2d       	mov	r18, r13
    2264:	b5 01       	movw	r22, r10
    2266:	a4 01       	movw	r20, r8
    2268:	c7 01       	movw	r24, r14
    226a:	0e 94 62 10 	call	0x20c4	; 0x20c4 <putval>
    226e:	81 e0       	ldi	r24, 0x01	; 1
    2270:	21 96       	adiw	r28, 0x01	; 1
    2272:	ec e0       	ldi	r30, 0x0C	; 12
    2274:	0c 94 20 0e 	jmp	0x1c40	; 0x1c40 <__epilogue_restores__+0xc>

00002278 <conv_brk>:
    2278:	a1 e2       	ldi	r26, 0x21	; 33
    227a:	b0 e0       	ldi	r27, 0x00	; 0
    227c:	e2 e4       	ldi	r30, 0x42	; 66
    227e:	f1 e1       	ldi	r31, 0x11	; 17
    2280:	0c 94 02 0e 	jmp	0x1c04	; 0x1c04 <__prologue_saves__+0x8>
    2284:	5c 01       	movw	r10, r24
    2286:	7a 01       	movw	r14, r20
    2288:	ce 01       	movw	r24, r28
    228a:	01 96       	adiw	r24, 0x01	; 1
    228c:	6c 01       	movw	r12, r24
    228e:	80 e2       	ldi	r24, 0x20	; 32
    2290:	f6 01       	movw	r30, r12
    2292:	11 92       	st	Z+, r1
    2294:	8a 95       	dec	r24
    2296:	e9 f7       	brne	.-6      	; 0x2292 <conv_brk+0x1a>
    2298:	f5 01       	movw	r30, r10
    229a:	83 80       	ldd	r8, Z+3	; 0x03
    229c:	40 e0       	ldi	r20, 0x00	; 0
    229e:	50 e0       	ldi	r21, 0x00	; 0
    22a0:	91 2c       	mov	r9, r1
    22a2:	71 2c       	mov	r7, r1
    22a4:	70 e0       	ldi	r23, 0x00	; 0
    22a6:	a1 e0       	ldi	r26, 0x01	; 1
    22a8:	b0 e0       	ldi	r27, 0x00	; 0
    22aa:	f9 01       	movw	r30, r18
    22ac:	83 fc       	sbrc	r8, 3
    22ae:	85 91       	lpm	r24, Z+
    22b0:	83 fe       	sbrs	r8, 3
    22b2:	81 91       	ld	r24, Z+
    22b4:	8f 01       	movw	r16, r30
    22b6:	98 2f       	mov	r25, r24
    22b8:	9f 01       	movw	r18, r30
    22ba:	81 11       	cpse	r24, r1
    22bc:	03 c0       	rjmp	.+6      	; 0x22c4 <conv_brk+0x4c>
    22be:	80 e0       	ldi	r24, 0x00	; 0
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	7c c0       	rjmp	.+248    	; 0x23bc <conv_brk+0x144>
    22c4:	8e 35       	cpi	r24, 0x5E	; 94
    22c6:	19 f4       	brne	.+6      	; 0x22ce <conv_brk+0x56>
    22c8:	41 15       	cp	r20, r1
    22ca:	51 05       	cpc	r21, r1
    22cc:	49 f1       	breq	.+82     	; 0x2320 <conv_brk+0xa8>
    22ce:	e7 2f       	mov	r30, r23
    22d0:	f0 e0       	ldi	r31, 0x00	; 0
    22d2:	e4 17       	cp	r30, r20
    22d4:	f5 07       	cpc	r31, r21
    22d6:	3c f4       	brge	.+14     	; 0x22e6 <conv_brk+0x6e>
    22d8:	8d 35       	cpi	r24, 0x5D	; 93
    22da:	59 f1       	breq	.+86     	; 0x2332 <conv_brk+0xba>
    22dc:	8d 32       	cpi	r24, 0x2D	; 45
    22de:	19 f4       	brne	.+6      	; 0x22e6 <conv_brk+0x6e>
    22e0:	77 20       	and	r7, r7
    22e2:	01 f1       	breq	.+64     	; 0x2324 <conv_brk+0xac>
    22e4:	03 c0       	rjmp	.+6      	; 0x22ec <conv_brk+0x74>
    22e6:	71 10       	cpse	r7, r1
    22e8:	01 c0       	rjmp	.+2      	; 0x22ec <conv_brk+0x74>
    22ea:	98 2e       	mov	r9, r24
    22ec:	89 2f       	mov	r24, r25
    22ee:	86 95       	lsr	r24
    22f0:	86 95       	lsr	r24
    22f2:	86 95       	lsr	r24
    22f4:	86 01       	movw	r16, r12
    22f6:	08 0f       	add	r16, r24
    22f8:	11 1d       	adc	r17, r1
    22fa:	89 2f       	mov	r24, r25
    22fc:	87 70       	andi	r24, 0x07	; 7
    22fe:	3d 01       	movw	r6, r26
    2300:	01 c0       	rjmp	.+2      	; 0x2304 <conv_brk+0x8c>
    2302:	66 0c       	add	r6, r6
    2304:	8a 95       	dec	r24
    2306:	ea f7       	brpl	.-6      	; 0x2302 <conv_brk+0x8a>
    2308:	f8 01       	movw	r30, r16
    230a:	80 81       	ld	r24, Z
    230c:	86 29       	or	r24, r6
    230e:	80 83       	st	Z, r24
    2310:	99 15       	cp	r25, r9
    2312:	59 f0       	breq	.+22     	; 0x232a <conv_brk+0xb2>
    2314:	99 15       	cp	r25, r9
    2316:	10 f4       	brcc	.+4      	; 0x231c <conv_brk+0xa4>
    2318:	9f 5f       	subi	r25, 0xFF	; 255
    231a:	e8 cf       	rjmp	.-48     	; 0x22ec <conv_brk+0x74>
    231c:	91 50       	subi	r25, 0x01	; 1
    231e:	e6 cf       	rjmp	.-52     	; 0x22ec <conv_brk+0x74>
    2320:	71 e0       	ldi	r23, 0x01	; 1
    2322:	04 c0       	rjmp	.+8      	; 0x232c <conv_brk+0xb4>
    2324:	77 24       	eor	r7, r7
    2326:	73 94       	inc	r7
    2328:	01 c0       	rjmp	.+2      	; 0x232c <conv_brk+0xb4>
    232a:	71 2c       	mov	r7, r1
    232c:	4f 5f       	subi	r20, 0xFF	; 255
    232e:	5f 4f       	sbci	r21, 0xFF	; 255
    2330:	bc cf       	rjmp	.-136    	; 0x22aa <conv_brk+0x32>
    2332:	77 20       	and	r7, r7
    2334:	19 f0       	breq	.+6      	; 0x233c <conv_brk+0xc4>
    2336:	8e 81       	ldd	r24, Y+6	; 0x06
    2338:	80 62       	ori	r24, 0x20	; 32
    233a:	8e 83       	std	Y+6, r24	; 0x06
    233c:	71 11       	cpse	r23, r1
    233e:	03 c0       	rjmp	.+6      	; 0x2346 <conv_brk+0xce>
    2340:	99 24       	eor	r9, r9
    2342:	93 94       	inc	r9
    2344:	16 c0       	rjmp	.+44     	; 0x2372 <conv_brk+0xfa>
    2346:	f6 01       	movw	r30, r12
    2348:	9e 01       	movw	r18, r28
    234a:	2f 5d       	subi	r18, 0xDF	; 223
    234c:	3f 4f       	sbci	r19, 0xFF	; 255
    234e:	80 81       	ld	r24, Z
    2350:	80 95       	com	r24
    2352:	81 93       	st	Z+, r24
    2354:	e2 17       	cp	r30, r18
    2356:	f3 07       	cpc	r31, r19
    2358:	d1 f7       	brne	.-12     	; 0x234e <conv_brk+0xd6>
    235a:	f2 cf       	rjmp	.-28     	; 0x2340 <conv_brk+0xc8>
    235c:	e1 14       	cp	r14, r1
    235e:	f1 04       	cpc	r15, r1
    2360:	29 f0       	breq	.+10     	; 0x236c <conv_brk+0xf4>
    2362:	f7 01       	movw	r30, r14
    2364:	80 83       	st	Z, r24
    2366:	c7 01       	movw	r24, r14
    2368:	01 96       	adiw	r24, 0x01	; 1
    236a:	7c 01       	movw	r14, r24
    236c:	61 50       	subi	r22, 0x01	; 1
    236e:	91 2c       	mov	r9, r1
    2370:	f9 f0       	breq	.+62     	; 0x23b0 <conv_brk+0x138>
    2372:	c5 01       	movw	r24, r10
    2374:	69 a3       	std	Y+33, r22	; 0x21
    2376:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    237a:	69 a1       	ldd	r22, Y+33	; 0x21
    237c:	97 fd       	sbrc	r25, 7
    237e:	16 c0       	rjmp	.+44     	; 0x23ac <conv_brk+0x134>
    2380:	28 2f       	mov	r18, r24
    2382:	26 95       	lsr	r18
    2384:	26 95       	lsr	r18
    2386:	26 95       	lsr	r18
    2388:	f6 01       	movw	r30, r12
    238a:	e2 0f       	add	r30, r18
    238c:	f1 1d       	adc	r31, r1
    238e:	20 81       	ld	r18, Z
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	ac 01       	movw	r20, r24
    2394:	47 70       	andi	r20, 0x07	; 7
    2396:	55 27       	eor	r21, r21
    2398:	02 c0       	rjmp	.+4      	; 0x239e <conv_brk+0x126>
    239a:	35 95       	asr	r19
    239c:	27 95       	ror	r18
    239e:	4a 95       	dec	r20
    23a0:	e2 f7       	brpl	.-8      	; 0x239a <conv_brk+0x122>
    23a2:	20 fd       	sbrc	r18, 0
    23a4:	db cf       	rjmp	.-74     	; 0x235c <conv_brk+0xe4>
    23a6:	b5 01       	movw	r22, r10
    23a8:	0e 94 65 13 	call	0x26ca	; 0x26ca <ungetc>
    23ac:	91 10       	cpse	r9, r1
    23ae:	87 cf       	rjmp	.-242    	; 0x22be <conv_brk+0x46>
    23b0:	e1 14       	cp	r14, r1
    23b2:	f1 04       	cpc	r15, r1
    23b4:	11 f0       	breq	.+4      	; 0x23ba <conv_brk+0x142>
    23b6:	f7 01       	movw	r30, r14
    23b8:	10 82       	st	Z, r1
    23ba:	c8 01       	movw	r24, r16
    23bc:	a1 96       	adiw	r28, 0x21	; 33
    23be:	ee e0       	ldi	r30, 0x0E	; 14
    23c0:	0c 94 1e 0e 	jmp	0x1c3c	; 0x1c3c <__epilogue_restores__+0x8>

000023c4 <vfscanf>:
    23c4:	4f 92       	push	r4
    23c6:	5f 92       	push	r5
    23c8:	7f 92       	push	r7
    23ca:	8f 92       	push	r8
    23cc:	9f 92       	push	r9
    23ce:	af 92       	push	r10
    23d0:	bf 92       	push	r11
    23d2:	cf 92       	push	r12
    23d4:	df 92       	push	r13
    23d6:	ef 92       	push	r14
    23d8:	ff 92       	push	r15
    23da:	0f 93       	push	r16
    23dc:	1f 93       	push	r17
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	1f 92       	push	r1
    23e4:	cd b7       	in	r28, 0x3d	; 61
    23e6:	de b7       	in	r29, 0x3e	; 62
    23e8:	6c 01       	movw	r12, r24
    23ea:	2b 01       	movw	r4, r22
    23ec:	5a 01       	movw	r10, r20
    23ee:	fc 01       	movw	r30, r24
    23f0:	17 82       	std	Z+7, r1	; 0x07
    23f2:	16 82       	std	Z+6, r1	; 0x06
    23f4:	71 2c       	mov	r7, r1
    23f6:	f6 01       	movw	r30, r12
    23f8:	f3 80       	ldd	r15, Z+3	; 0x03
    23fa:	f2 01       	movw	r30, r4
    23fc:	f3 fc       	sbrc	r15, 3
    23fe:	85 91       	lpm	r24, Z+
    2400:	f3 fe       	sbrs	r15, 3
    2402:	81 91       	ld	r24, Z+
    2404:	38 2f       	mov	r19, r24
    2406:	2f 01       	movw	r4, r30
    2408:	88 23       	and	r24, r24
    240a:	09 f4       	brne	.+2      	; 0x240e <vfscanf+0x4a>
    240c:	f3 c0       	rjmp	.+486    	; 0x25f4 <vfscanf+0x230>
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	39 83       	std	Y+1, r19	; 0x01
    2412:	0e 94 13 13 	call	0x2626	; 0x2626 <isspace>
    2416:	39 81       	ldd	r19, Y+1	; 0x01
    2418:	89 2b       	or	r24, r25
    241a:	21 f0       	breq	.+8      	; 0x2424 <vfscanf+0x60>
    241c:	c6 01       	movw	r24, r12
    241e:	0e 94 8e 10 	call	0x211c	; 0x211c <skip_spaces>
    2422:	e9 cf       	rjmp	.-46     	; 0x23f6 <vfscanf+0x32>
    2424:	35 32       	cpi	r19, 0x25	; 37
    2426:	41 f4       	brne	.+16     	; 0x2438 <vfscanf+0x74>
    2428:	f2 01       	movw	r30, r4
    242a:	f3 fc       	sbrc	r15, 3
    242c:	35 91       	lpm	r19, Z+
    242e:	f3 fe       	sbrs	r15, 3
    2430:	31 91       	ld	r19, Z+
    2432:	2f 01       	movw	r4, r30
    2434:	35 32       	cpi	r19, 0x25	; 37
    2436:	69 f4       	brne	.+26     	; 0x2452 <vfscanf+0x8e>
    2438:	c6 01       	movw	r24, r12
    243a:	39 83       	std	Y+1, r19	; 0x01
    243c:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    2440:	39 81       	ldd	r19, Y+1	; 0x01
    2442:	97 fd       	sbrc	r25, 7
    2444:	d5 c0       	rjmp	.+426    	; 0x25f0 <vfscanf+0x22c>
    2446:	38 17       	cp	r19, r24
    2448:	b1 f2       	breq	.-84     	; 0x23f6 <vfscanf+0x32>
    244a:	b6 01       	movw	r22, r12
    244c:	0e 94 65 13 	call	0x26ca	; 0x26ca <ungetc>
    2450:	d1 c0       	rjmp	.+418    	; 0x25f4 <vfscanf+0x230>
    2452:	3a 32       	cpi	r19, 0x2A	; 42
    2454:	39 f4       	brne	.+14     	; 0x2464 <vfscanf+0xa0>
    2456:	f3 fc       	sbrc	r15, 3
    2458:	35 91       	lpm	r19, Z+
    245a:	f3 fe       	sbrs	r15, 3
    245c:	31 91       	ld	r19, Z+
    245e:	2f 01       	movw	r4, r30
    2460:	51 e0       	ldi	r21, 0x01	; 1
    2462:	01 c0       	rjmp	.+2      	; 0x2466 <vfscanf+0xa2>
    2464:	50 e0       	ldi	r21, 0x00	; 0
    2466:	42 01       	movw	r8, r4
    2468:	10 e0       	ldi	r17, 0x00	; 0
    246a:	20 ed       	ldi	r18, 0xD0	; 208
    246c:	23 0f       	add	r18, r19
    246e:	2a 30       	cpi	r18, 0x0A	; 10
    2470:	90 f4       	brcc	.+36     	; 0x2496 <vfscanf+0xd2>
    2472:	52 60       	ori	r21, 0x02	; 2
    2474:	61 2f       	mov	r22, r17
    2476:	70 e0       	ldi	r23, 0x00	; 0
    2478:	80 e0       	ldi	r24, 0x00	; 0
    247a:	90 e0       	ldi	r25, 0x00	; 0
    247c:	40 e2       	ldi	r20, 0x20	; 32
    247e:	59 83       	std	Y+1, r21	; 0x01
    2480:	0e 94 6e 10 	call	0x20dc	; 0x20dc <mulacc>
    2484:	16 2f       	mov	r17, r22
    2486:	f4 01       	movw	r30, r8
    2488:	f3 fc       	sbrc	r15, 3
    248a:	35 91       	lpm	r19, Z+
    248c:	f3 fe       	sbrs	r15, 3
    248e:	31 91       	ld	r19, Z+
    2490:	4f 01       	movw	r8, r30
    2492:	59 81       	ldd	r21, Y+1	; 0x01
    2494:	ea cf       	rjmp	.-44     	; 0x246a <vfscanf+0xa6>
    2496:	05 2f       	mov	r16, r21
    2498:	23 2f       	mov	r18, r19
    249a:	24 01       	movw	r4, r8
    249c:	51 ff       	sbrs	r21, 1
    249e:	03 c0       	rjmp	.+6      	; 0x24a6 <vfscanf+0xe2>
    24a0:	11 11       	cpse	r17, r1
    24a2:	02 c0       	rjmp	.+4      	; 0x24a8 <vfscanf+0xe4>
    24a4:	a7 c0       	rjmp	.+334    	; 0x25f4 <vfscanf+0x230>
    24a6:	1f ef       	ldi	r17, 0xFF	; 255
    24a8:	38 36       	cpi	r19, 0x68	; 104
    24aa:	19 f0       	breq	.+6      	; 0x24b2 <vfscanf+0xee>
    24ac:	3c 36       	cpi	r19, 0x6C	; 108
    24ae:	59 f0       	breq	.+22     	; 0x24c6 <vfscanf+0x102>
    24b0:	11 c0       	rjmp	.+34     	; 0x24d4 <vfscanf+0x110>
    24b2:	f4 01       	movw	r30, r8
    24b4:	f3 fc       	sbrc	r15, 3
    24b6:	25 91       	lpm	r18, Z+
    24b8:	f3 fe       	sbrs	r15, 3
    24ba:	21 91       	ld	r18, Z+
    24bc:	2f 01       	movw	r4, r30
    24be:	28 36       	cpi	r18, 0x68	; 104
    24c0:	49 f4       	brne	.+18     	; 0x24d4 <vfscanf+0x110>
    24c2:	05 2f       	mov	r16, r21
    24c4:	08 60       	ori	r16, 0x08	; 8
    24c6:	04 60       	ori	r16, 0x04	; 4
    24c8:	f2 01       	movw	r30, r4
    24ca:	f3 fc       	sbrc	r15, 3
    24cc:	25 91       	lpm	r18, Z+
    24ce:	f3 fe       	sbrs	r15, 3
    24d0:	21 91       	ld	r18, Z+
    24d2:	2f 01       	movw	r4, r30
    24d4:	22 23       	and	r18, r18
    24d6:	09 f4       	brne	.+2      	; 0x24da <vfscanf+0x116>
    24d8:	8d c0       	rjmp	.+282    	; 0x25f4 <vfscanf+0x230>
    24da:	62 2f       	mov	r22, r18
    24dc:	70 e0       	ldi	r23, 0x00	; 0
    24de:	8a e6       	ldi	r24, 0x6A	; 106
    24e0:	91 e0       	ldi	r25, 0x01	; 1
    24e2:	29 83       	std	Y+1, r18	; 0x01
    24e4:	0e 94 1c 13 	call	0x2638	; 0x2638 <strchr_P>
    24e8:	29 81       	ldd	r18, Y+1	; 0x01
    24ea:	89 2b       	or	r24, r25
    24ec:	09 f4       	brne	.+2      	; 0x24f0 <vfscanf+0x12c>
    24ee:	82 c0       	rjmp	.+260    	; 0x25f4 <vfscanf+0x230>
    24f0:	00 fd       	sbrc	r16, 0
    24f2:	07 c0       	rjmp	.+14     	; 0x2502 <vfscanf+0x13e>
    24f4:	f5 01       	movw	r30, r10
    24f6:	e0 80       	ld	r14, Z
    24f8:	f1 80       	ldd	r15, Z+1	; 0x01
    24fa:	c5 01       	movw	r24, r10
    24fc:	02 96       	adiw	r24, 0x02	; 2
    24fe:	5c 01       	movw	r10, r24
    2500:	02 c0       	rjmp	.+4      	; 0x2506 <vfscanf+0x142>
    2502:	e1 2c       	mov	r14, r1
    2504:	f1 2c       	mov	r15, r1
    2506:	2e 36       	cpi	r18, 0x6E	; 110
    2508:	51 f4       	brne	.+20     	; 0x251e <vfscanf+0x15a>
    250a:	f6 01       	movw	r30, r12
    250c:	46 81       	ldd	r20, Z+6	; 0x06
    250e:	57 81       	ldd	r21, Z+7	; 0x07
    2510:	60 e0       	ldi	r22, 0x00	; 0
    2512:	70 e0       	ldi	r23, 0x00	; 0
    2514:	20 2f       	mov	r18, r16
    2516:	c7 01       	movw	r24, r14
    2518:	0e 94 62 10 	call	0x20c4	; 0x20c4 <putval>
    251c:	6c cf       	rjmp	.-296    	; 0x23f6 <vfscanf+0x32>
    251e:	23 36       	cpi	r18, 0x63	; 99
    2520:	91 f4       	brne	.+36     	; 0x2546 <vfscanf+0x182>
    2522:	01 ff       	sbrs	r16, 1
    2524:	11 e0       	ldi	r17, 0x01	; 1
    2526:	c6 01       	movw	r24, r12
    2528:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    252c:	97 fd       	sbrc	r25, 7
    252e:	60 c0       	rjmp	.+192    	; 0x25f0 <vfscanf+0x22c>
    2530:	e1 14       	cp	r14, r1
    2532:	f1 04       	cpc	r15, r1
    2534:	29 f0       	breq	.+10     	; 0x2540 <vfscanf+0x17c>
    2536:	f7 01       	movw	r30, r14
    2538:	80 83       	st	Z, r24
    253a:	c7 01       	movw	r24, r14
    253c:	01 96       	adiw	r24, 0x01	; 1
    253e:	7c 01       	movw	r14, r24
    2540:	11 50       	subi	r17, 0x01	; 1
    2542:	89 f7       	brne	.-30     	; 0x2526 <vfscanf+0x162>
    2544:	51 c0       	rjmp	.+162    	; 0x25e8 <vfscanf+0x224>
    2546:	2b 35       	cpi	r18, 0x5B	; 91
    2548:	59 f4       	brne	.+22     	; 0x2560 <vfscanf+0x19c>
    254a:	92 01       	movw	r18, r4
    254c:	a7 01       	movw	r20, r14
    254e:	61 2f       	mov	r22, r17
    2550:	c6 01       	movw	r24, r12
    2552:	0e 94 3c 11 	call	0x2278	; 0x2278 <conv_brk>
    2556:	2c 01       	movw	r4, r24
    2558:	89 2b       	or	r24, r25
    255a:	09 f0       	breq	.+2      	; 0x255e <vfscanf+0x19a>
    255c:	45 c0       	rjmp	.+138    	; 0x25e8 <vfscanf+0x224>
    255e:	3f c0       	rjmp	.+126    	; 0x25de <vfscanf+0x21a>
    2560:	c6 01       	movw	r24, r12
    2562:	29 83       	std	Y+1, r18	; 0x01
    2564:	0e 94 8e 10 	call	0x211c	; 0x211c <skip_spaces>
    2568:	29 81       	ldd	r18, Y+1	; 0x01
    256a:	97 fd       	sbrc	r25, 7
    256c:	41 c0       	rjmp	.+130    	; 0x25f0 <vfscanf+0x22c>
    256e:	2f 36       	cpi	r18, 0x6F	; 111
    2570:	59 f1       	breq	.+86     	; 0x25c8 <vfscanf+0x204>
    2572:	28 f4       	brcc	.+10     	; 0x257e <vfscanf+0x1ba>
    2574:	24 36       	cpi	r18, 0x64	; 100
    2576:	31 f1       	breq	.+76     	; 0x25c4 <vfscanf+0x200>
    2578:	29 36       	cpi	r18, 0x69	; 105
    257a:	49 f1       	breq	.+82     	; 0x25ce <vfscanf+0x20a>
    257c:	27 c0       	rjmp	.+78     	; 0x25cc <vfscanf+0x208>
    257e:	23 37       	cpi	r18, 0x73	; 115
    2580:	69 f0       	breq	.+26     	; 0x259c <vfscanf+0x1d8>
    2582:	25 37       	cpi	r18, 0x75	; 117
    2584:	f9 f0       	breq	.+62     	; 0x25c4 <vfscanf+0x200>
    2586:	22 c0       	rjmp	.+68     	; 0x25cc <vfscanf+0x208>
    2588:	e1 14       	cp	r14, r1
    258a:	f1 04       	cpc	r15, r1
    258c:	29 f0       	breq	.+10     	; 0x2598 <vfscanf+0x1d4>
    258e:	f7 01       	movw	r30, r14
    2590:	80 82       	st	Z, r8
    2592:	c7 01       	movw	r24, r14
    2594:	01 96       	adiw	r24, 0x01	; 1
    2596:	7c 01       	movw	r14, r24
    2598:	11 50       	subi	r17, 0x01	; 1
    259a:	71 f0       	breq	.+28     	; 0x25b8 <vfscanf+0x1f4>
    259c:	c6 01       	movw	r24, r12
    259e:	0e 94 27 13 	call	0x264e	; 0x264e <fgetc>
    25a2:	4c 01       	movw	r8, r24
    25a4:	97 fd       	sbrc	r25, 7
    25a6:	08 c0       	rjmp	.+16     	; 0x25b8 <vfscanf+0x1f4>
    25a8:	0e 94 13 13 	call	0x2626	; 0x2626 <isspace>
    25ac:	89 2b       	or	r24, r25
    25ae:	61 f3       	breq	.-40     	; 0x2588 <vfscanf+0x1c4>
    25b0:	b6 01       	movw	r22, r12
    25b2:	c4 01       	movw	r24, r8
    25b4:	0e 94 65 13 	call	0x26ca	; 0x26ca <ungetc>
    25b8:	e1 14       	cp	r14, r1
    25ba:	f1 04       	cpc	r15, r1
    25bc:	a9 f0       	breq	.+42     	; 0x25e8 <vfscanf+0x224>
    25be:	f7 01       	movw	r30, r14
    25c0:	10 82       	st	Z, r1
    25c2:	12 c0       	rjmp	.+36     	; 0x25e8 <vfscanf+0x224>
    25c4:	00 62       	ori	r16, 0x20	; 32
    25c6:	03 c0       	rjmp	.+6      	; 0x25ce <vfscanf+0x20a>
    25c8:	00 61       	ori	r16, 0x10	; 16
    25ca:	01 c0       	rjmp	.+2      	; 0x25ce <vfscanf+0x20a>
    25cc:	00 64       	ori	r16, 0x40	; 64
    25ce:	20 2f       	mov	r18, r16
    25d0:	a7 01       	movw	r20, r14
    25d2:	61 2f       	mov	r22, r17
    25d4:	c6 01       	movw	r24, r12
    25d6:	0e 94 a7 10 	call	0x214e	; 0x214e <conv_int>
    25da:	81 11       	cpse	r24, r1
    25dc:	05 c0       	rjmp	.+10     	; 0x25e8 <vfscanf+0x224>
    25de:	f6 01       	movw	r30, r12
    25e0:	83 81       	ldd	r24, Z+3	; 0x03
    25e2:	80 73       	andi	r24, 0x30	; 48
    25e4:	29 f4       	brne	.+10     	; 0x25f0 <vfscanf+0x22c>
    25e6:	06 c0       	rjmp	.+12     	; 0x25f4 <vfscanf+0x230>
    25e8:	00 fd       	sbrc	r16, 0
    25ea:	05 cf       	rjmp	.-502    	; 0x23f6 <vfscanf+0x32>
    25ec:	73 94       	inc	r7
    25ee:	03 cf       	rjmp	.-506    	; 0x23f6 <vfscanf+0x32>
    25f0:	77 20       	and	r7, r7
    25f2:	19 f0       	breq	.+6      	; 0x25fa <vfscanf+0x236>
    25f4:	87 2d       	mov	r24, r7
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	02 c0       	rjmp	.+4      	; 0x25fe <vfscanf+0x23a>
    25fa:	8f ef       	ldi	r24, 0xFF	; 255
    25fc:	9f ef       	ldi	r25, 0xFF	; 255
    25fe:	0f 90       	pop	r0
    2600:	df 91       	pop	r29
    2602:	cf 91       	pop	r28
    2604:	1f 91       	pop	r17
    2606:	0f 91       	pop	r16
    2608:	ff 90       	pop	r15
    260a:	ef 90       	pop	r14
    260c:	df 90       	pop	r13
    260e:	cf 90       	pop	r12
    2610:	bf 90       	pop	r11
    2612:	af 90       	pop	r10
    2614:	9f 90       	pop	r9
    2616:	8f 90       	pop	r8
    2618:	7f 90       	pop	r7
    261a:	5f 90       	pop	r5
    261c:	4f 90       	pop	r4
    261e:	08 95       	ret

00002620 <__ctype_isfalse>:
    2620:	99 27       	eor	r25, r25
    2622:	88 27       	eor	r24, r24

00002624 <__ctype_istrue>:
    2624:	08 95       	ret

00002626 <isspace>:
    2626:	91 11       	cpse	r25, r1
    2628:	0c 94 10 13 	jmp	0x2620	; 0x2620 <__ctype_isfalse>
    262c:	80 32       	cpi	r24, 0x20	; 32
    262e:	19 f0       	breq	.+6      	; 0x2636 <isspace+0x10>
    2630:	89 50       	subi	r24, 0x09	; 9
    2632:	85 50       	subi	r24, 0x05	; 5
    2634:	c8 f7       	brcc	.-14     	; 0x2628 <isspace+0x2>
    2636:	08 95       	ret

00002638 <strchr_P>:
    2638:	fc 01       	movw	r30, r24
    263a:	05 90       	lpm	r0, Z+
    263c:	06 16       	cp	r0, r22
    263e:	21 f0       	breq	.+8      	; 0x2648 <strchr_P+0x10>
    2640:	00 20       	and	r0, r0
    2642:	d9 f7       	brne	.-10     	; 0x263a <strchr_P+0x2>
    2644:	c0 01       	movw	r24, r0
    2646:	08 95       	ret
    2648:	31 97       	sbiw	r30, 0x01	; 1
    264a:	cf 01       	movw	r24, r30
    264c:	08 95       	ret

0000264e <fgetc>:
    264e:	cf 93       	push	r28
    2650:	df 93       	push	r29
    2652:	ec 01       	movw	r28, r24
    2654:	2b 81       	ldd	r18, Y+3	; 0x03
    2656:	20 ff       	sbrs	r18, 0
    2658:	33 c0       	rjmp	.+102    	; 0x26c0 <fgetc+0x72>
    265a:	26 ff       	sbrs	r18, 6
    265c:	0a c0       	rjmp	.+20     	; 0x2672 <fgetc+0x24>
    265e:	2f 7b       	andi	r18, 0xBF	; 191
    2660:	2b 83       	std	Y+3, r18	; 0x03
    2662:	8e 81       	ldd	r24, Y+6	; 0x06
    2664:	9f 81       	ldd	r25, Y+7	; 0x07
    2666:	01 96       	adiw	r24, 0x01	; 1
    2668:	9f 83       	std	Y+7, r25	; 0x07
    266a:	8e 83       	std	Y+6, r24	; 0x06
    266c:	8a 81       	ldd	r24, Y+2	; 0x02
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	29 c0       	rjmp	.+82     	; 0x26c4 <fgetc+0x76>
    2672:	22 ff       	sbrs	r18, 2
    2674:	0f c0       	rjmp	.+30     	; 0x2694 <fgetc+0x46>
    2676:	e8 81       	ld	r30, Y
    2678:	f9 81       	ldd	r31, Y+1	; 0x01
    267a:	80 81       	ld	r24, Z
    267c:	08 2e       	mov	r0, r24
    267e:	00 0c       	add	r0, r0
    2680:	99 0b       	sbc	r25, r25
    2682:	00 97       	sbiw	r24, 0x00	; 0
    2684:	19 f4       	brne	.+6      	; 0x268c <fgetc+0x3e>
    2686:	20 62       	ori	r18, 0x20	; 32
    2688:	2b 83       	std	Y+3, r18	; 0x03
    268a:	1a c0       	rjmp	.+52     	; 0x26c0 <fgetc+0x72>
    268c:	31 96       	adiw	r30, 0x01	; 1
    268e:	f9 83       	std	Y+1, r31	; 0x01
    2690:	e8 83       	st	Y, r30
    2692:	0e c0       	rjmp	.+28     	; 0x26b0 <fgetc+0x62>
    2694:	ea 85       	ldd	r30, Y+10	; 0x0a
    2696:	fb 85       	ldd	r31, Y+11	; 0x0b
    2698:	09 95       	icall
    269a:	97 ff       	sbrs	r25, 7
    269c:	09 c0       	rjmp	.+18     	; 0x26b0 <fgetc+0x62>
    269e:	2b 81       	ldd	r18, Y+3	; 0x03
    26a0:	01 96       	adiw	r24, 0x01	; 1
    26a2:	11 f0       	breq	.+4      	; 0x26a8 <fgetc+0x5a>
    26a4:	80 e2       	ldi	r24, 0x20	; 32
    26a6:	01 c0       	rjmp	.+2      	; 0x26aa <fgetc+0x5c>
    26a8:	80 e1       	ldi	r24, 0x10	; 16
    26aa:	82 2b       	or	r24, r18
    26ac:	8b 83       	std	Y+3, r24	; 0x03
    26ae:	08 c0       	rjmp	.+16     	; 0x26c0 <fgetc+0x72>
    26b0:	2e 81       	ldd	r18, Y+6	; 0x06
    26b2:	3f 81       	ldd	r19, Y+7	; 0x07
    26b4:	2f 5f       	subi	r18, 0xFF	; 255
    26b6:	3f 4f       	sbci	r19, 0xFF	; 255
    26b8:	3f 83       	std	Y+7, r19	; 0x07
    26ba:	2e 83       	std	Y+6, r18	; 0x06
    26bc:	99 27       	eor	r25, r25
    26be:	02 c0       	rjmp	.+4      	; 0x26c4 <fgetc+0x76>
    26c0:	8f ef       	ldi	r24, 0xFF	; 255
    26c2:	9f ef       	ldi	r25, 0xFF	; 255
    26c4:	df 91       	pop	r29
    26c6:	cf 91       	pop	r28
    26c8:	08 95       	ret

000026ca <ungetc>:
    26ca:	fb 01       	movw	r30, r22
    26cc:	23 81       	ldd	r18, Z+3	; 0x03
    26ce:	20 ff       	sbrs	r18, 0
    26d0:	12 c0       	rjmp	.+36     	; 0x26f6 <ungetc+0x2c>
    26d2:	26 fd       	sbrc	r18, 6
    26d4:	10 c0       	rjmp	.+32     	; 0x26f6 <ungetc+0x2c>
    26d6:	8f 3f       	cpi	r24, 0xFF	; 255
    26d8:	3f ef       	ldi	r19, 0xFF	; 255
    26da:	93 07       	cpc	r25, r19
    26dc:	61 f0       	breq	.+24     	; 0x26f6 <ungetc+0x2c>
    26de:	82 83       	std	Z+2, r24	; 0x02
    26e0:	2f 7d       	andi	r18, 0xDF	; 223
    26e2:	20 64       	ori	r18, 0x40	; 64
    26e4:	23 83       	std	Z+3, r18	; 0x03
    26e6:	26 81       	ldd	r18, Z+6	; 0x06
    26e8:	37 81       	ldd	r19, Z+7	; 0x07
    26ea:	21 50       	subi	r18, 0x01	; 1
    26ec:	31 09       	sbc	r19, r1
    26ee:	37 83       	std	Z+7, r19	; 0x07
    26f0:	26 83       	std	Z+6, r18	; 0x06
    26f2:	99 27       	eor	r25, r25
    26f4:	08 95       	ret
    26f6:	8f ef       	ldi	r24, 0xFF	; 255
    26f8:	9f ef       	ldi	r25, 0xFF	; 255
    26fa:	08 95       	ret

000026fc <eeprom_read_block>:
    26fc:	dc 01       	movw	r26, r24
    26fe:	cb 01       	movw	r24, r22

00002700 <eeprom_read_blraw>:
    2700:	fc 01       	movw	r30, r24
    2702:	f9 99       	sbic	0x1f, 1	; 31
    2704:	fe cf       	rjmp	.-4      	; 0x2702 <eeprom_read_blraw+0x2>
    2706:	06 c0       	rjmp	.+12     	; 0x2714 <eeprom_read_blraw+0x14>
    2708:	f2 bd       	out	0x22, r31	; 34
    270a:	e1 bd       	out	0x21, r30	; 33
    270c:	f8 9a       	sbi	0x1f, 0	; 31
    270e:	31 96       	adiw	r30, 0x01	; 1
    2710:	00 b4       	in	r0, 0x20	; 32
    2712:	0d 92       	st	X+, r0
    2714:	41 50       	subi	r20, 0x01	; 1
    2716:	50 40       	sbci	r21, 0x00	; 0
    2718:	b8 f7       	brcc	.-18     	; 0x2708 <eeprom_read_blraw+0x8>
    271a:	08 95       	ret

0000271c <eeprom_read_dword>:
    271c:	a6 e1       	ldi	r26, 0x16	; 22
    271e:	b0 e0       	ldi	r27, 0x00	; 0
    2720:	44 e0       	ldi	r20, 0x04	; 4
    2722:	50 e0       	ldi	r21, 0x00	; 0
    2724:	0c 94 80 13 	jmp	0x2700	; 0x2700 <eeprom_read_blraw>

00002728 <eeprom_write_block>:
    2728:	dc 01       	movw	r26, r24
    272a:	cb 01       	movw	r24, r22
    272c:	03 c0       	rjmp	.+6      	; 0x2734 <eeprom_write_block+0xc>
    272e:	2d 91       	ld	r18, X+
    2730:	0e 94 9f 13 	call	0x273e	; 0x273e <eeprom_write_r18>
    2734:	41 50       	subi	r20, 0x01	; 1
    2736:	50 40       	sbci	r21, 0x00	; 0
    2738:	d0 f7       	brcc	.-12     	; 0x272e <eeprom_write_block+0x6>
    273a:	08 95       	ret

0000273c <eeprom_write_byte>:
    273c:	26 2f       	mov	r18, r22

0000273e <eeprom_write_r18>:
    273e:	f9 99       	sbic	0x1f, 1	; 31
    2740:	fe cf       	rjmp	.-4      	; 0x273e <eeprom_write_r18>
    2742:	1f ba       	out	0x1f, r1	; 31
    2744:	92 bd       	out	0x22, r25	; 34
    2746:	81 bd       	out	0x21, r24	; 33
    2748:	20 bd       	out	0x20, r18	; 32
    274a:	0f b6       	in	r0, 0x3f	; 63
    274c:	f8 94       	cli
    274e:	fa 9a       	sbi	0x1f, 2	; 31
    2750:	f9 9a       	sbi	0x1f, 1	; 31
    2752:	0f be       	out	0x3f, r0	; 63
    2754:	01 96       	adiw	r24, 0x01	; 1
    2756:	08 95       	ret

00002758 <eeprom_write_dword>:
    2758:	24 2f       	mov	r18, r20
    275a:	0e 94 9f 13 	call	0x273e	; 0x273e <eeprom_write_r18>
    275e:	25 2f       	mov	r18, r21
    2760:	0e 94 9f 13 	call	0x273e	; 0x273e <eeprom_write_r18>
    2764:	0c 94 b4 13 	jmp	0x2768	; 0x2768 <eeprom_write_word>

00002768 <eeprom_write_word>:
    2768:	0e 94 9e 13 	call	0x273c	; 0x273c <eeprom_write_byte>
    276c:	27 2f       	mov	r18, r23
    276e:	0c 94 9f 13 	jmp	0x273e	; 0x273e <eeprom_write_r18>

00002772 <_exit>:
    2772:	f8 94       	cli

00002774 <__stop_program>:
    2774:	ff cf       	rjmp	.-2      	; 0x2774 <__stop_program>
